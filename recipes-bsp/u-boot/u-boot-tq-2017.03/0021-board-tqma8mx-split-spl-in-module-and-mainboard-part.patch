From bbe1ee55233b701c99181158381175303a8902e8 Mon Sep 17 00:00:00 2001
From: Markus Niebel <Markus.Niebel@tq-group.com>
Date: Wed, 16 Jan 2019 10:44:14 +0100
Subject: [PATCH 21/24] board: tqma8mx: split spl in module and mainboard part

Signed-off-by: Markus Niebel <Markus.Niebel@tq-group.com>
---
 board/tqc/tqma8mx/Makefile         |  1 +
 board/tqc/tqma8mx/spl-mba8mx.c     | 93 ++++++++++++++++++++++++++++++
 board/tqc/tqma8mx/spl.c            | 82 ++++++++++----------------
 board/tqc/tqma8mx/tqma8mx-mba8mx.c |  3 +
 4 files changed, 126 insertions(+), 53 deletions(-)
 create mode 100644 board/tqc/tqma8mx/spl-mba8mx.c

diff --git a/board/tqc/tqma8mx/Makefile b/board/tqc/tqma8mx/Makefile
index 244ee02140..eafd3c5f96 100644
--- a/board/tqc/tqma8mx/Makefile
+++ b/board/tqc/tqma8mx/Makefile
@@ -10,5 +10,6 @@ obj-$(CONFIG_MBA8MX) += tqma8mx-mba8mx.o
 
 ifdef CONFIG_SPL_BUILD
 obj-y += spl.o
+obj-$(CONFIG_MBA8MX) += spl-mba8mx.o
 obj-y += ddr/ddr_init.o ddr/ddrphy_train.o ddr/helper.o
 endif
diff --git a/board/tqc/tqma8mx/spl-mba8mx.c b/board/tqc/tqma8mx/spl-mba8mx.c
new file mode 100644
index 0000000000..8d96150a33
--- /dev/null
+++ b/board/tqc/tqma8mx/spl-mba8mx.c
@@ -0,0 +1,93 @@
+/*
+ * Copyright 2017 NXP
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#include <common.h>
+#include <asm/arch/clock.h>
+#include <asm/arch/imx8mq_pins.h>
+#include <asm/arch/sys_proto.h>
+#include <asm/imx-common/gpio.h>
+#include <asm/imx-common/iomux-v3.h>
+#include <asm/io.h>
+#include <errno.h>
+#include <fsl_esdhc.h>
+#include <mmc.h>
+#include <spl.h>
+
+#include "../common/tqc_bb.h"
+
+int tqc_bb_board_mmc_getwp(struct mmc *mmc);
+int tqc_bb_board_mmc_getcd(struct mmc *mmc);
+int tqc_bb_board_mmc_init(bd_t *bis);
+
+
+DECLARE_GLOBAL_DATA_PTR;
+
+#define USDHC2_CD_GPIO	IMX_GPIO_NR(2, 12)
+
+int tqc_bb_board_mmc_getcd(struct mmc *mmc)
+{
+	struct fsl_esdhc_cfg *cfg = (struct fsl_esdhc_cfg *)mmc->priv;
+	int ret = 0;
+
+	switch (cfg->esdhc_base) {
+	case USDHC2_BASE_ADDR:
+		ret = !gpio_get_value(USDHC2_CD_GPIO);
+		return ret;
+	}
+
+	return ret;
+}
+
+#define USDHC_PAD_CTRL	(PAD_CTL_DSE6 | PAD_CTL_HYS | PAD_CTL_PUE | \
+			 PAD_CTL_FSEL2)
+#define USDHC_GPIO_PAD_CTRL (PAD_CTL_PUE | PAD_CTL_DSE1)
+
+static iomux_v3_cfg_t const usdhc2_pads[] = {
+	IMX8MQ_PAD_SD2_CLK__USDHC2_CLK | MUX_PAD_CTRL(USDHC_PAD_CTRL), /* 0xd6 */
+	IMX8MQ_PAD_SD2_CMD__USDHC2_CMD | MUX_PAD_CTRL(USDHC_PAD_CTRL), /* 0xd6 */
+	IMX8MQ_PAD_SD2_DATA0__USDHC2_DATA0 | MUX_PAD_CTRL(USDHC_PAD_CTRL), /* 0xd6 */
+	IMX8MQ_PAD_SD2_DATA1__USDHC2_DATA1 | MUX_PAD_CTRL(USDHC_PAD_CTRL), /* 0xd6 */
+	IMX8MQ_PAD_SD2_DATA2__USDHC2_DATA2 | MUX_PAD_CTRL(USDHC_PAD_CTRL), /* 0x16 */
+	IMX8MQ_PAD_SD2_DATA3__USDHC2_DATA3 | MUX_PAD_CTRL(USDHC_PAD_CTRL), /* 0xd6 */
+	IMX8MQ_PAD_SD2_CD_B__GPIO2_IO12 | MUX_PAD_CTRL(USDHC_GPIO_PAD_CTRL),
+	IMX8MQ_PAD_SD2_RESET_B__GPIO2_IO19 | MUX_PAD_CTRL(USDHC_GPIO_PAD_CTRL),
+};
+
+static struct fsl_esdhc_cfg usdhc2_cfg = {
+	USDHC2_BASE_ADDR, 0, 4,
+};
+
+int tqc_bb_board_mmc_init(bd_t *bis)
+{
+	int i, ret;
+
+	puts("board_mmc_init\n");
+	/*
+	 * According to the board_mmc_init() the following map is done:
+	 * (U-Boot device node)    (Physical Port)
+	 * mmc0                    USDHC1
+	 * mmc1                    USDHC2
+	 */
+	usdhc2_cfg.sdhc_clk = mxc_get_clock(USDHC2_CLK_ROOT);
+	imx_iomux_v3_setup_multiple_pads(
+		usdhc2_pads, ARRAY_SIZE(usdhc2_pads));
+
+	ret = fsl_esdhc_initialize(bis, &usdhc2_cfg);
+	if (ret)
+		return ret;
+
+	return 0;
+}
+
+void tqc_bb_spl_board_init(void)
+{
+	puts("tqc_bb_spl_board_init\n");
+}
+
+void tqc_bb_board_init_f(ulong dummy)
+{
+	puts("tqc_bb_board_init_f\n");
+}
diff --git a/board/tqc/tqma8mx/spl.c b/board/tqc/tqma8mx/spl.c
index 6e54429e45..f395cfcf27 100644
--- a/board/tqc/tqma8mx/spl.c
+++ b/board/tqc/tqma8mx/spl.c
@@ -47,9 +47,7 @@ struct i2c_pads_info i2c_pad_info1 = {
 	},
 };
 
-#define USDHC2_CD_GPIO	IMX_GPIO_NR(2, 12)
 #define USDHC1_PWR_GPIO IMX_GPIO_NR(2, 10)
-#define USDHC2_PWR_GPIO IMX_GPIO_NR(2, 19)
 
 int board_mmc_getcd(struct mmc *mmc)
 {
@@ -60,12 +58,11 @@ int board_mmc_getcd(struct mmc *mmc)
 	case USDHC1_BASE_ADDR:
 		ret = 1;
 		break;
-	case USDHC2_BASE_ADDR:
-		ret = !gpio_get_value(USDHC2_CD_GPIO);
-		return ret;
+	default:
+		ret = tqc_bb_board_mmc_getcd(mmc);
 	}
 
-	return 1;
+	return ret;
 }
 
 #define USDHC_PAD_CTRL	(PAD_CTL_DSE6 | PAD_CTL_HYS | PAD_CTL_PUE | \
@@ -86,20 +83,8 @@ static iomux_v3_cfg_t const usdhc1_pads[] = {
 	IMX8MQ_PAD_SD1_RESET_B__GPIO2_IO10 | MUX_PAD_CTRL(NO_PAD_CTRL),
 };
 
-static iomux_v3_cfg_t const usdhc2_pads[] = {
-	IMX8MQ_PAD_SD2_CLK__USDHC2_CLK | MUX_PAD_CTRL(USDHC_PAD_CTRL), /* 0xd6 */
-	IMX8MQ_PAD_SD2_CMD__USDHC2_CMD | MUX_PAD_CTRL(USDHC_PAD_CTRL), /* 0xd6 */
-	IMX8MQ_PAD_SD2_DATA0__USDHC2_DATA0 | MUX_PAD_CTRL(USDHC_PAD_CTRL), /* 0xd6 */
-	IMX8MQ_PAD_SD2_DATA1__USDHC2_DATA1 | MUX_PAD_CTRL(USDHC_PAD_CTRL), /* 0xd6 */
-	IMX8MQ_PAD_SD2_DATA2__USDHC2_DATA2 | MUX_PAD_CTRL(USDHC_PAD_CTRL), /* 0x16 */
-	IMX8MQ_PAD_SD2_DATA3__USDHC2_DATA3 | MUX_PAD_CTRL(USDHC_PAD_CTRL), /* 0xd6 */
-	IMX8MQ_PAD_SD2_CD_B__GPIO2_IO12 | MUX_PAD_CTRL(USDHC_GPIO_PAD_CTRL),
-	IMX8MQ_PAD_SD2_RESET_B__GPIO2_IO19 | MUX_PAD_CTRL(USDHC_GPIO_PAD_CTRL),
-};
-
-static struct fsl_esdhc_cfg usdhc_cfg[2] = {
-	{USDHC1_BASE_ADDR, 0, 8},
-	{USDHC2_BASE_ADDR, 0, 4},
+static struct fsl_esdhc_cfg usdhc1_cfg = {
+	USDHC1_BASE_ADDR, 0, 8,
 };
 
 int board_mmc_init(bd_t *bis)
@@ -113,38 +98,21 @@ int board_mmc_init(bd_t *bis)
 	 * mmc0                    USDHC1
 	 * mmc1                    USDHC2
 	 */
-	for (i = 0; i < CONFIG_SYS_FSL_USDHC_NUM; i++) {
-		switch (i) {
-		case 0:
-			usdhc_cfg[0].sdhc_clk = mxc_get_clock(USDHC1_CLK_ROOT);
-			imx_iomux_v3_setup_multiple_pads(
-				usdhc1_pads, ARRAY_SIZE(usdhc1_pads));
-			gpio_request(USDHC1_PWR_GPIO, "usdhc1_reset");
-			gpio_direction_output(USDHC1_PWR_GPIO, 0);
-			udelay(500);
-			gpio_direction_output(USDHC1_PWR_GPIO, 1);
-			break;
-		case 1:
-			usdhc_cfg[1].sdhc_clk = mxc_get_clock(USDHC2_CLK_ROOT);
-			imx_iomux_v3_setup_multiple_pads(
-				usdhc2_pads, ARRAY_SIZE(usdhc2_pads));
-			gpio_request(USDHC2_PWR_GPIO, "usdhc2_reset");
-			gpio_direction_output(USDHC2_PWR_GPIO, 0);
-			udelay(500);
-			gpio_direction_output(USDHC2_PWR_GPIO, 1);
-			break;
-		default:
-			printf("Warning: you configured more USDHC controllers"
-				"(%d) than supported by the board\n", i + 1);
-			return -EINVAL;
-		}
-
-		ret = fsl_esdhc_initialize(bis, &usdhc_cfg[i]);
-		if (ret)
-			return ret;
-	}
+	usdhc1_cfg.sdhc_clk = mxc_get_clock(USDHC1_CLK_ROOT);
+	imx_iomux_v3_setup_multiple_pads(
+		usdhc1_pads, ARRAY_SIZE(usdhc1_pads));
+	gpio_request(USDHC1_PWR_GPIO, "usdhc1_reset");
+	gpio_direction_output(USDHC1_PWR_GPIO, 0);
+	udelay(500);
+	gpio_direction_output(USDHC1_PWR_GPIO, 1);
+
+	ret = fsl_esdhc_initialize(bis, &usdhc1_cfg);
+	if (ret)
+		return ret;
 
-	return 0;
+	ret = tqc_bb_board_mmc_init(bis);
+
+	return ret;
 }
 
 #ifdef CONFIG_POWER
@@ -194,11 +162,11 @@ void spl_board_init(void)
 {
 	puts("spl_board_init\n");
 
+	/* TrustZone Address Space Controller */
 	enable_tzc380();
 
-	/* Adjust pmic voltage to 1.0V for 800M */
+	/* TODO: Adjust pmic voltage to 1.0V for 800M */
 	setup_i2c(0, CONFIG_SYS_I2C_SPEED, 0x7f, &i2c_pad_info1);
-
 	power_init_board();
 
 	/* DDR initialization */
@@ -209,6 +177,9 @@ void spl_board_init(void)
 		puts("Back to ROM, SDP\n");
 		restore_boot_params();
 	}
+
+	tqc_bb_spl_board_init();
+
 	puts("Normal Boot\n");
 }
 
@@ -222,6 +193,9 @@ int board_fit_config_name_match(const char *name)
 }
 #endif
 
+/*
+ * TODO: to use DM and device tree, need to call spl_init()
+ */
 void board_init_f(ulong dummy)
 {
 	/* Clear global data */
@@ -233,6 +207,8 @@ void board_init_f(ulong dummy)
 
 	timer_init();
 
+	tqc_bb_board_init_f(dummy);
+
 	preloader_console_init();
 	puts("TQMa8MQ SPL\n");
 	/* Clear the BSS. */
diff --git a/board/tqc/tqma8mx/tqma8mx-mba8mx.c b/board/tqc/tqma8mx/tqma8mx-mba8mx.c
index 9119ee4c4c..815fb172dd 100644
--- a/board/tqc/tqma8mx/tqma8mx-mba8mx.c
+++ b/board/tqc/tqma8mx/tqma8mx-mba8mx.c
@@ -43,6 +43,9 @@ static iomux_v3_cfg_t const uart_pads[] = {
 	IMX8MQ_PAD_UART1_TXD__UART1_TX | MUX_PAD_CTRL(UART_PAD_CTRL),
 };
 
+/*
+ * NOTE: this is also used by SPL
+ */
 int tqc_bb_board_early_init_f(void)
 {
 	struct wdog_regs *wdog = (struct wdog_regs *)WDOG1_BASE_ADDR;
-- 
2.17.1

