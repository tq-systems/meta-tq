From 0f41b331c67433b9051c3ab589c14cd6078a6850 Mon Sep 17 00:00:00 2001
From: Markus Niebel <Markus.Niebel@tq-group.com>
Date: Mon, 24 Sep 2018 12:34:43 +0200
Subject: [PATCH] buildfixes

---
 board/tqc/tqma8xx/Kconfig            |   4 +-
 board/tqc/tqma8xx/tqma8xx-mba8xx.c   | 345 +--------------------------
 board/tqc/tqma8xx/tqma8xx.c          | 107 ---------
 configs/tqma8qx_mba8qx_mmc_defconfig |  41 ++++
 include/configs/tqma8xx.h            | 129 +---------
 5 files changed, 46 insertions(+), 580 deletions(-)
 create mode 100644 configs/tqma8qx_mba8qx_mmc_defconfig

diff --git a/board/tqc/tqma8xx/Kconfig b/board/tqc/tqma8xx/Kconfig
index 9a63d5cca9..c3e9551b33 100644
--- a/board/tqc/tqma8xx/Kconfig
+++ b/board/tqc/tqma8xx/Kconfig
@@ -18,8 +18,8 @@ choice
 config MBA8XX
 	bool "TQMa8xX on MBa8xX Starterkit"
 	select TQC_SDMMC
-	select DM_ETH
-	select NETDEVICES
+#	select DM_ETH
+#	select NETDEVICES
 	help
 	  Select the MBa8xX starterkit. This features a GigE Phy, USB, SD-Card
 	  etc.
diff --git a/board/tqc/tqma8xx/tqma8xx-mba8xx.c b/board/tqc/tqma8xx/tqma8xx-mba8xx.c
index e6ff8be4fb..e9004baf49 100644
--- a/board/tqc/tqma8xx/tqma8xx-mba8xx.c
+++ b/board/tqc/tqma8xx/tqma8xx-mba8xx.c
@@ -6,22 +6,17 @@
 #include <common.h>
 #include <malloc.h>
 #include <errno.h>
-#include <netdev.h>
 #include <fsl_ifc.h>
 #include <fdt_support.h>
 #include <linux/libfdt.h>
 #include <environment.h>
 #include <fsl_esdhc.h>
-#include <i2c.h>
-#include "pca953x.h"
 
 #include <asm/io.h>
-#include <asm/gpio.h>
 #include <asm/arch/clock.h>
 #include <asm/mach-imx/sci/sci.h>
 #include <asm/arch/imx8-pins.h>
 #include <dm.h>
-#include <usb.h>
 #include <asm/arch/iomux.h>
 #include <asm/arch/sys_proto.h>
 #include <power-domain.h>
@@ -95,231 +90,10 @@ int tqc_bb_board_early_init_f(void)
 	return 0;
 }
 
-#ifdef CONFIG_FSL_ESDHC
-
-#define USDHC1_CD_GPIO	IMX_GPIO_NR(4, 22)
-
-static struct fsl_esdhc_cfg usdhc_cfg = {USDHC2_BASE_ADDR, 0, 4};
-
-static iomux_cfg_t usdhc1_sd[] = {
-	SC_P_USDHC1_CLK | MUX_PAD_CTRL(ESDHC_CLK_PAD_CTRL),
-	SC_P_USDHC1_CMD | MUX_PAD_CTRL(ESDHC_PAD_CTRL),
-	SC_P_USDHC1_DATA0 | MUX_PAD_CTRL(ESDHC_PAD_CTRL),
-	SC_P_USDHC1_DATA1 | MUX_PAD_CTRL(ESDHC_PAD_CTRL),
-	SC_P_USDHC1_DATA2 | MUX_PAD_CTRL(ESDHC_PAD_CTRL),
-	SC_P_USDHC1_DATA3 | MUX_PAD_CTRL(ESDHC_PAD_CTRL),
-	SC_P_USDHC1_WP    | MUX_PAD_CTRL(ESDHC_PAD_CTRL), /* Mux for WP */
-	SC_P_USDHC1_CD_B  | MUX_MODE_ALT(4) | MUX_PAD_CTRL(ESDHC_PAD_CTRL), /* Mux for CD,  GPIO4 IO22 */
-	SC_P_USDHC1_RESET_B | MUX_PAD_CTRL(ESDHC_PAD_CTRL),
-	SC_P_USDHC1_VSELECT | MUX_PAD_CTRL(ESDHC_PAD_CTRL),
-};
-
-int tqc_bb_board_mmc_init(bd_t *bis)
-{
-	int i, ret;
-	struct power_domain pd;
-
-	/*
-	 * According to the board_mmc_init() the following map is done:
-	 * (U-boot device node)    (Physical Port)
-	 * mmc0                    USDHC1
-	 * mmc1                    USDHC2
-	 */
-	if (!power_domain_lookup_name("conn_sdhc1", &pd))
-		power_domain_on(&pd);
-	imx8_iomux_setup_multiple_pads(usdhc1_sd, ARRAY_SIZE(usdhc1_sd));
-	init_clk_usdhc(1);
-	usdhc_cfg.sdhc_clk = mxc_get_clock(MXC_ESDHC2_CLK);
-	gpio_request(USDHC1_CD_GPIO, "sd1_cd");
-	gpio_direction_input(USDHC1_CD_GPIO);
-	ret = fsl_esdhc_initialize(bis, &usdhc_cfg);
-	if (ret) {
-		printf("Warning: failed to initialize mmc dev %d\n", i);
-	}
-
-	return 0;
-}
-
-int tqc_bb_board_mmc_getcd(struct mmc *mmc)
-{
-	struct fsl_esdhc_cfg *cfg = (struct fsl_esdhc_cfg *)mmc->priv;
-	int ret = 0;
-
-	switch (cfg->esdhc_base) {
-	case USDHC2_BASE_ADDR:
-		ret = !gpio_get_value(USDHC1_CD_GPIO);
-		break;
-	}
-
-	return ret;
-}
-
-#endif /* CONFIG_FSL_ESDHC */
-
-
-#ifdef CONFIG_FEC_MXC
-#include <miiphy.h>
-
-static iomux_cfg_t pad_enet1[] = {
-	SC_P_SPDIF0_TX | MUX_MODE_ALT(3) | MUX_PAD_CTRL(ENET_INPUT_PAD_CTRL),
-	SC_P_SPDIF0_RX | MUX_MODE_ALT(3) | MUX_PAD_CTRL(ENET_INPUT_PAD_CTRL),
-	SC_P_ESAI0_TX3_RX2 | MUX_MODE_ALT(3) | MUX_PAD_CTRL(ENET_INPUT_PAD_CTRL),
-	SC_P_ESAI0_TX2_RX3 | MUX_MODE_ALT(3) | MUX_PAD_CTRL(ENET_INPUT_PAD_CTRL),
-	SC_P_ESAI0_TX1 | MUX_MODE_ALT(3) | MUX_PAD_CTRL(ENET_INPUT_PAD_CTRL),
-	SC_P_ESAI0_TX0 | MUX_MODE_ALT(3) | MUX_PAD_CTRL(ENET_INPUT_PAD_CTRL),
-	SC_P_ESAI0_SCKR | MUX_MODE_ALT(3) | MUX_PAD_CTRL(ENET_NORMAL_PAD_CTRL),
-	SC_P_ESAI0_TX4_RX1 | MUX_MODE_ALT(3) | MUX_PAD_CTRL(ENET_NORMAL_PAD_CTRL),
-	SC_P_ESAI0_TX5_RX0 | MUX_MODE_ALT(3) | MUX_PAD_CTRL(ENET_NORMAL_PAD_CTRL),
-	SC_P_ESAI0_FST  | MUX_MODE_ALT(3) | MUX_PAD_CTRL(ENET_NORMAL_PAD_CTRL),
-	SC_P_ESAI0_SCKT | MUX_MODE_ALT(3) | MUX_PAD_CTRL(ENET_NORMAL_PAD_CTRL),
-	SC_P_ESAI0_FSR  | MUX_MODE_ALT(3) | MUX_PAD_CTRL(ENET_NORMAL_PAD_CTRL),
-
-	/* Shared MDIO */
-	SC_P_ENET0_MDC | MUX_PAD_CTRL(ENET_NORMAL_PAD_CTRL),
-	SC_P_ENET0_MDIO | MUX_PAD_CTRL(ENET_NORMAL_PAD_CTRL),
-};
-
-static iomux_cfg_t pad_enet0[] = {
-	SC_P_ENET0_RGMII_RX_CTL | MUX_PAD_CTRL(ENET_INPUT_PAD_CTRL),
-	SC_P_ENET0_RGMII_RXD0 | MUX_PAD_CTRL(ENET_INPUT_PAD_CTRL),
-	SC_P_ENET0_RGMII_RXD1 | MUX_PAD_CTRL(ENET_INPUT_PAD_CTRL),
-	SC_P_ENET0_RGMII_RXD2 | MUX_PAD_CTRL(ENET_INPUT_PAD_CTRL),
-	SC_P_ENET0_RGMII_RXD3 | MUX_PAD_CTRL(ENET_INPUT_PAD_CTRL),
-	SC_P_ENET0_RGMII_RXC | MUX_PAD_CTRL(ENET_INPUT_PAD_CTRL),
-	SC_P_ENET0_RGMII_TX_CTL | MUX_PAD_CTRL(ENET_NORMAL_PAD_CTRL),
-	SC_P_ENET0_RGMII_TXD0 | MUX_PAD_CTRL(ENET_NORMAL_PAD_CTRL),
-	SC_P_ENET0_RGMII_TXD1 | MUX_PAD_CTRL(ENET_NORMAL_PAD_CTRL),
-	SC_P_ENET0_RGMII_TXD2 | MUX_PAD_CTRL(ENET_NORMAL_PAD_CTRL),
-	SC_P_ENET0_RGMII_TXD3 | MUX_PAD_CTRL(ENET_NORMAL_PAD_CTRL),
-	SC_P_ENET0_RGMII_TXC | MUX_PAD_CTRL(ENET_NORMAL_PAD_CTRL),
-
-	/* Shared MDIO */
-	SC_P_ENET0_MDC | MUX_PAD_CTRL(ENET_NORMAL_PAD_CTRL),
-	SC_P_ENET0_MDIO | MUX_PAD_CTRL(ENET_NORMAL_PAD_CTRL),
-};
-
-static void setup_iomux_fec(void)
-{
-	if (0 == CONFIG_FEC_ENET_DEV)
-		imx8_iomux_setup_multiple_pads(pad_enet0, ARRAY_SIZE(pad_enet0));
-	else
-		imx8_iomux_setup_multiple_pads(pad_enet1, ARRAY_SIZE(pad_enet1));
-}
-
-static void enet_device_phy_reset(void)
-{
-	struct gpio_desc desc;
-	int ret;
-
-	/* The BB_PER_RST_B will reset the ENET1 PHY */
-	if (0 == CONFIG_FEC_ENET_DEV) {
-		ret = dm_gpio_lookup_name("gpio@1a_4", &desc);
-		if (ret)
-			return;
-
-		ret = dm_gpio_request(&desc, "enet0_reset");
-		if (ret)
-			return;
-
-		dm_gpio_set_dir_flags(&desc, GPIOD_IS_OUT);
-		dm_gpio_set_value(&desc, 0);
-		udelay(50);
-		dm_gpio_set_value(&desc, 1);
-	}
-
-	/* The board has a long delay for this reset to become stable */
-	mdelay(200);
-}
-
-int board_eth_init(bd_t *bis)
-{
-	int ret;
-	struct power_domain pd;
-
-	printf("[%s] %d\n", __func__, __LINE__);
-
-	if (CONFIG_FEC_ENET_DEV) {
-		if (!power_domain_lookup_name("conn_enet1", &pd))
-			power_domain_on(&pd);
-	} else {
-		if (!power_domain_lookup_name("conn_enet0", &pd))
-			power_domain_on(&pd);
-	}
-
-	setup_iomux_fec();
-
-	ret = fecmxc_initialize_multi(bis, CONFIG_FEC_ENET_DEV,
-		CONFIG_FEC_MXC_PHYADDR, IMX_FEC_BASE);
-	if (ret)
-		printf("FEC1 MXC: %s:failed\n", __func__);
-
-	return ret;
-}
-
-int board_phy_config(struct phy_device *phydev)
-{
-	phy_write(phydev, MDIO_DEVAD_NONE, 0x1d, 0x1f);
-	phy_write(phydev, MDIO_DEVAD_NONE, 0x1e, 0x8);
-
-	phy_write(phydev, MDIO_DEVAD_NONE, 0x1d, 0x00);
-	phy_write(phydev, MDIO_DEVAD_NONE, 0x1e, 0x82ee);
-	phy_write(phydev, MDIO_DEVAD_NONE, 0x1d, 0x05);
-	phy_write(phydev, MDIO_DEVAD_NONE, 0x1e, 0x100);
-
-	if (phydev->drv->config)
-		phydev->drv->config(phydev);
-
-	return 0;
-}
-
-static int setup_fec(int ind)
-{
-	/* Reset ENET PHY */
-	enet_device_phy_reset();
-
-	return 0;
-}
-#endif
-
-#ifdef CONFIG_MXC_GPIO
-#define IOEXP_RESET IMX_GPIO_NR(1, 1)
-
-static iomux_cfg_t board_gpios[] = {
-	SC_P_SPI2_SDO | MUX_MODE_ALT(4) | MUX_PAD_CTRL(GPIO_PAD_CTRL),
-	SC_P_ENET0_REFCLK_125M_25M | MUX_MODE_ALT(4) | MUX_PAD_CTRL(GPIO_PAD_CTRL),
-};
-
-static void board_gpio_init(void)
-{
-#if 0
-	int ret;
-	struct gpio_desc desc;
-
-	ret = dm_gpio_lookup_name("gpio@1a_3", &desc);
-	if (ret)
-		return;
-
-	ret = dm_gpio_request(&desc, "bb_per_rst_b");
-	if (ret)
-		return;
-
-	dm_gpio_set_dir_flags(&desc, GPIOD_IS_OUT);
-	dm_gpio_set_value(&desc, 0);
-	udelay(50);
-	dm_gpio_set_value(&desc, 1);
-
-	imx8_iomux_setup_multiple_pads(board_gpios, ARRAY_SIZE(board_gpios));
-
-	/* enable i2c port expander assert reset line */
-	gpio_request(IOEXP_RESET, "ioexp_rst");
-	gpio_direction_output(IOEXP_RESET, 1);
-#endif
-}
-#endif
 
 int tqc_bb_checkboard(void)
 {
-	puts("Board: iMX8QXP MEK\n");
+	puts("Board: TQMa8xX on MBa8xX iMX8QXP\n");
 
 	print_bootinfo();
 
@@ -345,123 +119,11 @@ int tqc_bb_checkboard(void)
 	return 0;
 }
 
-#ifdef CONFIG_FSL_HSIO
-
-#warning
-
-#endif
-
-#ifdef CONFIG_USB_XHCI_IMX8
-
-#define USB_TYPEC_SEL IMX_GPIO_NR(5, 9)
-static iomux_cfg_t ss_mux_gpio[] = {
-	SC_P_ENET0_REFCLK_125M_25M | MUX_MODE_ALT(4) | MUX_PAD_CTRL(GPIO_PAD_CTRL),
-};
-
-static void setup_typec(void)
-{
-#if 0
-	struct udevice *bus;
-	uint8_t chip = 0x50;
-	int ret;
-	struct gpio_desc typec_en_desc;
-
-	imx8_iomux_setup_multiple_pads(ss_mux_gpio, ARRAY_SIZE(ss_mux_gpio));
-	gpio_request(USB_TYPEC_SEL, "typec_sel");
-
-	ret = dm_gpio_lookup_name("gpio@1a_7", &typec_en_desc);
-	if (ret) {
-		printf("%s lookup gpio@1a_7 failed ret = %d\n", __func__, ret);
-		return;
-	}
-
-	ret = dm_gpio_request(&typec_en_desc, "typec_en");
-	if (ret) {
-		printf("%s request typec_en failed ret = %d\n", __func__, ret);
-		return;
-	}
-
-	/* Enable SS MUX */
-	dm_gpio_set_dir_flags(&typec_en_desc, GPIOD_IS_OUT | GPIOD_IS_OUT_ACTIVE);
-
-	ret = uclass_get_device_by_seq(UCLASS_I2C, 1, &bus);
-	if (ret) {
-		printf("%s: Can't find bus\n", __func__);
-		return;
-	}
-
-	ret = dm_i2c_probe(bus, chip, 0, &tcpc_i2c_dev);
-	if (ret) {
-		printf("%s: Can't find device id=0x%x\n",
-			__func__, chip);
-		return;
-	}
-#endif
-}
-
-#if 0
-void ss_mux_select(enum typec_cc_polarity pol)
-{
-	if (pol == TYPEC_POLARITY_CC1)
-		gpio_direction_output(USB_TYPEC_SEL, 0);
-	else
-		gpio_direction_output(USB_TYPEC_SEL, 1);
-}
-
-int board_usb_init(int index, enum usb_init_type init)
-{
-	int ret = 0;
-
-	if (init == USB_INIT_HOST && tcpc_i2c_dev)
-		ret = tcpc_setup_dfp_mode(tcpc_i2c_dev, &ss_mux_select);
-
-	return ret;
-
-}
-
-int board_usb_cleanup(int index, enum usb_init_type init)
-{
-	int ret = 0;
-
-	if (init == USB_INIT_HOST && tcpc_i2c_dev)
-		ret = tcpc_disable_vbus(tcpc_i2c_dev);
-
-	return ret;
-}
-#endif
-#endif
-
 int tqc_bb_board_init(void)
 {
-#ifdef CONFIG_MXC_GPIO
-	board_gpio_init();
-#endif
-
-#ifdef CONFIG_FEC_MXC
-	setup_fec(CONFIG_FEC_ENET_DEV);
-#endif
-
-#ifdef CONFIG_USB_XHCI_IMX8
-	setup_typec();
-#endif
-
 	return 0;
 }
 
-void tqc_bb_board_quiesce_devices()
-{
-	const char *power_on_devices[] = {
-		"dma_lpuart0",
-
-		/* HIFI DSP boot */
-		"audio_sai0",
-		"audio_ocram",
-	};
-
-	power_off_pd_devices(power_on_devices, ARRAY_SIZE(power_on_devices));
-}
-
-
 #ifdef CONFIG_OF_BOARD_SETUP
 int tqc_bb_ft_board_setup(void *blob, bd_t *bd)
 {
@@ -480,11 +142,6 @@ int tqc_bb_board_late_init(void)
 	env_set("board_name", "MEK");
 	env_set("board_rev", "iMX8QXP");
 #endif
-
-#ifdef CONFIG_ENV_IS_IN_MMC
-	board_late_mmc_env_init();
-#endif
-
 	return 0;
 }
 
diff --git a/board/tqc/tqma8xx/tqma8xx.c b/board/tqc/tqma8xx/tqma8xx.c
index 5af69c1b7d..1984acc250 100644
--- a/board/tqc/tqma8xx/tqma8xx.c
+++ b/board/tqc/tqma8xx/tqma8xx.c
@@ -66,102 +66,6 @@ int board_early_init_f(void)
 	return 0;
 }
 
-#ifdef CONFIG_FSL_ESDHC
-
-#define USDHC1_CD_GPIO	IMX_GPIO_NR(4, 22)
-
-static struct fsl_esdhc_cfg usdhc_cfg = {USDHC1_BASE_ADDR, 0, 8};
-
-static iomux_cfg_t emmc0[] = {
-	SC_P_EMMC0_CLK | MUX_PAD_CTRL(ESDHC_CLK_PAD_CTRL),
-	SC_P_EMMC0_CMD | MUX_PAD_CTRL(ESDHC_PAD_CTRL),
-	SC_P_EMMC0_DATA0 | MUX_PAD_CTRL(ESDHC_PAD_CTRL),
-	SC_P_EMMC0_DATA1 | MUX_PAD_CTRL(ESDHC_PAD_CTRL),
-	SC_P_EMMC0_DATA2 | MUX_PAD_CTRL(ESDHC_PAD_CTRL),
-	SC_P_EMMC0_DATA3 | MUX_PAD_CTRL(ESDHC_PAD_CTRL),
-	SC_P_EMMC0_DATA4 | MUX_PAD_CTRL(ESDHC_PAD_CTRL),
-	SC_P_EMMC0_DATA5 | MUX_PAD_CTRL(ESDHC_PAD_CTRL),
-	SC_P_EMMC0_DATA6 | MUX_PAD_CTRL(ESDHC_PAD_CTRL),
-	SC_P_EMMC0_DATA7 | MUX_PAD_CTRL(ESDHC_PAD_CTRL),
-	SC_P_EMMC0_STROBE | MUX_PAD_CTRL(ESDHC_PAD_CTRL),
-};
-
-int board_mmc_init(bd_t *bis)
-{
-	int i, ret;
-	struct power_domain pd;
-
-	/*
-	 * According to the board_mmc_init() the following map is done:
-	 * (U-boot device node)    (Physical Port)
-	 * mmc0                    USDHC1
-	 * mmc1                    USDHC2
-	 */
-	if (!power_domain_lookup_name("conn_sdhc0", &pd))
-		power_domain_on(&pd);
-	imx8_iomux_setup_multiple_pads(emmc0, ARRAY_SIZE(emmc0));
-	init_clk_usdhc(0);
-	usdhc_cfg.sdhc_clk = mxc_get_clock(MXC_ESDHC_CLK);
-
-	ret = fsl_esdhc_initialize(bis, &usdhc_cfg);
-	if (ret) {
-		printf("Warning: failed to initialize mmc dev %d\n", i);
-	}
-
-	tqc_bb_board_mmc_init(bis);
-
-	return 0;
-}
-
-int board_mmc_getcd(struct mmc *mmc)
-{
-	struct fsl_esdhc_cfg *cfg = (struct fsl_esdhc_cfg *)mmc->priv;
-	int ret = 0;
-
-	if (cfg->esdhc_base == USDHC1_BASE_ADDR)
-		ret = 1; /* eMMC */
-	else
-		ret = tqc_bb_board_mmc_getcd(mmc);
-
-	return ret;
-}
-
-#endif /* CONFIG_FSL_ESDHC */
-
-#ifdef CONFIG_MXC_GPIO
-#define IOEXP_RESET IMX_GPIO_NR(1, 1)
-
-static iomux_cfg_t board_gpios[] = {
-	SC_P_SPI2_SDO | MUX_MODE_ALT(4) | MUX_PAD_CTRL(GPIO_PAD_CTRL),
-	SC_P_ENET0_REFCLK_125M_25M | MUX_MODE_ALT(4) | MUX_PAD_CTRL(GPIO_PAD_CTRL),
-};
-
-static void board_gpio_init(void)
-{
-	int ret;
-	struct gpio_desc desc;
-
-	ret = dm_gpio_lookup_name("gpio@1a_3", &desc);
-	if (ret)
-		return;
-
-	ret = dm_gpio_request(&desc, "bb_per_rst_b");
-	if (ret)
-		return;
-
-	dm_gpio_set_dir_flags(&desc, GPIOD_IS_OUT);
-	dm_gpio_set_value(&desc, 0);
-	udelay(50);
-	dm_gpio_set_value(&desc, 1);
-
-	imx8_iomux_setup_multiple_pads(board_gpios, ARRAY_SIZE(board_gpios));
-
-	/* enable i2c port expander assert reset line */
-	gpio_request(IOEXP_RESET, "ioexp_rst");
-	gpio_direction_output(IOEXP_RESET, 1);
-}
-#endif
-
 int checkboard(void)
 {
 	puts("Board: iMX8QXP MEK\n");
@@ -190,24 +94,13 @@ int checkboard(void)
 	return 0;
 }
 
-
-
 int board_init(void)
 {
-#ifdef CONFIG_MXC_GPIO
-	board_gpio_init();
-#endif
-
 	tqc_bb_board_init();
 
 	return 0;
 }
 
-void board_quiesce_devices()
-{
-	tqc_bb_board_quiesce_devices();
-}
-
 void detail_board_ddr_info(void)
 {
 	puts("\nDDR    ");
diff --git a/configs/tqma8qx_mba8qx_mmc_defconfig b/configs/tqma8qx_mba8qx_mmc_defconfig
new file mode 100644
index 0000000000..0616c911ef
--- /dev/null
+++ b/configs/tqma8qx_mba8qx_mmc_defconfig
@@ -0,0 +1,41 @@
+CONFIG_ARM=y
+CONFIG_ARCH_IMX8=y
+CONFIG_SYS_MALLOC_F_LEN=0x2000
+CONFIG_TARGET_TQMA8XX=y
+CONFIG_DEFAULT_DEVICE_TREE="fsl-imx8qxp-tqma8xx-mba8xx"
+CONFIG_DISTRO_DEFAULTS=y
+CONFIG_FIT=y
+CONFIG_FIT_SIGNATURE=y
+CONFIG_FIT_VERBOSE=y
+CONFIG_OF_BOARD_SETUP=y
+CONFIG_OF_SYSTEM_SETUP=y
+CONFIG_OF_STDOUT_VIA_ALIAS=y
+CONFIG_SD_BOOT=y
+CONFIG_BOOTDELAY=3
+CONFIG_CONSOLE_MUX=y
+CONFIG_VERSION_VARIABLE=y
+CONFIG_CMD_LICENSE=y
+CONFIG_CMD_MEMINFO=y
+# CONFIG_CMD_LOADB is not set
+# CONFIG_CMD_LOADS is not set
+# CONFIG_CMD_FLASH is not set
+CONFIG_CMD_GPT=y
+# CONFIG_CMD_FPGA is not set
+# CONFIG_CMD_NET is not set
+# CONFIG_CMD_NFS is not set
+CONFIG_CMD_CACHE=y
+CONFIG_CMD_EXT4_WRITE=y
+# CONFIG_ISO_PARTITION is not set
+CONFIG_PARTITION_TYPE_GUID=y
+CONFIG_DM_I2C=y
+CONFIG_DM_I2C_COMPAT=y
+CONFIG_SYS_I2C_IMX_LPI2C=y
+# CONFIG_MMC is not set
+CONFIG_IMX8_POWER_DOMAIN=y
+CONFIG_DM_SERIAL=y
+CONFIG_FSL_LPUART=y
+CONFIG_DM_SPI=y
+CONFIG_DM_THERMAL=y
+CONFIG_IMX_SC_THERMAL=y
+CONFIG_REGEX=y
+# CONFIG_EFI_LOADER is not set
diff --git a/include/configs/tqma8xx.h b/include/configs/tqma8xx.h
index d42f7eb3b4..a7185bd349 100644
--- a/include/configs/tqma8xx.h
+++ b/include/configs/tqma8xx.h
@@ -25,13 +25,6 @@
 #undef CONFIG_CMD_CRC32
 #undef CONFIG_BOOTM_NETBSD
 
-#define CONFIG_FSL_ESDHC
-#define CONFIG_FSL_USDHC
-#define CONFIG_SYS_FSL_ESDHC_ADDR	0
-#define USDHC1_BASE_ADDR		0x5B010000
-#define USDHC2_BASE_ADDR		0x5B020000
-#define CONFIG_SUPPORT_EMMC_BOOT	/* eMMC specific */
-
 #define CONFIG_ENV_OVERWRITE
 
 
@@ -48,59 +41,6 @@
 /* GPIO configs */
 #define CONFIG_MXC_GPIO
 
-/* ENET Config */
-#define CONFIG_MII
-
-#define CONFIG_FEC_MXC
-#define CONFIG_FEC_XCV_TYPE		RGMII
-#define FEC_QUIRK_ENET_MAC
-
-#define CONFIG_PHY_GIGE /* Support for 1000BASE-X */
-#define CONFIG_PHYLIB
-#define CONFIG_PHY_ATHEROS
-
-/* ENET0 connects AR8031 on CPU board, ENET1 connects to base board and MUX with ESAI, default is ESAI */
-#define CONFIG_FEC_ENET_DEV 0
-
-#if (CONFIG_FEC_ENET_DEV == 0)
-#define IMX_FEC_BASE			0x5B040000
-#define CONFIG_FEC_MXC_PHYADDR          0x0
-#define CONFIG_ETHPRIME                 "eth0"
-#elif (CONFIG_FEC_ENET_DEV == 1)
-#define IMX_FEC_BASE			0x5B050000
-#define CONFIG_FEC_MXC_PHYADDR          0x1
-#define CONFIG_ETHPRIME                 "eth1"
-#endif
-
-/* ENET0 MDIO are shared */
-#define CONFIG_FEC_MXC_MDIO_BASE	0x5B040000
-
-/* Boot M4 */
-#define M4_BOOT_ENV \
-	"m4_0_image=m4_0.bin\0" \
-	"loadm4image_0=fatload mmc ${mmcdev}:${mmcpart} ${loadaddr} ${m4_0_image}\0" \
-	"m4boot_0=run loadm4image_0; dcache flush; bootaux ${loadaddr} 0\0" \
-
-#ifdef CONFIG_NAND_BOOT
-#define MFG_NAND_PARTITION "mtdparts=gpmi-nand:64m(boot),16m(kernel),16m(dtb),1m(misc),-(rootfs) "
-#else
-#define MFG_NAND_PARTITION ""
-#endif
-
-#define CONFIG_MFG_ENV_SETTINGS \
-	"mfgtool_args=setenv bootargs console=${console},${baudrate} " \
-		"rdinit=/linuxrc " \
-		"g_mass_storage.stall=0 g_mass_storage.removable=1 " \
-		"g_mass_storage.idVendor=0x066F g_mass_storage.idProduct=0x37FF "\
-		"g_mass_storage.iSerialNumber=\"\" "\
-		MFG_NAND_PARTITION \
-		"video=imxdpufb5:off video=imxdpufb6:off video=imxdpufb7:off "\
-		"clk_ignore_unused "\
-		"\0" \
-	"initrd_addr=0x83800000\0" \
-	"initrd_high=0xffffffff\0" \
-	"bootcmd_mfg=run mfgtool_args;booti ${loadaddr} ${initrd_addr} ${fdt_addr};\0" \
-
 #define XEN_ENV \
 	"xen_addr=0x80200000\0" \
 	"xen_file=xen\0" \
@@ -114,8 +54,6 @@
 
 /* Initial environment variables */
 #define CONFIG_EXTRA_ENV_SETTINGS		\
-	CONFIG_MFG_ENV_SETTINGS \
-	M4_BOOT_ENV \
 	XEN_ENV \
 	"script=boot.scr\0" \
 	"image=Image\0" \
@@ -127,9 +65,6 @@
 	"fdt_file=fsl-imx8qxp-mek.dtb\0" \
 	"initrd_addr=0x83800000\0"		\
 	"initrd_high=0xffffffffffffffff\0" \
-	"mmcdev="__stringify(CONFIG_SYS_MMC_ENV_DEV)"\0" \
-	"mmcpart=" __stringify(CONFIG_SYS_MMC_IMG_LOAD_PART) "\0" \
-	"mmcroot=" CONFIG_MMCROOT " rootwait rw\0" \
 	"mmcautodetect=yes\0" \
 	"mmcargs=setenv bootargs console=${console},${baudrate} root=${mmcroot} " \
 	"video=imxdpufb5:off video=imxdpufb6:off video=imxdpufb7:off\0" \
@@ -194,27 +129,7 @@
 
 /* Default environment is in SD */
 #define CONFIG_ENV_SIZE			0x1000
-#ifdef CONFIG_QSPI_BOOT
-#define CONFIG_ENV_IS_IN_SPI_FLASH
-#define CONFIG_ENV_OFFSET       (4 * 1024 * 1024)
-#define CONFIG_ENV_SECT_SIZE	(128 * 1024)
-#define CONFIG_ENV_SPI_BUS	CONFIG_SF_DEFAULT_BUS
-#define CONFIG_ENV_SPI_CS	CONFIG_SF_DEFAULT_CS
-#define CONFIG_ENV_SPI_MODE	CONFIG_SF_DEFAULT_MODE
-#define CONFIG_ENV_SPI_MAX_HZ	CONFIG_SF_DEFAULT_SPEED
-#else
-#define CONFIG_ENV_IS_IN_MMC
-#define CONFIG_ENV_OFFSET       (64 * SZ_64K)
-#define CONFIG_SYS_MMC_ENV_PART		0	/* user area */
-#endif
-
-#define CONFIG_SYS_MMC_IMG_LOAD_PART	1
-
-/* On LPDDR4 board, USDHC1 is for eMMC, USDHC2 is for SD on CPU board
-  */
-#define CONFIG_SYS_MMC_ENV_DEV		1   /* USDHC2 */
-#define CONFIG_MMCROOT			"/dev/mmcblk1p2"  /* USDHC2 */
-#define CONFIG_SYS_FSL_USDHC_NUM	2
+#define CONFIG_ENV_IS_NOWHERE
 
 /* Size of malloc() pool */
 #define CONFIG_SYS_MALLOC_LEN		((CONFIG_ENV_SIZE + (32*1024)) * 1024)
@@ -245,50 +160,10 @@
 /* Generic Timer Definitions */
 #define COUNTER_FREQUENCY		8000000	/* 8MHz */
 
-#ifndef CONFIG_DM_PCA953X
-#define CONFIG_PCA953X
-#define CONFIG_CMD_PCA953X
-#define CONFIG_CMD_PCA953X_INFO
-#endif
-
 #define CONFIG_IMX_SMMU
 
-/* MT35XU512ABA1G12 has only one Die, so QSPI0 B won't work */
-#ifdef CONFIG_FSL_FSPI
-#define CONFIG_SF_DEFAULT_BUS		0
-#define CONFIG_SF_DEFAULT_CS		0
-#define CONFIG_SF_DEFAULT_SPEED	40000000
-#define CONFIG_SF_DEFAULT_MODE		SPI_MODE_0
-#define FSL_FSPI_FLASH_SIZE		SZ_64M
-#define FSL_FSPI_FLASH_NUM		1
-#define FSPI0_BASE_ADDR			0x5d120000
-#define FSPI0_AMBA_BASE			0
-#define CONFIG_SYS_FSL_FSPI_AHB
-#endif
-
-/* USB Config */
-#ifdef CONFIG_CMD_USB
-#define CONFIG_USB_MAX_CONTROLLER_COUNT 2
-
-/* USB 3.0 controller configs */
-#ifdef CONFIG_USB_XHCI_IMX8
-/* #define CONFIG_SYS_USB_XHCI_MAX_ROOT_PORTS	2 */
-#endif
-
-/* USB OTG controller configs */
-#ifdef CONFIG_USB_EHCI_HCD
-#define CONFIG_USB_HOST_ETHER
-#define CONFIG_USB_ETHER_ASIX
-#define CONFIG_MXC_USB_PORTSC		(PORT_PTS_UTMI | PORT_PTS_PTW)
-#endif
-#endif /* CONFIG_CMD_USB */
-
-#ifdef CONFIG_USB_GADGET
-#define CONFIG_USBD_HS
-/* #define CONFIG_USB_FUNCTION_MASS_STORAGE */
-#endif
-
 #define CONFIG_OF_SYSTEM_SETUP
+
 #define BOOTAUX_RESERVED_MEM_BASE 0x88000000
 #define BOOTAUX_RESERVED_MEM_SIZE 0x08000000 /* Reserve from second 128MB */
 
