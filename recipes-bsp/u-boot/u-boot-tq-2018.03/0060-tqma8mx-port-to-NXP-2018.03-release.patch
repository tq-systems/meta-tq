From 845733d8b0e426ef46d07551983c3f7b39f96355 Mon Sep 17 00:00:00 2001
From: Markus Niebel <Markus.Niebel@tq-group.com>
Date: Fri, 15 Feb 2019 17:01:57 +0100
Subject: [PATCH] tqma8mx: port to NXP 2018.03 release

Signed-off-by: Markus Niebel <Markus.Niebel@tq-group.com>
---
 board/tqc/tqma8mx/Makefile                    |    3 +-
 board/tqc/tqma8mx/ddr/ddr.h                   |   34 -
 board/tqc/tqma8mx/ddr/ddr_init.c              |  245 ---
 board/tqc/tqma8mx/ddr/ddrphy_train.c          |  915 ---------
 board/tqc/tqma8mx/ddr/helper.c                |  104 -
 board/tqc/tqma8mx/ddr/lpddr4_dvfs.h           |   78 -
 .../ddr/wait_ddrphy_training_complete.c       |   96 -
 board/tqc/tqma8mx/lpddr4_timing_2gm.c         | 1734 +++++++++++++++++
 board/tqc/tqma8mx/lpddr4_timing_2gs.c         | 1734 +++++++++++++++++
 board/tqc/tqma8mx/spl.c                       |   70 +-
 board/tqc/tqma8mx/tqma8mx-mba8mx.c            |   10 +-
 board/tqc/tqma8mx/tqma8mx.c                   |    6 +-
 configs/tqma8mq_mba8mx_mmc_defconfig          |   22 +-
 include/configs/tqma8mx.h                     |   14 +-
 14 files changed, 3546 insertions(+), 1519 deletions(-)
 delete mode 100644 board/tqc/tqma8mx/ddr/ddr.h
 delete mode 100644 board/tqc/tqma8mx/ddr/ddr_init.c
 delete mode 100644 board/tqc/tqma8mx/ddr/ddrphy_train.c
 delete mode 100644 board/tqc/tqma8mx/ddr/helper.c
 delete mode 100755 board/tqc/tqma8mx/ddr/lpddr4_dvfs.h
 delete mode 100644 board/tqc/tqma8mx/ddr/wait_ddrphy_training_complete.c
 create mode 100644 board/tqc/tqma8mx/lpddr4_timing_2gm.c
 create mode 100644 board/tqc/tqma8mx/lpddr4_timing_2gs.c

diff --git a/board/tqc/tqma8mx/Makefile b/board/tqc/tqma8mx/Makefile
index 244ee02140..15ac5e4e39 100644
--- a/board/tqc/tqma8mx/Makefile
+++ b/board/tqc/tqma8mx/Makefile
@@ -10,5 +10,6 @@ obj-$(CONFIG_MBA8MX) += tqma8mx-mba8mx.o
 
 ifdef CONFIG_SPL_BUILD
 obj-y += spl.o
-obj-y += ddr/ddr_init.o ddr/ddrphy_train.o ddr/helper.o
+obj-y += lpddr4_timing_2gs.o
+### /* obj-y += lpddr4_timing_2gm.o */
 endif
diff --git a/board/tqc/tqma8mx/ddr/ddr.h b/board/tqc/tqma8mx/ddr/ddr.h
deleted file mode 100644
index 9acb29c7a5..0000000000
--- a/board/tqc/tqma8mx/ddr/ddr.h
+++ /dev/null
@@ -1,34 +0,0 @@
-/*
- * Copyright 2017 NXP
- *
- * SPDX-License-Identifier:	GPL-2.0+
- */
-
-enum fw_type {
-	FW_1D_IMAGE,
-	FW_2D_IMAGE,
-};
-
-void ddr_init(void);
-void ddr_load_train_code(enum fw_type type);
-void lpddr4_800M_cfg_phy(void);
-
-static inline void reg32_write(unsigned long addr, u32 val)
-{
-	writel(val, addr);
-}
-
-static inline uint32_t reg32_read(unsigned long addr)
-{
-	return readl(addr);
-}
-
-static void inline dwc_ddrphy_apb_wr(unsigned long addr, u32 val)
-{
-    writel(val, addr);
-}
-
-static inline void reg32setbit(unsigned long addr, u32 bit)
-{
-	setbits_le32(addr, (1 << bit));
-}
diff --git a/board/tqc/tqma8mx/ddr/ddr_init.c b/board/tqc/tqma8mx/ddr/ddr_init.c
deleted file mode 100644
index 03c4b73366..0000000000
--- a/board/tqc/tqma8mx/ddr/ddr_init.c
+++ /dev/null
@@ -1,245 +0,0 @@
-/*
- * Copyright 2017 NXP
- *
- * SPDX-License-Identifier:	GPL-2.0+
- *
- * Generated code from MX8M_DDR_tool
- * Align with uboot-imx_v2017.03_4.9.51_imx8m_ga
- */
-
-#include <common.h>
-#include <errno.h>
-#include <asm/io.h>
-#include <asm/arch/ddr_memory_map.h>
-#include <asm/arch/clock.h>
-#include "ddr.h"
-
-#ifdef CONFIG_ENABLE_DDR_TRAINING_DEBUG
-#define ddr_printf(args...) printf(args)
-#else
-#define ddr_printf(args...)
-#endif
-
-#include "wait_ddrphy_training_complete.c"
-#ifndef SRC_DDRC_RCR_ADDR
-#define SRC_DDRC_RCR_ADDR SRC_IPS_BASE_ADDR +0x1000
-#endif
-#ifndef DDR_CSD1_BASE_ADDR
-#define DDR_CSD1_BASE_ADDR 0x40000000
-#endif
-#define SILICON_TRAIN
-
-void ddr_cfg_phy(void);
-volatile unsigned int tmp, tmp_t, i;
-void ddr_init(void)
-{
-	/** Initialize DDR clock and DDRC registers **/
-	reg32_write(0x3038a088,0x7070000);
-	reg32_write(0x3038a084,0x4030000);
-	reg32_write(0x303a00ec,0xffff);
-	tmp=reg32_read(0x303a00f8);
-	tmp |= 0x20;
-	reg32_write(0x303a00f8,tmp);
-	reg32_write(0x30391000,0x8f000000);
-	reg32_write(0x30391004,0x8f000000);
-	reg32_write(0x30360068,0xece580);
-	tmp=reg32_read(0x30360060);
-	tmp &= ~0x80;
-	reg32_write(0x30360060,tmp);
-	tmp=reg32_read(0x30360060);
-	tmp |= 0x200;
-	reg32_write(0x30360060,tmp);
-	tmp=reg32_read(0x30360060);
-	tmp &= ~0x20;
-	reg32_write(0x30360060,tmp);
-	tmp=reg32_read(0x30360060);
-	tmp &= ~0x10;
-	reg32_write(0x30360060,tmp);
-	do{
-		tmp=reg32_read(0x30360060);
-		if(tmp&0x80000000) break;
-	}while(1);
-	reg32_write(0x30391000,0x8f000006);
-	reg32_write(0x3d400304,0x1);
-	reg32_write(0x3d400030,0x1);
-	reg32_write(0x3d400000,0xa1081020);
-	reg32_write(0x3d400028,0x0);
-	reg32_write(0x3d400020,0x203);
-	reg32_write(0x3d400024,0x186a000);
-	reg32_write(0x3d400064,0x6100e0);
-	reg32_write(0x3d4000d0,0xc003061c);
-	reg32_write(0x3d4000d4,0x9e0000);
-	reg32_write(0x3d4000dc,0xd4002d);
-	reg32_write(0x3d4000e0,0x310008);
-	reg32_write(0x3d4000e8,0x66004a);
-	reg32_write(0x3d4000ec,0x16004a);
-	reg32_write(0x3d400100,0x1a201b22);
-	reg32_write(0x3d400104,0x60633);
-	reg32_write(0x3d40010c,0xc0c000);
-	reg32_write(0x3d400110,0xf04080f);
-	reg32_write(0x3d400114,0x2040c0c);
-	reg32_write(0x3d400118,0x1010007);
-	reg32_write(0x3d40011c,0x401);
-	reg32_write(0x3d400130,0x20600);
-	reg32_write(0x3d400134,0xc100002);
-	reg32_write(0x3d400138,0xe6);
-	reg32_write(0x3d400144,0xa00050);
-	reg32_write(0x3d400180,0xc3200018);
-	reg32_write(0x3d400184,0x28061a8);
-	reg32_write(0x3d400188,0x0);
-	reg32_write(0x3d400190,0x497820a);
-	reg32_write(0x3d400194,0x80303);
-	reg32_write(0x3d4001a0,0xe0400018);
-	reg32_write(0x3d4001a4,0xdf00e4);
-	reg32_write(0x3d4001a8,0x80000000);
-	reg32_write(0x3d4001b0,0x11);
-	reg32_write(0x3d4001b4,0x170a);
-	reg32_write(0x3d4001c0,0x1);
-	reg32_write(0x3d4001c4,0x1);
-	reg32_write(0x3d4000f4,0x639);
-	reg32_write(0x3d400108,0x70e1214);
-	reg32_write(0x3d400200,0x1f);
-	reg32_write(0x3d40020c,0x1f000000);
-	reg32_write(0x3d400210,0x1f1f);
-	reg32_write(0x3d400204,0x70707);
-	reg32_write(0x3d400214,0x6060606);
-	reg32_write(0x3d400218,0x6060606);
-	reg32_write(0x3d402020,0x1);
-	reg32_write(0x3d402024,0x518b00);
-	reg32_write(0x3d402050,0x20d040);
-	reg32_write(0x3d402064,0x14002f);
-	reg32_write(0x3d4020dc,0x940009);
-	reg32_write(0x3d4020e0,0x310000);
-	reg32_write(0x3d4020e8,0x66004a);
-	reg32_write(0x3d4020ec,0x16004a);
-	reg32_write(0x3d402100,0xb070508);
-	reg32_write(0x3d402104,0x3040b);
-	reg32_write(0x3d402108,0x305090c);
-	reg32_write(0x3d40210c,0x505000);
-	reg32_write(0x3d402110,0x4040204);
-	reg32_write(0x3d402114,0x2030303);
-	reg32_write(0x3d402118,0x1010004);
-	reg32_write(0x3d40211c,0x301);
-	reg32_write(0x3d402130,0x20300);
-	reg32_write(0x3d402134,0xa100002);
-	reg32_write(0x3d402138,0x31);
-	reg32_write(0x3d402144,0x220011);
-	reg32_write(0x3d402180,0xc0a70006);
-	reg32_write(0x3d402190,0x3858202);
-	reg32_write(0x3d402194,0x80303);
-	reg32_write(0x3d4021b4,0x502);
-	reg32_write(0x3d400244,0x0);
-	reg32_write(0x3d400250,0x29001505);
-	reg32_write(0x3d400254,0x2c);
-	reg32_write(0x3d40025c,0x5900575b);
-	reg32_write(0x3d400264,0x90000096);
-	reg32_write(0x3d40026c,0x1000012c);
-	reg32_write(0x3d400300,0x16);
-	reg32_write(0x3d400304,0x0);
-	reg32_write(0x3d40030c,0x0);
-	reg32_write(0x3d400320,0x1);
-	reg32_write(0x3d40036c,0x11);
-	reg32_write(0x3d400400,0x111);
-	reg32_write(0x3d400404,0x10f3);
-	reg32_write(0x3d400408,0x72ff);
-	reg32_write(0x3d400490,0x1);
-	reg32_write(0x3d400494,0xe00);
-	reg32_write(0x3d400498,0x62ffff);
-	reg32_write(0x3d40049c,0xe00);
-	reg32_write(0x3d4004a0,0xffff);
-	reg32_write(0x30391000,0x8f000004);
-	reg32_write(0x30391000,0x8f000000);
-	reg32_write(0x3d400030,0xa8);
-	do{
-		tmp=reg32_read(0x3d400004);
-		if(tmp&0x223) break;
-	}while(1);
-	reg32_write(0x3d400320,0x0);
-	reg32_write(0x3d000000,0x1);
-	reg32_write(0x3d4001b0,0x10);
-	reg32_write(0x3c040280,0x1);
-	reg32_write(0x3c040284,0x0);
-	reg32_write(0x3c040288,0x2);
-	reg32_write(0x3c04028c,0x4);
-	reg32_write(0x3c040290,0x3);
-	reg32_write(0x3c040294,0x6);
-	reg32_write(0x3c040298,0x5);
-	reg32_write(0x3c04029c,0x7);
-	reg32_write(0x3c044280,0x2);
-	reg32_write(0x3c044284,0x0);
-	reg32_write(0x3c044288,0x6);
-	reg32_write(0x3c04428c,0x7);
-	reg32_write(0x3c044290,0x4);
-	reg32_write(0x3c044294,0x5);
-	reg32_write(0x3c044298,0x3);
-	reg32_write(0x3c04429c,0x1);
-	reg32_write(0x3c048280,0x1);
-	reg32_write(0x3c048284,0x0);
-	reg32_write(0x3c048288,0x4);
-	reg32_write(0x3c04828c,0x2);
-	reg32_write(0x3c048290,0x3);
-	reg32_write(0x3c048294,0x6);
-	reg32_write(0x3c048298,0x5);
-	reg32_write(0x3c04829c,0x7);
-	reg32_write(0x3c04c280,0x2);
-	reg32_write(0x3c04c284,0x1);
-	reg32_write(0x3c04c288,0x5);
-	reg32_write(0x3c04c28c,0x7);
-	reg32_write(0x3c04c290,0x4);
-	reg32_write(0x3c04c294,0x6);
-	reg32_write(0x3c04c298,0x3);
-	reg32_write(0x3c04c29c,0x0);
-
-	/* Configure DDR PHY's registers */
-	ddr_cfg_phy();
-
-	reg32_write(DDRC_RFSHCTL3(0), 0x00000000);
-	reg32_write(DDRC_SWCTL(0), 0x0000);
-	/*
-	 * ------------------- 9 -------------------
-	 * Set DFIMISC.dfi_init_start to 1 
-	 *  -----------------------------------------
-	 */
-	reg32_write(DDRC_DFIMISC(0), 0x00000030);
-	reg32_write(DDRC_SWCTL(0), 0x0001);
-
-	/* wait DFISTAT.dfi_init_complete to 1 */
-	tmp_t = 0;
-	while(tmp_t==0){
-		tmp  = reg32_read(DDRC_DFISTAT(0));
-		tmp_t = tmp & 0x01;
-		tmp  = reg32_read(DDRC_MRSTAT(0));
-	}
-
-	reg32_write(DDRC_SWCTL(0), 0x0000);
-
-	/* clear DFIMISC.dfi_init_complete_en */
-	reg32_write(DDRC_DFIMISC(0), 0x00000010);
-	reg32_write(DDRC_DFIMISC(0), 0x00000011);
-	reg32_write(DDRC_PWRCTL(0), 0x00000088);
-
-	tmp = reg32_read(DDRC_CRCPARSTAT(0));
-	/*
-	 * set SWCTL.sw_done to enable quasi-dynamic register
-	 * programming outside reset.
-	 */
-	reg32_write(DDRC_SWCTL(0), 0x00000001);
-
-	/* wait SWSTAT.sw_done_ack to 1 */
-	while((reg32_read(DDRC_SWSTAT(0)) & 0x1) == 0)
-		;
-
-	/* wait STAT.operating_mode([1:0] for ddr3) to normal state */
-	while ((reg32_read(DDRC_STAT(0)) & 0x3) != 0x1)
-		;
-
-	reg32_write(DDRC_PWRCTL(0), 0x00000088);
-	/* reg32_write(DDRC_PWRCTL(0), 0x018a); */
-	tmp = reg32_read(DDRC_CRCPARSTAT(0));
-
-	/* enable port 0 */
-	reg32_write(DDRC_PCTRL_0(0), 0x00000001);
-	/* enable DDR auto-refresh mode */
-	tmp = reg32_read(DDRC_RFSHCTL3(0)) & ~0x1;
-	reg32_write(DDRC_RFSHCTL3(0), tmp);
-}
\ No newline at end of file
diff --git a/board/tqc/tqma8mx/ddr/ddrphy_train.c b/board/tqc/tqma8mx/ddr/ddrphy_train.c
deleted file mode 100644
index 666c4cd510..0000000000
--- a/board/tqc/tqma8mx/ddr/ddrphy_train.c
+++ /dev/null
@@ -1,915 +0,0 @@
-/*
- * Copyright 2017 NXP
- *
- * SPDX-License-Identifier:	GPL-2.0+
- *
- * Generated code from MX8M_DDR_tool
- * Align with uboot-imx_v2017.03_4.9.51_imx8m_ga
- */
-
-#include <common.h>
-#include <asm/io.h>
-#include <asm/arch/ddr_memory_map.h>
-#include "ddr.h"
-
-extern void wait_ddrphy_training_complete(void);
-void ddr_cfg_phy(void) {
-	unsigned int tmp, tmp_t;
-
-	//Init DDRPHY register...
-	reg32_write(0x3c080440,0x2);
-	reg32_write(0x3c080444,0x3);
-	reg32_write(0x3c080448,0x4);
-	reg32_write(0x3c08044c,0x5);
-	reg32_write(0x3c080450,0x0);
-	reg32_write(0x3c080454,0x1);
-	reg32_write(0x3c04017c,0x1ff);
-	reg32_write(0x3c04057c,0x1ff);
-	reg32_write(0x3c04417c,0x1ff);
-	reg32_write(0x3c04457c,0x1ff);
-	reg32_write(0x3c44017c,0x1ff);
-	reg32_write(0x3c44057c,0x1ff);
-	reg32_write(0x3c44417c,0x1ff);
-	reg32_write(0x3c44457c,0x1ff);
-	reg32_write(0x3c000154,0x1ff);
-	reg32_write(0x3c004154,0x1ff);
-	reg32_write(0x3c008154,0x1ff);
-	reg32_write(0x3c00c154,0x1ff);
-	reg32_write(0x3c010154,0x1ff);
-	reg32_write(0x3c014154,0x1ff);
-	reg32_write(0x3c018154,0x1ff);
-	reg32_write(0x3c01c154,0x1ff);
-	reg32_write(0x3c020154,0x1ff);
-	reg32_write(0x3c024154,0x1ff);
-	reg32_write(0x3c080314,0x19);
-	reg32_write(0x3c480314,0x7);
-	reg32_write(0x3c0800b8,0x2);
-	reg32_write(0x3c4800b8,0x1);
-	reg32_write(0x3c240810,0x0);
-	reg32_write(0x3c640810,0x0);
-	reg32_write(0x3c080090,0xab);
-	reg32_write(0x3c0800e8,0x0);
-	reg32_write(0x3c480090,0xab);
-	reg32_write(0x3c0800e8,0x0);
-	reg32_write(0x3c080158,0x3);
-	reg32_write(0x3c480158,0xa);
-	reg32_write(0x3c040134,0xe00);
-	reg32_write(0x3c040534,0xe00);
-	reg32_write(0x3c044134,0xe00);
-	reg32_write(0x3c044534,0xe00);
-	reg32_write(0x3c440134,0xe00);
-	reg32_write(0x3c440534,0xe00);
-	reg32_write(0x3c444134,0xe00);
-	reg32_write(0x3c444534,0xe00);
-	reg32_write(0x3c040124,0xfbe);
-	reg32_write(0x3c040524,0xfbe);
-	reg32_write(0x3c044124,0xfbe);
-	reg32_write(0x3c044524,0xfbe);
-	reg32_write(0x3c440124,0xfbe);
-	reg32_write(0x3c440524,0xfbe);
-	reg32_write(0x3c444124,0xfbe);
-	reg32_write(0x3c444524,0xfbe);
-	reg32_write(0x3c00010c,0x63);
-	reg32_write(0x3c00410c,0x63);
-	reg32_write(0x3c00810c,0x63);
-	reg32_write(0x3c00c10c,0x63);
-	reg32_write(0x3c01010c,0x63);
-	reg32_write(0x3c01410c,0x63);
-	reg32_write(0x3c01810c,0x63);
-	reg32_write(0x3c01c10c,0x63);
-	reg32_write(0x3c02010c,0x63);
-	reg32_write(0x3c02410c,0x63);
-	reg32_write(0x3c080060,0x3);
-	reg32_write(0x3c0801d4,0x4);
-	reg32_write(0x3c080140,0x0);
-	reg32_write(0x3c080020,0x320);
-	reg32_write(0x3c480020,0xa7);
-	reg32_write(0x3c080220,0x9);
-	reg32_write(0x3c0802c8,0xdc);
-	reg32_write(0x3c04010c,0x5a1);
-	reg32_write(0x3c04050c,0x5a1);
-	reg32_write(0x3c04410c,0x5a1);
-	reg32_write(0x3c04450c,0x5a1);
-	reg32_write(0x3c04810c,0x5a1);
-	reg32_write(0x3c04850c,0x5a1);
-	reg32_write(0x3c04c10c,0x5a1);
-	reg32_write(0x3c04c50c,0x5a1);
-	reg32_write(0x3c44010c,0x5a1);
-	reg32_write(0x3c44050c,0x5a1);
-	reg32_write(0x3c44410c,0x5a1);
-	reg32_write(0x3c44450c,0x5a1);
-	reg32_write(0x3c0803e8,0x1);
-	reg32_write(0x3c4803e8,0x1);
-	reg32_write(0x3c080064,0x1);
-	reg32_write(0x3c480064,0x1);
-	reg32_write(0x3c0803c0,0x0);
-	reg32_write(0x3c0803c4,0x0);
-	reg32_write(0x3c0803c8,0x4444);
-	reg32_write(0x3c0803cc,0x8888);
-	reg32_write(0x3c0803d0,0x5555);
-	reg32_write(0x3c0803d4,0x0);
-	reg32_write(0x3c0803d8,0x0);
-	reg32_write(0x3c0803dc,0xf000);
-	reg32_write(0x3c080094,0x0);
-	reg32_write(0x3c0800b4,0x0);
-	reg32_write(0x3c4800b4,0x0);
-	reg32_write(0x3c08031c,0x80);
-	reg32_write(0x3c48031c,0x80);
-	reg32_write(0x3c080328,0x106);
-	reg32_write(0x3c480328,0x106);
-
-	//enable APB bus to access DDRPHY RAM
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0xd0000, 0x0);
-	//load the 1D training image
-	ddr_load_train_code(FW_1D_IMAGE);
-
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x54003,0xc80);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x54004,0x2);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x54005,0x1e28);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x54006,0x11);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x54008,0x131f);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x54009,0xc8);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x5400b,0x2);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x5400d,0x100);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x54012,0x110);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x54019,0x2dd4);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x5401a,0x31);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x5401b,0x4a66);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x5401c,0x4a08);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x5401e,0x16);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x5401f,0x2dd4);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x54020,0x31);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x54021,0x4a66);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x54022,0x4a08);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x54024,0x16);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x54032,0xd400);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x54033,0x312d);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x54034,0x6600);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x54035,0x84a);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x54036,0x4a);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x54037,0x1600);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x54038,0xd400);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x54039,0x312d);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x5403a,0x6600);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x5403b,0x84a);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x5403c,0x4a);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x5403d,0x1600);
-
-	//disable APB bus to access DDRPHY RAM
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0xd0000, 0x1);
-	//Reset MPU and run
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0xd0099, 0x9);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0xd0099, 0x1);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0xd0099, 0x0);
-	wait_ddrphy_training_complete();
-
-	//configure DDRPHY-FW DMEM structure @clock1...
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0xd0099, 0x1);
-
-	//set the PHY input clock to the desired frequency for pstate 1
-	reg32_write(0x3038a088,0x7070000);
-	reg32_write(0x3038a084,0x4030000);
-	reg32_write(0x303a00ec,0xffff);
-	tmp=reg32_read(0x303a00f8);
-	tmp |= 0x20;
-	reg32_write(0x303a00f8,tmp);
-	reg32_write(0x30360068,0xf5a406);
-	tmp=reg32_read(0x30360060);
-	tmp &= ~0x80;
-	reg32_write(0x30360060,tmp);
-	tmp=reg32_read(0x30360060);
-	tmp |= 0x200;
-	reg32_write(0x30360060,tmp);
-	tmp=reg32_read(0x30360060);
-	tmp &= ~0x20;
-	reg32_write(0x30360060,tmp);
-	tmp=reg32_read(0x30360060);
-	tmp &= ~0x10;
-	reg32_write(0x30360060,tmp);
-	do{
-		tmp=reg32_read(0x30360060);
-		if(tmp&0x80000000) break;
-	}while(1);
-	reg32_write(0x30389808,0x1000000);
-
-	//enable APB bus to access DDRPHY RAM
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0xd0000, 0x0);
-	//load the 1D training image
-	ddr_load_train_code(FW_1D_IMAGE);
-
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x54002,0x1);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x54003,0x29c);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x54004,0x2);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x54005,0x1e28);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x54006,0x11);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x54008,0x121f);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x54009,0xc8);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x5400b,0x2);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x5400d,0x100);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x54012,0x110);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x54019,0x994);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x5401a,0x31);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x5401b,0x4a66);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x5401c,0x4a08);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x5401e,0x16);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x5401f,0x994);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x54020,0x31);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x54021,0x4a66);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x54022,0x4a08);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x54024,0x16);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x54032,0x9400);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x54033,0x3109);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x54034,0x6600);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x54035,0x84a);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x54036,0x4a);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x54037,0x1600);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x54038,0x9400);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x54039,0x3109);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x5403a,0x6600);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x5403b,0x84a);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x5403c,0x4a);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x5403d,0x1600);
-
-	//disable APB bus to access DDRPHY RAM
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0xd0000, 0x1);
-	//Reset MPU and run
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0xd0099, 0x9);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0xd0099, 0x1);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0xd0099, 0x0);
-	wait_ddrphy_training_complete();
-
-	//set the PHY input clock to the desired frequency for pstate 0
-	reg32_write(0x3038a088,0x7070000);
-	reg32_write(0x3038a084,0x4030000);
-	reg32_write(0x303a00ec,0xffff);
-	tmp=reg32_read(0x303a00f8);
-	tmp |= 0x20;
-	reg32_write(0x303a00f8,tmp);
-	reg32_write(0x30360068,0xece580);
-	tmp=reg32_read(0x30360060);
-	tmp &= ~0x80;
-	reg32_write(0x30360060,tmp);
-	tmp=reg32_read(0x30360060);
-	tmp |= 0x200;
-	reg32_write(0x30360060,tmp);
-	tmp=reg32_read(0x30360060);
-	tmp &= ~0x20;
-	reg32_write(0x30360060,tmp);
-	tmp=reg32_read(0x30360060);
-	tmp &= ~0x10;
-	reg32_write(0x30360060,tmp);
-	do{
-		tmp=reg32_read(0x30360060);
-		if(tmp&0x80000000) break;
-	}while(1);
-	reg32_write(0x30389808,0x1000000);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0xd0099, 0x1);
-
-
-	//enable APB bus to access DDRPHY RAM
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0xd0000, 0x0);
-	//load the 2D training image
-	ddr_load_train_code(FW_2D_IMAGE);
-
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x54003,0xc80);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x54004,0x2);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x54005,0x1e28);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x54006,0x11);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x54008,0x61);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x54009,0xc8);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x5400b,0x2);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x5400f,0x100);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x54010,0x1f7f);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x54012,0x110);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x54019,0x2dd4);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x5401a,0x31);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x5401b,0x4a66);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x5401c,0x4a08);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x5401e,0x16);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x5401f,0x2dd4);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x54020,0x31);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x54021,0x4a66);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x54022,0x4a08);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x54024,0x16);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x54032,0xd400);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x54033,0x312d);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x54034,0x6600);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x54035,0x84a);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x54036,0x4a);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x54037,0x1600);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x54038,0xd400);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x54039,0x312d);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x5403a,0x6600);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x5403b,0x84a);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x5403c,0x4a);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x5403d,0x1600);
-
-	//disable APB bus to access DDRPHY RAM
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0xd0000, 0x1);
-	//Reset MPU and run
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0xd0099, 0x9);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0xd0099, 0x1);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0xd0099, 0x0);
-	wait_ddrphy_training_complete();
-
-	//Halt MPU
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0xd0099, 0x1);
-	//enable APB bus to access DDRPHY RAM
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0xd0000, 0x0);
-
-	//Load firmware PIE image
-	reg32_write(0x3c240000,0x10);
-	reg32_write(0x3c240004,0x400);
-	reg32_write(0x3c240008,0x10e);
-	reg32_write(0x3c24000c,0x0);
-	reg32_write(0x3c240010,0x0);
-	reg32_write(0x3c240014,0x8);
-	reg32_write(0x3c2400a4,0xb);
-	reg32_write(0x3c2400a8,0x480);
-	reg32_write(0x3c2400ac,0x109);
-	reg32_write(0x3c2400b0,0x8);
-	reg32_write(0x3c2400b4,0x448);
-	reg32_write(0x3c2400b8,0x139);
-	reg32_write(0x3c2400bc,0x8);
-	reg32_write(0x3c2400c0,0x478);
-	reg32_write(0x3c2400c4,0x109);
-	reg32_write(0x3c2400c8,0x0);
-	reg32_write(0x3c2400cc,0xe8);
-	reg32_write(0x3c2400d0,0x109);
-	reg32_write(0x3c2400d4,0x2);
-	reg32_write(0x3c2400d8,0x10);
-	reg32_write(0x3c2400dc,0x139);
-	reg32_write(0x3c2400e0,0xf);
-	reg32_write(0x3c2400e4,0x7c0);
-	reg32_write(0x3c2400e8,0x139);
-	reg32_write(0x3c2400ec,0x44);
-	reg32_write(0x3c2400f0,0x630);
-	reg32_write(0x3c2400f4,0x159);
-	reg32_write(0x3c2400f8,0x14f);
-	reg32_write(0x3c2400fc,0x630);
-	reg32_write(0x3c240100,0x159);
-	reg32_write(0x3c240104,0x47);
-	reg32_write(0x3c240108,0x630);
-	reg32_write(0x3c24010c,0x149);
-	reg32_write(0x3c240110,0x4f);
-	reg32_write(0x3c240114,0x630);
-	reg32_write(0x3c240118,0x179);
-	reg32_write(0x3c24011c,0x8);
-	reg32_write(0x3c240120,0xe0);
-	reg32_write(0x3c240124,0x109);
-	reg32_write(0x3c240128,0x0);
-	reg32_write(0x3c24012c,0x7c8);
-	reg32_write(0x3c240130,0x109);
-	reg32_write(0x3c240134,0x0);
-	reg32_write(0x3c240138,0x1);
-	reg32_write(0x3c24013c,0x8);
-	reg32_write(0x3c240140,0x0);
-	reg32_write(0x3c240144,0x45a);
-	reg32_write(0x3c240148,0x9);
-	reg32_write(0x3c24014c,0x0);
-	reg32_write(0x3c240150,0x448);
-	reg32_write(0x3c240154,0x109);
-	reg32_write(0x3c240158,0x40);
-	reg32_write(0x3c24015c,0x630);
-	reg32_write(0x3c240160,0x179);
-	reg32_write(0x3c240164,0x1);
-	reg32_write(0x3c240168,0x618);
-	reg32_write(0x3c24016c,0x109);
-	reg32_write(0x3c240170,0x40c0);
-	reg32_write(0x3c240174,0x630);
-	reg32_write(0x3c240178,0x149);
-	reg32_write(0x3c24017c,0x8);
-	reg32_write(0x3c240180,0x4);
-	reg32_write(0x3c240184,0x48);
-	reg32_write(0x3c240188,0x4040);
-	reg32_write(0x3c24018c,0x630);
-	reg32_write(0x3c240190,0x149);
-	reg32_write(0x3c240194,0x0);
-	reg32_write(0x3c240198,0x4);
-	reg32_write(0x3c24019c,0x48);
-	reg32_write(0x3c2401a0,0x40);
-	reg32_write(0x3c2401a4,0x630);
-	reg32_write(0x3c2401a8,0x149);
-	reg32_write(0x3c2401ac,0x10);
-	reg32_write(0x3c2401b0,0x4);
-	reg32_write(0x3c2401b4,0x18);
-	reg32_write(0x3c2401b8,0x0);
-	reg32_write(0x3c2401bc,0x4);
-	reg32_write(0x3c2401c0,0x78);
-	reg32_write(0x3c2401c4,0x549);
-	reg32_write(0x3c2401c8,0x630);
-	reg32_write(0x3c2401cc,0x159);
-	reg32_write(0x3c2401d0,0xd49);
-	reg32_write(0x3c2401d4,0x630);
-	reg32_write(0x3c2401d8,0x159);
-	reg32_write(0x3c2401dc,0x94a);
-	reg32_write(0x3c2401e0,0x630);
-	reg32_write(0x3c2401e4,0x159);
-	reg32_write(0x3c2401e8,0x441);
-	reg32_write(0x3c2401ec,0x630);
-	reg32_write(0x3c2401f0,0x149);
-	reg32_write(0x3c2401f4,0x42);
-	reg32_write(0x3c2401f8,0x630);
-	reg32_write(0x3c2401fc,0x149);
-	reg32_write(0x3c240200,0x1);
-	reg32_write(0x3c240204,0x630);
-	reg32_write(0x3c240208,0x149);
-	reg32_write(0x3c24020c,0x0);
-	reg32_write(0x3c240210,0xe0);
-	reg32_write(0x3c240214,0x109);
-	reg32_write(0x3c240218,0xa);
-	reg32_write(0x3c24021c,0x10);
-	reg32_write(0x3c240220,0x109);
-	reg32_write(0x3c240224,0x9);
-	reg32_write(0x3c240228,0x3c0);
-	reg32_write(0x3c24022c,0x149);
-	reg32_write(0x3c240230,0x9);
-	reg32_write(0x3c240234,0x3c0);
-	reg32_write(0x3c240238,0x159);
-	reg32_write(0x3c24023c,0x18);
-	reg32_write(0x3c240240,0x10);
-	reg32_write(0x3c240244,0x109);
-	reg32_write(0x3c240248,0x0);
-	reg32_write(0x3c24024c,0x3c0);
-	reg32_write(0x3c240250,0x109);
-	reg32_write(0x3c240254,0x18);
-	reg32_write(0x3c240258,0x4);
-	reg32_write(0x3c24025c,0x48);
-	reg32_write(0x3c240260,0x18);
-	reg32_write(0x3c240264,0x4);
-	reg32_write(0x3c240268,0x58);
-	reg32_write(0x3c24026c,0xa);
-	reg32_write(0x3c240270,0x10);
-	reg32_write(0x3c240274,0x109);
-	reg32_write(0x3c240278,0x2);
-	reg32_write(0x3c24027c,0x10);
-	reg32_write(0x3c240280,0x109);
-	reg32_write(0x3c240284,0x5);
-	reg32_write(0x3c240288,0x7c0);
-	reg32_write(0x3c24028c,0x109);
-	reg32_write(0x3c240290,0x10);
-	reg32_write(0x3c240294,0x10);
-	reg32_write(0x3c240298,0x109);
-	reg32_write(0x3c100000,0x811);
-	reg32_write(0x3c100080,0x880);
-	reg32_write(0x3c100100,0x0);
-	reg32_write(0x3c100180,0x0);
-	reg32_write(0x3c100004,0x4008);
-	reg32_write(0x3c100084,0x83);
-	reg32_write(0x3c100104,0x4f);
-	reg32_write(0x3c100184,0x0);
-	reg32_write(0x3c100008,0x4040);
-	reg32_write(0x3c100088,0x83);
-	reg32_write(0x3c100108,0x51);
-	reg32_write(0x3c100188,0x0);
-	reg32_write(0x3c10000c,0x811);
-	reg32_write(0x3c10008c,0x880);
-	reg32_write(0x3c10010c,0x0);
-	reg32_write(0x3c10018c,0x0);
-	reg32_write(0x3c100010,0x720);
-	reg32_write(0x3c100090,0xf);
-	reg32_write(0x3c100110,0x1740);
-	reg32_write(0x3c100190,0x0);
-	reg32_write(0x3c100014,0x16);
-	reg32_write(0x3c100094,0x83);
-	reg32_write(0x3c100114,0x4b);
-	reg32_write(0x3c100194,0x0);
-	reg32_write(0x3c100018,0x716);
-	reg32_write(0x3c100098,0xf);
-	reg32_write(0x3c100118,0x2001);
-	reg32_write(0x3c100198,0x0);
-	reg32_write(0x3c10001c,0x716);
-	reg32_write(0x3c10009c,0xf);
-	reg32_write(0x3c10011c,0x2800);
-	reg32_write(0x3c10019c,0x0);
-	reg32_write(0x3c100020,0x716);
-	reg32_write(0x3c1000a0,0xf);
-	reg32_write(0x3c100120,0xf00);
-	reg32_write(0x3c1001a0,0x0);
-	reg32_write(0x3c100024,0x720);
-	reg32_write(0x3c1000a4,0xf);
-	reg32_write(0x3c100124,0x1400);
-	reg32_write(0x3c1001a4,0x0);
-	reg32_write(0x3c100028,0xe08);
-	reg32_write(0x3c1000a8,0xc15);
-	reg32_write(0x3c100128,0x0);
-	reg32_write(0x3c1001a8,0x0);
-	reg32_write(0x3c10002c,0x623);
-	reg32_write(0x3c1000ac,0x15);
-	reg32_write(0x3c10012c,0x0);
-	reg32_write(0x3c1001ac,0x0);
-	reg32_write(0x3c100030,0x4028);
-	reg32_write(0x3c1000b0,0x80);
-	reg32_write(0x3c100130,0x0);
-	reg32_write(0x3c1001b0,0x0);
-	reg32_write(0x3c100034,0xe08);
-	reg32_write(0x3c1000b4,0xc1a);
-	reg32_write(0x3c100134,0x0);
-	reg32_write(0x3c1001b4,0x0);
-	reg32_write(0x3c100038,0x623);
-	reg32_write(0x3c1000b8,0x1a);
-	reg32_write(0x3c100138,0x0);
-	reg32_write(0x3c1001b8,0x0);
-	reg32_write(0x3c10003c,0x4040);
-	reg32_write(0x3c1000bc,0x80);
-	reg32_write(0x3c10013c,0x0);
-	reg32_write(0x3c1001bc,0x0);
-	reg32_write(0x3c100040,0x2604);
-	reg32_write(0x3c1000c0,0x15);
-	reg32_write(0x3c100140,0x0);
-	reg32_write(0x3c1001c0,0x0);
-	reg32_write(0x3c100044,0x708);
-	reg32_write(0x3c1000c4,0x5);
-	reg32_write(0x3c100144,0x0);
-	reg32_write(0x3c1001c4,0x2002);
-	reg32_write(0x3c100048,0x8);
-	reg32_write(0x3c1000c8,0x80);
-	reg32_write(0x3c100148,0x0);
-	reg32_write(0x3c1001c8,0x0);
-	reg32_write(0x3c10004c,0x2604);
-	reg32_write(0x3c1000cc,0x1a);
-	reg32_write(0x3c10014c,0x0);
-	reg32_write(0x3c1001cc,0x0);
-	reg32_write(0x3c100050,0x708);
-	reg32_write(0x3c1000d0,0xa);
-	reg32_write(0x3c100150,0x0);
-	reg32_write(0x3c1001d0,0x2002);
-	reg32_write(0x3c100054,0x4040);
-	reg32_write(0x3c1000d4,0x80);
-	reg32_write(0x3c100154,0x0);
-	reg32_write(0x3c1001d4,0x0);
-	reg32_write(0x3c100058,0x60a);
-	reg32_write(0x3c1000d8,0x15);
-	reg32_write(0x3c100158,0x1200);
-	reg32_write(0x3c1001d8,0x0);
-	reg32_write(0x3c10005c,0x61a);
-	reg32_write(0x3c1000dc,0x15);
-	reg32_write(0x3c10015c,0x1300);
-	reg32_write(0x3c1001dc,0x0);
-	reg32_write(0x3c100060,0x60a);
-	reg32_write(0x3c1000e0,0x1a);
-	reg32_write(0x3c100160,0x1200);
-	reg32_write(0x3c1001e0,0x0);
-	reg32_write(0x3c100064,0x642);
-	reg32_write(0x3c1000e4,0x1a);
-	reg32_write(0x3c100164,0x1300);
-	reg32_write(0x3c1001e4,0x0);
-	reg32_write(0x3c100068,0x4808);
-	reg32_write(0x3c1000e8,0x880);
-	reg32_write(0x3c100168,0x0);
-	reg32_write(0x3c1001e8,0x0);
-	reg32_write(0x3c24029c,0x0);
-	reg32_write(0x3c2402a0,0x790);
-	reg32_write(0x3c2402a4,0x11a);
-	reg32_write(0x3c2402a8,0x8);
-	reg32_write(0x3c2402ac,0x7aa);
-	reg32_write(0x3c2402b0,0x2a);
-	reg32_write(0x3c2402b4,0x10);
-	reg32_write(0x3c2402b8,0x7b2);
-	reg32_write(0x3c2402bc,0x2a);
-	reg32_write(0x3c2402c0,0x0);
-	reg32_write(0x3c2402c4,0x7c8);
-	reg32_write(0x3c2402c8,0x109);
-	reg32_write(0x3c2402cc,0x10);
-	reg32_write(0x3c2402d0,0x2a8);
-	reg32_write(0x3c2402d4,0x129);
-	reg32_write(0x3c2402d8,0x8);
-	reg32_write(0x3c2402dc,0x370);
-	reg32_write(0x3c2402e0,0x129);
-	reg32_write(0x3c2402e4,0xa);
-	reg32_write(0x3c2402e8,0x3c8);
-	reg32_write(0x3c2402ec,0x1a9);
-	reg32_write(0x3c2402f0,0xc);
-	reg32_write(0x3c2402f4,0x408);
-	reg32_write(0x3c2402f8,0x199);
-	reg32_write(0x3c2402fc,0x14);
-	reg32_write(0x3c240300,0x790);
-	reg32_write(0x3c240304,0x11a);
-	reg32_write(0x3c240308,0x8);
-	reg32_write(0x3c24030c,0x4);
-	reg32_write(0x3c240310,0x18);
-	reg32_write(0x3c240314,0xe);
-	reg32_write(0x3c240318,0x408);
-	reg32_write(0x3c24031c,0x199);
-	reg32_write(0x3c240320,0x8);
-	reg32_write(0x3c240324,0x8568);
-	reg32_write(0x3c240328,0x108);
-	reg32_write(0x3c24032c,0x18);
-	reg32_write(0x3c240330,0x790);
-	reg32_write(0x3c240334,0x16a);
-	reg32_write(0x3c240338,0x8);
-	reg32_write(0x3c24033c,0x1d8);
-	reg32_write(0x3c240340,0x169);
-	reg32_write(0x3c240344,0x10);
-	reg32_write(0x3c240348,0x8558);
-	reg32_write(0x3c24034c,0x168);
-	reg32_write(0x3c240350,0x70);
-	reg32_write(0x3c240354,0x788);
-	reg32_write(0x3c240358,0x16a);
-	reg32_write(0x3c24035c,0x1ff8);
-	reg32_write(0x3c240360,0x85a8);
-	reg32_write(0x3c240364,0x1e8);
-	reg32_write(0x3c240368,0x50);
-	reg32_write(0x3c24036c,0x798);
-	reg32_write(0x3c240370,0x16a);
-	reg32_write(0x3c240374,0x60);
-	reg32_write(0x3c240378,0x7a0);
-	reg32_write(0x3c24037c,0x16a);
-	reg32_write(0x3c240380,0x8);
-	reg32_write(0x3c240384,0x8310);
-	reg32_write(0x3c240388,0x168);
-	reg32_write(0x3c24038c,0x8);
-	reg32_write(0x3c240390,0xa310);
-	reg32_write(0x3c240394,0x168);
-	reg32_write(0x3c240398,0xa);
-	reg32_write(0x3c24039c,0x408);
-	reg32_write(0x3c2403a0,0x169);
-	reg32_write(0x3c2403a4,0x6e);
-	reg32_write(0x3c2403a8,0x0);
-	reg32_write(0x3c2403ac,0x68);
-	reg32_write(0x3c2403b0,0x0);
-	reg32_write(0x3c2403b4,0x408);
-	reg32_write(0x3c2403b8,0x169);
-	reg32_write(0x3c2403bc,0x0);
-	reg32_write(0x3c2403c0,0x8310);
-	reg32_write(0x3c2403c4,0x168);
-	reg32_write(0x3c2403c8,0x0);
-	reg32_write(0x3c2403cc,0xa310);
-	reg32_write(0x3c2403d0,0x168);
-	reg32_write(0x3c2403d4,0x1ff8);
-	reg32_write(0x3c2403d8,0x85a8);
-	reg32_write(0x3c2403dc,0x1e8);
-	reg32_write(0x3c2403e0,0x68);
-	reg32_write(0x3c2403e4,0x798);
-	reg32_write(0x3c2403e8,0x16a);
-	reg32_write(0x3c2403ec,0x78);
-	reg32_write(0x3c2403f0,0x7a0);
-	reg32_write(0x3c2403f4,0x16a);
-	reg32_write(0x3c2403f8,0x68);
-	reg32_write(0x3c2403fc,0x790);
-	reg32_write(0x3c240400,0x16a);
-	reg32_write(0x3c240404,0x8);
-	reg32_write(0x3c240408,0x8b10);
-	reg32_write(0x3c24040c,0x168);
-	reg32_write(0x3c240410,0x8);
-	reg32_write(0x3c240414,0xab10);
-	reg32_write(0x3c240418,0x168);
-	reg32_write(0x3c24041c,0xa);
-	reg32_write(0x3c240420,0x408);
-	reg32_write(0x3c240424,0x169);
-	reg32_write(0x3c240428,0x58);
-	reg32_write(0x3c24042c,0x0);
-	reg32_write(0x3c240430,0x68);
-	reg32_write(0x3c240434,0x0);
-	reg32_write(0x3c240438,0x408);
-	reg32_write(0x3c24043c,0x169);
-	reg32_write(0x3c240440,0x0);
-	reg32_write(0x3c240444,0x8b10);
-	reg32_write(0x3c240448,0x168);
-	reg32_write(0x3c24044c,0x0);
-	reg32_write(0x3c240450,0xab10);
-	reg32_write(0x3c240454,0x168);
-	reg32_write(0x3c240458,0x0);
-	reg32_write(0x3c24045c,0x1d8);
-	reg32_write(0x3c240460,0x169);
-	reg32_write(0x3c240464,0x80);
-	reg32_write(0x3c240468,0x790);
-	reg32_write(0x3c24046c,0x16a);
-	reg32_write(0x3c240470,0x18);
-	reg32_write(0x3c240474,0x7aa);
-	reg32_write(0x3c240478,0x6a);
-	reg32_write(0x3c24047c,0xa);
-	reg32_write(0x3c240480,0x0);
-	reg32_write(0x3c240484,0x1e9);
-	reg32_write(0x3c240488,0x8);
-	reg32_write(0x3c24048c,0x8080);
-	reg32_write(0x3c240490,0x108);
-	reg32_write(0x3c240494,0xf);
-	reg32_write(0x3c240498,0x408);
-	reg32_write(0x3c24049c,0x169);
-	reg32_write(0x3c2404a0,0xc);
-	reg32_write(0x3c2404a4,0x0);
-	reg32_write(0x3c2404a8,0x68);
-	reg32_write(0x3c2404ac,0x9);
-	reg32_write(0x3c2404b0,0x0);
-	reg32_write(0x3c2404b4,0x1a9);
-	reg32_write(0x3c2404b8,0x0);
-	reg32_write(0x3c2404bc,0x408);
-	reg32_write(0x3c2404c0,0x169);
-	reg32_write(0x3c2404c4,0x0);
-	reg32_write(0x3c2404c8,0x8080);
-	reg32_write(0x3c2404cc,0x108);
-	reg32_write(0x3c2404d0,0x8);
-	reg32_write(0x3c2404d4,0x7aa);
-	reg32_write(0x3c2404d8,0x6a);
-	reg32_write(0x3c2404dc,0x0);
-	reg32_write(0x3c2404e0,0x8568);
-	reg32_write(0x3c2404e4,0x108);
-	reg32_write(0x3c2404e8,0xb7);
-	reg32_write(0x3c2404ec,0x790);
-	reg32_write(0x3c2404f0,0x16a);
-	reg32_write(0x3c2404f4,0x1f);
-	reg32_write(0x3c2404f8,0x0);
-	reg32_write(0x3c2404fc,0x68);
-	reg32_write(0x3c240500,0x8);
-	reg32_write(0x3c240504,0x8558);
-	reg32_write(0x3c240508,0x168);
-	reg32_write(0x3c24050c,0xf);
-	reg32_write(0x3c240510,0x408);
-	reg32_write(0x3c240514,0x169);
-	reg32_write(0x3c240518,0xc);
-	reg32_write(0x3c24051c,0x0);
-	reg32_write(0x3c240520,0x68);
-	reg32_write(0x3c240524,0x0);
-	reg32_write(0x3c240528,0x408);
-	reg32_write(0x3c24052c,0x169);
-	reg32_write(0x3c240530,0x0);
-	reg32_write(0x3c240534,0x8558);
-	reg32_write(0x3c240538,0x168);
-	reg32_write(0x3c24053c,0x8);
-	reg32_write(0x3c240540,0x3c8);
-	reg32_write(0x3c240544,0x1a9);
-	reg32_write(0x3c240548,0x3);
-	reg32_write(0x3c24054c,0x370);
-	reg32_write(0x3c240550,0x129);
-	reg32_write(0x3c240554,0x20);
-	reg32_write(0x3c240558,0x2aa);
-	reg32_write(0x3c24055c,0x9);
-	reg32_write(0x3c240560,0x0);
-	reg32_write(0x3c240564,0x400);
-	reg32_write(0x3c240568,0x10e);
-	reg32_write(0x3c24056c,0x8);
-	reg32_write(0x3c240570,0xe8);
-	reg32_write(0x3c240574,0x109);
-	reg32_write(0x3c240578,0x0);
-	reg32_write(0x3c24057c,0x8140);
-	reg32_write(0x3c240580,0x10c);
-	reg32_write(0x3c240584,0x10);
-	reg32_write(0x3c240588,0x8138);
-	reg32_write(0x3c24058c,0x10c);
-	reg32_write(0x3c240590,0x8);
-	reg32_write(0x3c240594,0x7c8);
-	reg32_write(0x3c240598,0x101);
-	reg32_write(0x3c24059c,0x8);
-	reg32_write(0x3c2405a0,0x0);
-	reg32_write(0x3c2405a4,0x8);
-	reg32_write(0x3c2405a8,0x8);
-	reg32_write(0x3c2405ac,0x448);
-	reg32_write(0x3c2405b0,0x109);
-	reg32_write(0x3c2405b4,0xf);
-	reg32_write(0x3c2405b8,0x7c0);
-	reg32_write(0x3c2405bc,0x109);
-	reg32_write(0x3c2405c0,0x0);
-	reg32_write(0x3c2405c4,0xe8);
-	reg32_write(0x3c2405c8,0x109);
-	reg32_write(0x3c2405cc,0x47);
-	reg32_write(0x3c2405d0,0x630);
-	reg32_write(0x3c2405d4,0x109);
-	reg32_write(0x3c2405d8,0x8);
-	reg32_write(0x3c2405dc,0x618);
-	reg32_write(0x3c2405e0,0x109);
-	reg32_write(0x3c2405e4,0x8);
-	reg32_write(0x3c2405e8,0xe0);
-	reg32_write(0x3c2405ec,0x109);
-	reg32_write(0x3c2405f0,0x0);
-	reg32_write(0x3c2405f4,0x7c8);
-	reg32_write(0x3c2405f8,0x109);
-	reg32_write(0x3c2405fc,0x8);
-	reg32_write(0x3c240600,0x8140);
-	reg32_write(0x3c240604,0x10c);
-	reg32_write(0x3c240608,0x0);
-	reg32_write(0x3c24060c,0x1);
-	reg32_write(0x3c240610,0x8);
-	reg32_write(0x3c240614,0x8);
-	reg32_write(0x3c240618,0x4);
-	reg32_write(0x3c24061c,0x8);
-	reg32_write(0x3c240620,0x8);
-	reg32_write(0x3c240624,0x7c8);
-	reg32_write(0x3c240628,0x101);
-	reg32_write(0x3c240018,0x0);
-	reg32_write(0x3c24001c,0x0);
-	reg32_write(0x3c240020,0x8);
-	reg32_write(0x3c240024,0x0);
-	reg32_write(0x3c240028,0x0);
-	reg32_write(0x3c24002c,0x0);
-	reg32_write(0x3c34039c,0x400);
-	reg32_write(0x3c24005c,0x0);
-	reg32_write(0x3c24007c,0x2a);
-	reg32_write(0x3c240098,0x6a);
-	reg32_write(0x3c100340,0x0);
-	reg32_write(0x3c100344,0x101);
-	reg32_write(0x3c100348,0x105);
-	reg32_write(0x3c10034c,0x107);
-	reg32_write(0x3c100350,0x10f);
-	reg32_write(0x3c100354,0x202);
-	reg32_write(0x3c100358,0x20a);
-	reg32_write(0x3c10035c,0x20b);
-	reg32_write(0x3c0800e8,0x2);
-	reg32_write(0x3c08002c,0x64);
-	reg32_write(0x3c080030,0xc8);
-	reg32_write(0x3c080034,0x7d0);
-	reg32_write(0x3c080038,0x2c);
-	reg32_write(0x3c48002c,0x14);
-	reg32_write(0x3c480030,0x29);
-	reg32_write(0x3c480034,0x1a1);
-	reg32_write(0x3c480038,0x10);
-	reg32_write(0x3c240030,0x0);
-	reg32_write(0x3c240034,0x173);
-	reg32_write(0x3c240038,0x60);
-	reg32_write(0x3c24003c,0x6110);
-	reg32_write(0x3c240040,0x2152);
-	reg32_write(0x3c240044,0xdfbd);
-	reg32_write(0x3c240048,0x60);
-	reg32_write(0x3c24004c,0x6152);
-	reg32_write(0x3c080040,0x5a);
-	reg32_write(0x3c080044,0x3);
-	reg32_write(0x3c480040,0x5a);
-	reg32_write(0x3c480044,0x3);
-	reg32_write(0x3c100200,0xe0);
-	reg32_write(0x3c100204,0x12);
-	reg32_write(0x3c100208,0xe0);
-	reg32_write(0x3c10020c,0x12);
-	reg32_write(0x3c100210,0xe0);
-	reg32_write(0x3c100214,0x12);
-	reg32_write(0x3c500200,0xe0);
-	reg32_write(0x3c500204,0x12);
-	reg32_write(0x3c500208,0xe0);
-	reg32_write(0x3c50020c,0x12);
-	reg32_write(0x3c500210,0xe0);
-	reg32_write(0x3c500214,0x12);
-	reg32_write(0x3c1003f4,0xf);
-	reg32_write(0x3c040044,0x1);
-	reg32_write(0x3c040048,0x1);
-	reg32_write(0x3c04004c,0x180);
-	reg32_write(0x3c040060,0x1);
-	reg32_write(0x3c040008,0x6209);
-	reg32_write(0x3c0402c8,0x1);
-	reg32_write(0x3c0406d0,0x1);
-	reg32_write(0x3c040ad0,0x1);
-	reg32_write(0x3c040ed0,0x1);
-	reg32_write(0x3c0412d0,0x1);
-	reg32_write(0x3c0416d0,0x1);
-	reg32_write(0x3c041ad0,0x1);
-	reg32_write(0x3c041ed0,0x1);
-	reg32_write(0x3c0422d0,0x1);
-	reg32_write(0x3c044044,0x1);
-	reg32_write(0x3c044048,0x1);
-	reg32_write(0x3c04404c,0x180);
-	reg32_write(0x3c044060,0x1);
-	reg32_write(0x3c044008,0x6209);
-	reg32_write(0x3c0442c8,0x1);
-	reg32_write(0x3c0446d0,0x1);
-	reg32_write(0x3c044ad0,0x1);
-	reg32_write(0x3c044ed0,0x1);
-	reg32_write(0x3c0452d0,0x1);
-	reg32_write(0x3c0456d0,0x1);
-	reg32_write(0x3c045ad0,0x1);
-	reg32_write(0x3c045ed0,0x1);
-	reg32_write(0x3c0462d0,0x1);
-	reg32_write(0x3c048044,0x1);
-	reg32_write(0x3c048048,0x1);
-	reg32_write(0x3c04804c,0x180);
-	reg32_write(0x3c048060,0x1);
-	reg32_write(0x3c048008,0x6209);
-	reg32_write(0x3c0482c8,0x1);
-	reg32_write(0x3c0486d0,0x1);
-	reg32_write(0x3c048ad0,0x1);
-	reg32_write(0x3c048ed0,0x1);
-	reg32_write(0x3c0492d0,0x1);
-	reg32_write(0x3c0496d0,0x1);
-	reg32_write(0x3c049ad0,0x1);
-	reg32_write(0x3c049ed0,0x1);
-	reg32_write(0x3c04a2d0,0x1);
-	reg32_write(0x3c04c044,0x1);
-	reg32_write(0x3c04c048,0x1);
-	reg32_write(0x3c04c04c,0x180);
-	reg32_write(0x3c04c060,0x1);
-	reg32_write(0x3c04c008,0x6209);
-	reg32_write(0x3c04c2c8,0x1);
-	reg32_write(0x3c04c6d0,0x1);
-	reg32_write(0x3c04cad0,0x1);
-	reg32_write(0x3c04ced0,0x1);
-	reg32_write(0x3c04d2d0,0x1);
-	reg32_write(0x3c04d6d0,0x1);
-	reg32_write(0x3c04dad0,0x1);
-	reg32_write(0x3c04ded0,0x1);
-	reg32_write(0x3c04e2d0,0x1);
-	reg32_write(0x3c0800e8,0x2);
-	reg32_write(0x3c300200,0x2);
-	//customer Post Train
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x00020010, 0x0000006a);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x0002001d, 0x00000001);
-	/*
-	 * CalBusy.0 =1, indicates the calibrator is actively calibrating.
-	 * Wait Calibrating done.
-	 */
-	tmp_t = 1;
-	while(tmp_t) {
-		tmp = reg32_read(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x20097);
-		tmp_t = tmp & 0x01;
-	}
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0xd0000, 0x0);
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0x2006e, 0x0);
-	//disable APB bus to access DDRPHY RAM
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0) + 4 * 0xd0000, 0x1);
-}
\ No newline at end of file
diff --git a/board/tqc/tqma8mx/ddr/helper.c b/board/tqc/tqma8mx/ddr/helper.c
deleted file mode 100644
index 782009eb39..0000000000
--- a/board/tqc/tqma8mx/ddr/helper.c
+++ /dev/null
@@ -1,104 +0,0 @@
-/*
- * Copyright 2017 NXP
- *
- * SPDX-License-Identifier:	GPL-2.0+
- */
-
-#include <common.h>
-#include <spl.h>
-#include <asm/io.h>
-#include <errno.h>
-#include <asm/io.h>
-#include <asm/arch/ddr_memory_map.h>
-#include <asm/sections.h>
-
-#include "ddr.h"
-
-DECLARE_GLOBAL_DATA_PTR;
-
-#define IMEM_LEN 32768//23400	//byte
-#define DMEM_LEN 16384//1720	//byte
-#define IMEM_2D_OFFSET 	49152
-
-#define IMEM_OFFSET_ADDR 0x00050000
-#define DMEM_OFFSET_ADDR 0x00054000
-#define DDR_TRAIN_CODE_BASE_ADDR IP2APB_DDRPHY_IPS_BASE_ADDR(0)
-
-/* We need PHY iMEM PHY is 32KB padded */
-void ddr_load_train_code(enum fw_type type)
-{
-	u32 tmp32, i;
-	u32 error = 0;
-	unsigned long pr_to32, pr_from32;
-	unsigned long fw_offset = type ? IMEM_2D_OFFSET : 0;
-	unsigned long imem_start = (unsigned long)&_end + fw_offset;
-	unsigned long dmem_start = imem_start + IMEM_LEN;
-
-	pr_from32 = imem_start;
-	pr_to32 = DDR_TRAIN_CODE_BASE_ADDR + 4 * IMEM_OFFSET_ADDR;
-	for(i = 0x0; i < IMEM_LEN; ){
-		tmp32 = readl(pr_from32);
-		writew(tmp32 & 0x0000ffff, pr_to32);
-		pr_to32 += 4;
-		writew((tmp32 >> 16) & 0x0000ffff, pr_to32);
-		pr_to32 += 4;
-		pr_from32 += 4;
-		i += 4;
-	}
-
-	pr_from32 = dmem_start;
-	pr_to32 = DDR_TRAIN_CODE_BASE_ADDR + 4 * DMEM_OFFSET_ADDR;
-	for(i = 0x0; i < DMEM_LEN;){
-		tmp32 = readl(pr_from32);
-		writew(tmp32 & 0x0000ffff, pr_to32);
-		pr_to32 += 4;
-		writew((tmp32 >> 16) & 0x0000ffff, pr_to32);
-		pr_to32 += 4;
-		pr_from32 += 4;
-		i += 4;
-	}
-
-	printf("check ddr4_pmu_train_imem code\n");
-	pr_from32 = imem_start;
-	pr_to32 = DDR_TRAIN_CODE_BASE_ADDR + 4 * IMEM_OFFSET_ADDR;
-	for(i = 0x0; i < IMEM_LEN;){
-		tmp32 = (readw(pr_to32) & 0x0000ffff);
-		pr_to32 += 4;
-		tmp32 += ((readw(pr_to32) & 0x0000ffff) << 16);
-
-		if(tmp32 != readl(pr_from32)){
-			printf("%lx %lx\n", pr_from32, pr_to32);
-			error++;
-		}
-		pr_from32 += 4;
-		pr_to32 += 4;
-		i += 4;
-	}
-	if(error){
-		printf("check ddr4_pmu_train_imem code fail=%d\n",error);
-	}else{
-		printf("check ddr4_pmu_train_imem code pass\n");
-	}
-
-	printf("check ddr4_pmu_train_dmem code\n");
-	pr_from32 = dmem_start;
-	pr_to32 = DDR_TRAIN_CODE_BASE_ADDR + 4 * DMEM_OFFSET_ADDR;
-	for(i = 0x0; i < DMEM_LEN;){
-		tmp32 = (readw(pr_to32) & 0x0000ffff);
-		pr_to32 += 4;
-		tmp32 += ((readw(pr_to32) & 0x0000ffff) << 16);
-		if(tmp32 != readl(pr_from32)){
-			printf("%lx %lx\n", pr_from32, pr_to32);
-			error++;
-		}
-		pr_from32 += 4;
-		pr_to32 += 4;
-		i += 4;
-	}
-
-	if(error){
-		printf("check ddr4_pmu_train_dmem code fail=%d",error);
-	}else{
-		printf("check ddr4_pmu_train_dmem code pass\n");
-	}
-}
diff --git a/board/tqc/tqma8mx/ddr/lpddr4_dvfs.h b/board/tqc/tqma8mx/ddr/lpddr4_dvfs.h
deleted file mode 100755
index 0ee2ea9af9..0000000000
--- a/board/tqc/tqma8mx/ddr/lpddr4_dvfs.h
+++ /dev/null
@@ -1,78 +0,0 @@
-/*
- * Copyright 2018 NXP
- *
- * SPDX-License-Identifier:	GPL-2.0+
- */
-
-#ifndef __LPDDR4_DVFS_H__
-#define  __LPDDR4_DVFS_H__
-#include <asm/arch/ddr_memory_map.h>
-
-#define DFILP_SPT
-
-#define ANAMIX_PLL_BASE_ADDR	0x30360000
-#define HW_DRAM_PLL_CFG0_ADDR	(ANAMIX_PLL_BASE_ADDR + 0x60)
-#define HW_DRAM_PLL_CFG1_ADDR	(ANAMIX_PLL_BASE_ADDR + 0x64)
-#define HW_DRAM_PLL_CFG2_ADDR	(ANAMIX_PLL_BASE_ADDR + 0x68)
-
-#define LPDDR4_HDT_CTL_2D	0xC8  /* stage completion */
-#define LPDDR4_HDT_CTL_3200_1D	0xC8  /* stage completion */
-#define LPDDR4_HDT_CTL_400_1D	0xC8  /* stage completion */
-#define LPDDR4_HDT_CTL_100_1D	0xC8  /* stage completion */
-
-/* 2D share & weight */
-#define LPDDR4_2D_WEIGHT	0x1f7f
-#define LPDDR4_2D_SHARE		1
-#define LPDDR4_CATRAIN_3200_1d	0
-#define LPDDR4_CATRAIN_400	0
-#define LPDDR4_CATRAIN_100	0
-#define LPDDR4_CATRAIN_3200_2d	0
-
-#define WR_POST_EXT_3200  /* recommened to define */
-
-/* lpddr4 phy training config */
-/* for LPDDR4 Rtt */
-#define LPDDR4_RTT40	6
-#define LPDDR4_RTT48	5
-#define LPDDR4_RTT60	4
-#define LPDDR4_RTT80	3
-#define LPDDR4_RTT120	2
-#define LPDDR4_RTT240	1
-#define LPDDR4_RTT_DIS	0
-
-/* for LPDDR4 Ron */
-#define LPDDR4_RON34	7
-#define LPDDR4_RON40	6
-#define LPDDR4_RON48	5
-#define LPDDR4_RON60	4
-#define LPDDR4_RON80	3
-
-#define LPDDR4_PHY_ADDR_RON60	0x1
-#define LPDDR4_PHY_ADDR_RON40   0x3
-#define LPDDR4_PHY_ADDR_RON30   0x7
-#define LPDDR4_PHY_ADDR_RON24   0xf
-#define LPDDR4_PHY_ADDR_RON20   0x1f
-
-/* for read channel */
-#define LPDDR4_RON		LPDDR4_RON40 /* MR3[5:3] */
-#define LPDDR4_PHY_RTT		30
-#define LPDDR4_PHY_VREF_VALUE 	17
-
-/* for write channel */
-#define LPDDR4_PHY_RON		30
-#define LPDDR4_PHY_ADDR_RON	LPDDR4_PHY_ADDR_RON40
-#define LPDDR4_RTT_DQ		LPDDR4_RTT40 /* MR11[2:0] */
-#define LPDDR4_RTT_CA		LPDDR4_RTT40 /* MR11[6:4] */
-#define LPDDR4_RTT_CA_BANK0	LPDDR4_RTT40 /* MR11[6:4] */
-#define LPDDR4_RTT_CA_BANK1	LPDDR4_RTT40 /* LPDDR4_RTT_DIS//MR11[6:4] */
-#define LPDDR4_VREF_VALUE_CA		((1<<6)|(0xd)) /*((0<<6)|(0xe)) MR12 */
-#define LPDDR4_VREF_VALUE_DQ_RANK0	((1<<6)|(0xd)) /* MR14 */
-#define LPDDR4_VREF_VALUE_DQ_RANK1	((1<<6)|(0xd)) /* MR14 */
-#define LPDDR4_MR22_RANK0           	((0<<5)|(1<<4)|(0<<3)|(LPDDR4_RTT40)) /* MR22: OP[5:3]ODTD-CA,CS,CK */
-#define LPDDR4_MR22_RANK1		((0<<5)|(1<<4)|(0<<3)|(LPDDR4_RTT40)) /* MR22: OP[5:3]ODTD-CA,CS,CK */
-#define LPDDR4_MR3_PU_CAL		1 /* MR3[0] */
-
-#define LPDDR4_2D_WEIGHT 0x1f7f
-#define LPDDR4_2D_SHARE 1
-
-#endif  /*__LPDDR4_DVFS_H__ */
diff --git a/board/tqc/tqma8mx/ddr/wait_ddrphy_training_complete.c b/board/tqc/tqma8mx/ddr/wait_ddrphy_training_complete.c
deleted file mode 100644
index 0b42e58bd1..0000000000
--- a/board/tqc/tqma8mx/ddr/wait_ddrphy_training_complete.c
+++ /dev/null
@@ -1,96 +0,0 @@
-/*
- * Copyright 2017 NXP
- *
- * SPDX-License-Identifier:	GPL-2.0+
- */
-
-static inline void poll_pmu_message_ready(void)
-{
-	unsigned int reg;
-
-	do {
-		reg = reg32_read(IP2APB_DDRPHY_IPS_BASE_ADDR(0)+4*0xd0004);
-	} while (reg & 0x1);
-}
-
-static inline void ack_pmu_message_recieve(void)
-{
-	unsigned int reg;
-
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0)+4*0xd0031,0x0);
-
-	do {
-		reg = reg32_read(IP2APB_DDRPHY_IPS_BASE_ADDR(0)+4*0xd0004);
-	} while (!(reg & 0x1));
-
-	reg32_write(IP2APB_DDRPHY_IPS_BASE_ADDR(0)+4*0xd0031,0x1);
-}
-
-static inline unsigned int get_mail(void)
-{
-	unsigned int reg;
-
-	poll_pmu_message_ready();
-
-	reg = reg32_read(IP2APB_DDRPHY_IPS_BASE_ADDR(0)+4*0xd0032);
-
-	ack_pmu_message_recieve();
-
-	return reg;
-}
-
-static inline unsigned int get_stream_message(void)
-{
-	unsigned int reg, reg2;
-
-	poll_pmu_message_ready();
-
-	reg = reg32_read(IP2APB_DDRPHY_IPS_BASE_ADDR(0)+4*0xd0032);
-
-	reg2 = reg32_read(IP2APB_DDRPHY_IPS_BASE_ADDR(0)+4*0xd0034);
-
-	reg2 = (reg2 << 16) | reg;
-
-	ack_pmu_message_recieve();
-
-	return reg2;
-}
-
-static inline void decode_major_message(unsigned int mail)
-{
-	ddr_printf("[PMU Major message = 0x%08x]\n", mail);
-}
-
-static inline void decode_streaming_message(void)
-{
-	unsigned int string_index, arg __maybe_unused;
-	int i = 0;
-
-	string_index = get_stream_message();
-	ddr_printf("	PMU String index = 0x%08x\n", string_index);
-	while (i < (string_index & 0xffff)){
-		arg = get_stream_message();
-		ddr_printf("	arg[%d] = 0x%08x\n", i, arg);
-		i++;
-	}
-
-	ddr_printf("\n");
-}
-
-void wait_ddrphy_training_complete(void)
-{
-	unsigned int mail;
-	while (1) {
-		mail = get_mail();
-		decode_major_message(mail);
-		if (mail == 0x08) {
-			decode_streaming_message();
-		} else if (mail == 0x07) {
-			printf("Training PASS\n");
-			break;
-		} else if (mail == 0xff) {
-			printf("Training FAILED\n");
-			break;
-		}
-	}
-}
diff --git a/board/tqc/tqma8mx/lpddr4_timing_2gm.c b/board/tqc/tqma8mx/lpddr4_timing_2gm.c
new file mode 100644
index 0000000000..d1b0100f88
--- /dev/null
+++ b/board/tqc/tqma8mx/lpddr4_timing_2gm.c
@@ -0,0 +1,1734 @@
+/*
+ * Copyright 2018 NXP
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ *
+ * Generated code from MX8M_DDR_tool
+ * Align with uboot-imx_v2018.03_4.14.78_1.0.0_ga
+ */
+
+#include <linux/kernel.h>
+#include <asm/arch/imx8m_ddr.h>
+
+struct dram_cfg_param ddr_ddrc_cfg[] = {
+	/** Initialize DDRC registers **/
+	{0x3d400304,0x1},
+	{0x3d400030,0x1},
+	{0x3d400000,0xa3080020},
+	{0x3d400028,0x0},
+	{0x3d400020,0x203},
+	{0x3d400024,0x3e800},
+	{0x3d400064,0x6100e0},
+	{0x3d4000d0,0xc003061c},
+	{0x3d4000d4,0x9e0000},
+	{0x3d4000dc,0xd4002d},
+	{0x3d4000e0,0x310008},
+	{0x3d4000e8,0x66004a},
+	{0x3d4000ec,0x16004a},
+	{0x3d400100,0x1a201b22},
+	{0x3d400104,0x60633},
+	{0x3d40010c,0xc0c000},
+	{0x3d400110,0xf04080f},
+	{0x3d400114,0x2040c0c},
+	{0x3d400118,0x1010007},
+	{0x3d40011c,0x401},
+	{0x3d400130,0x20600},
+	{0x3d400134,0xc100002},
+	{0x3d400138,0xe6},
+	{0x3d400144,0xa00050},
+	{0x3d400180,0xc3200018},
+	{0x3d400184,0x28061a8},
+	{0x3d400188,0x0},
+	{0x3d400190,0x497820a},
+	{0x3d400194,0x80303},
+	{0x3d4001a0,0xe0400018},
+	{0x3d4001a4,0xdf00e4},
+	{0x3d4001a8,0x80000000},
+	{0x3d4001b0,0x11},
+	{0x3d4001b4,0x170a},
+	{0x3d4001c0,0x1},
+	{0x3d4001c4,0x1},
+	{0x3d4000f4,0x639},
+	{0x3d400108,0x70e1617},
+	{0x3d400200,0x16},
+	{0x3d40020c,0x0},
+	{0x3d400210,0x1f1f},
+	{0x3d400204,0x80808},
+	{0x3d400214,0x7070707},
+	{0x3d400218,0xf070707},
+	{0x3d402020,0x1},
+	{0x3d402024,0xd0c0},
+	{0x3d402050,0x20d040},
+	{0x3d402064,0x14002f},
+	{0x3d4020dc,0x940009},
+	{0x3d4020e0,0x310000},
+	{0x3d4020e8,0x66004a},
+	{0x3d4020ec,0x16004a},
+	{0x3d402100,0xb070508},
+	{0x3d402104,0x3040b},
+	{0x3d402108,0x305090c},
+	{0x3d40210c,0x505000},
+	{0x3d402110,0x4040204},
+	{0x3d402114,0x2030303},
+	{0x3d402118,0x1010004},
+	{0x3d40211c,0x301},
+	{0x3d402130,0x20300},
+	{0x3d402134,0xa100002},
+	{0x3d402138,0x31},
+	{0x3d402144,0x220011},
+	{0x3d402180,0xc0a70006},
+	{0x3d402190,0x3858202},
+	{0x3d402194,0x80303},
+	{0x3d4021b4,0x502},
+	{0x3d400244,0x0},
+	{0x3d400250,0x29001505},
+	{0x3d400254,0x2c},
+	{0x3d40025c,0x5900575b},
+	{0x3d400264,0x90000096},
+	{0x3d40026c,0x1000012c},
+	{0x3d400300,0x16},
+	{0x3d400304,0x0},
+	{0x3d40030c,0x0},
+	{0x3d400320,0x1},
+	{0x3d40036c,0x11},
+	{0x3d400400,0x111},
+	{0x3d400404,0x10f3},
+	{0x3d400408,0x72ff},
+	{0x3d400490,0x1},
+	{0x3d400494,0xe00},
+	{0x3d400498,0x62ffff},
+	{0x3d40049c,0xe00},
+	{0x3d4004a0,0xffff},
+};
+
+/* PHY Initialize Configuration */
+struct dram_cfg_param ddr_ddrphy_cfg[] = {
+	{0x100a0,0x1},
+	{0x100a1,0x0},
+	{0x100a2,0x2},
+	{0x100a3,0x4},
+	{0x100a4,0x3},
+	{0x100a5,0x6},
+	{0x100a6,0x5},
+	{0x100a7,0x7},
+	{0x110a0,0x2},
+	{0x110a1,0x0},
+	{0x110a2,0x6},
+	{0x110a3,0x7},
+	{0x110a4,0x4},
+	{0x110a5,0x5},
+	{0x110a6,0x3},
+	{0x110a7,0x1},
+	{0x120a0,0x1},
+	{0x120a1,0x0},
+	{0x120a2,0x4},
+	{0x120a3,0x2},
+	{0x120a4,0x3},
+	{0x120a5,0x6},
+	{0x120a6,0x5},
+	{0x120a7,0x7},
+	{0x130a0,0x2},
+	{0x130a1,0x1},
+	{0x130a2,0x5},
+	{0x130a3,0x7},
+	{0x130a4,0x4},
+	{0x130a5,0x6},
+	{0x130a6,0x3},
+	{0x130a7,0x0},
+	{0x20110,0x2},
+	{0x20111,0x3},
+	{0x20112,0x4},
+	{0x20113,0x5},
+	{0x20114,0x0},
+	{0x20115,0x1},
+	{0x1005f,0x1ff},
+	{0x1015f,0x1ff},
+	{0x1105f,0x1ff},
+	{0x1115f,0x1ff},
+	{0x1205f,0x1ff},
+	{0x1215f,0x1ff},
+	{0x1305f,0x1ff},
+	{0x1315f,0x1ff},
+	{0x11005f,0x1ff},
+	{0x11015f,0x1ff},
+	{0x11105f,0x1ff},
+	{0x11115f,0x1ff},
+	{0x11205f,0x1ff},
+	{0x11215f,0x1ff},
+	{0x11305f,0x1ff},
+	{0x11315f,0x1ff},
+	{0x55,0x1ff},
+	{0x1055,0x1ff},
+	{0x2055,0x1ff},
+	{0x3055,0x1ff},
+	{0x4055,0x1ff},
+	{0x5055,0x1ff},
+	{0x6055,0x1ff},
+	{0x7055,0x1ff},
+	{0x8055,0x1ff},
+	{0x9055,0x1ff},
+	{0x200c5,0x19},
+	{0x1200c5,0x7},
+	{0x2002e,0x2},
+	{0x12002e,0x1},
+	{0x90204,0x0},
+	{0x190204,0x0},
+	{0x20024,0x1ab},
+	{0x2003a,0x0},
+	{0x120024,0x1ab},
+	{0x2003a,0x0},
+	{0x20056,0x3},
+	{0x120056,0xa},
+	{0x1004d,0xe00},
+	{0x1014d,0xe00},
+	{0x1104d,0xe00},
+	{0x1114d,0xe00},
+	{0x1204d,0xe00},
+	{0x1214d,0xe00},
+	{0x1304d,0xe00},
+	{0x1314d,0xe00},
+	{0x11004d,0xe00},
+	{0x11014d,0xe00},
+	{0x11104d,0xe00},
+	{0x11114d,0xe00},
+	{0x11204d,0xe00},
+	{0x11214d,0xe00},
+	{0x11304d,0xe00},
+	{0x11314d,0xe00},
+	{0x10049,0xeba},
+	{0x10149,0xeba},
+	{0x11049,0xeba},
+	{0x11149,0xeba},
+	{0x12049,0xeba},
+	{0x12149,0xeba},
+	{0x13049,0xeba},
+	{0x13149,0xeba},
+	{0x110049,0xeba},
+	{0x110149,0xeba},
+	{0x111049,0xeba},
+	{0x111149,0xeba},
+	{0x112049,0xeba},
+	{0x112149,0xeba},
+	{0x113049,0xeba},
+	{0x113149,0xeba},
+	{0x43,0x63},
+	{0x1043,0x63},
+	{0x2043,0x63},
+	{0x3043,0x63},
+	{0x4043,0x63},
+	{0x5043,0x63},
+	{0x6043,0x63},
+	{0x7043,0x63},
+	{0x8043,0x63},
+	{0x9043,0x63},
+	{0x20018,0x3},
+	{0x20075,0x4},
+	{0x20050,0x0},
+	{0x20008,0x320},
+	{0x120008,0xa7},
+	{0x20088,0x9},
+	{0x200b2,0xdc},
+	{0x10043,0x5a1},
+	{0x10143,0x5a1},
+	{0x11043,0x5a1},
+	{0x11143,0x5a1},
+	{0x12043,0x5a1},
+	{0x12143,0x5a1},
+	{0x13043,0x5a1},
+	{0x13143,0x5a1},
+	{0x1200b2,0xdc},
+	{0x110043,0x5a1},
+	{0x110143,0x5a1},
+	{0x111043,0x5a1},
+	{0x111143,0x5a1},
+	{0x112043,0x5a1},
+	{0x112143,0x5a1},
+	{0x113043,0x5a1},
+	{0x113143,0x5a1},
+	{0x200fa,0x1},
+	{0x1200fa,0x1},
+	{0x20019,0x1},
+	{0x120019,0x1},
+	{0x200f0,0x0},
+	{0x200f1,0x0},
+	{0x200f2,0x4444},
+	{0x200f3,0x8888},
+	{0x200f4,0x5555},
+	{0x200f5,0x0},
+	{0x200f6,0x0},
+	{0x200f7,0xf000},
+	{0x20025,0x0},
+	{0x2002d,0x0},
+	{0x12002d,0x0},
+	{0x200c7,0x80},
+	{0x1200c7,0x80},
+	{0x200ca,0x106},
+	{0x1200ca,0x106},
+};
+
+/* ddr phy trained csr */
+struct dram_cfg_param ddr_ddrphy_trained_csr[] = {
+	{ 0x200b2, 0x0 },  
+	{ 0x1200b2, 0x0 },
+	{ 0x2200b2, 0x0 },
+	{ 0x200cb, 0x0 },  
+	{ 0x10043, 0x0 },  
+	{ 0x110043, 0x0 },
+	{ 0x210043, 0x0 },
+	{ 0x10143, 0x0 },  
+	{ 0x110143, 0x0 },
+	{ 0x210143, 0x0 },
+	{ 0x11043, 0x0 },  
+	{ 0x111043, 0x0 },
+	{ 0x211043, 0x0 },
+	{ 0x11143, 0x0 },  
+	{ 0x111143, 0x0 },
+	{ 0x211143, 0x0 },
+	{ 0x12043, 0x0 },  
+	{ 0x112043, 0x0 },
+	{ 0x212043, 0x0 },
+	{ 0x12143, 0x0 },  
+	{ 0x112143, 0x0 },
+	{ 0x212143, 0x0 },
+	{ 0x13043, 0x0 },  
+	{ 0x113043, 0x0 },
+	{ 0x213043, 0x0 },
+	{ 0x13143, 0x0 },  
+	{ 0x113143, 0x0 },
+	{ 0x213143, 0x0 },
+	{ 0x80, 0x0 },       
+	{ 0x100080, 0x0 },
+	{ 0x200080, 0x0 },
+	{ 0x1080, 0x0 },    
+	{ 0x101080, 0x0 },
+	{ 0x201080, 0x0 },
+	{ 0x2080, 0x0 },    
+	{ 0x102080, 0x0 },
+	{ 0x202080, 0x0 },
+	{ 0x3080, 0x0 },    
+	{ 0x103080, 0x0 },
+	{ 0x203080, 0x0 },
+	{ 0x4080, 0x0 },    
+	{ 0x104080, 0x0 },
+	{ 0x204080, 0x0 },
+	{ 0x5080, 0x0 },    
+	{ 0x105080, 0x0 },
+	{ 0x205080, 0x0 },
+	{ 0x6080, 0x0 },    
+	{ 0x106080, 0x0 },
+	{ 0x206080, 0x0 },
+	{ 0x7080, 0x0 },    
+	{ 0x107080, 0x0 },
+	{ 0x207080, 0x0 },
+	{ 0x8080, 0x0 },    
+	{ 0x108080, 0x0 },
+	{ 0x208080, 0x0 },
+	{ 0x9080, 0x0 },    
+	{ 0x109080, 0x0 },
+	{ 0x209080, 0x0 },
+	{ 0x10080, 0x0 },  
+	{ 0x110080, 0x0 },
+	{ 0x210080, 0x0 },
+	{ 0x10180, 0x0 },  
+	{ 0x110180, 0x0 },
+	{ 0x210180, 0x0 },
+	{ 0x11080, 0x0 },  
+	{ 0x111080, 0x0 },
+	{ 0x211080, 0x0 },
+	{ 0x11180, 0x0 },  
+	{ 0x111180, 0x0 },
+	{ 0x211180, 0x0 },
+	{ 0x12080, 0x0 },  
+	{ 0x112080, 0x0 },
+	{ 0x212080, 0x0 },
+	{ 0x12180, 0x0 },  
+	{ 0x112180, 0x0 },
+	{ 0x212180, 0x0 },
+	{ 0x13080, 0x0 },  
+	{ 0x113080, 0x0 },
+	{ 0x213080, 0x0 },
+	{ 0x13180, 0x0 },  
+	{ 0x113180, 0x0 },
+	{ 0x213180, 0x0 },
+	{ 0x10081, 0x0 },  
+	{ 0x110081, 0x0 },
+	{ 0x210081, 0x0 },
+	{ 0x10181, 0x0 },  
+	{ 0x110181, 0x0 },
+	{ 0x210181, 0x0 },
+	{ 0x11081, 0x0 },  
+	{ 0x111081, 0x0 },
+	{ 0x211081, 0x0 },
+	{ 0x11181, 0x0 },  
+	{ 0x111181, 0x0 },
+	{ 0x211181, 0x0 },
+	{ 0x12081, 0x0 },  
+	{ 0x112081, 0x0 },
+	{ 0x212081, 0x0 },
+	{ 0x12181, 0x0 },  
+	{ 0x112181, 0x0 },
+	{ 0x212181, 0x0 },
+	{ 0x13081, 0x0 },  
+	{ 0x113081, 0x0 },
+	{ 0x213081, 0x0 },
+	{ 0x13181, 0x0 },  
+	{ 0x113181, 0x0 },
+	{ 0x213181, 0x0 },
+	{ 0x100d0, 0x0 },  
+	{ 0x1100d0, 0x0 },
+	{ 0x2100d0, 0x0 },
+	{ 0x101d0, 0x0 },  
+	{ 0x1101d0, 0x0 },
+	{ 0x2101d0, 0x0 },
+	{ 0x110d0, 0x0 },  
+	{ 0x1110d0, 0x0 },
+	{ 0x2110d0, 0x0 },
+	{ 0x111d0, 0x0 },  
+	{ 0x1111d0, 0x0 },
+	{ 0x2111d0, 0x0 },
+	{ 0x120d0, 0x0 },  
+	{ 0x1120d0, 0x0 },
+	{ 0x2120d0, 0x0 },
+	{ 0x121d0, 0x0 },  
+	{ 0x1121d0, 0x0 },
+	{ 0x2121d0, 0x0 },
+	{ 0x130d0, 0x0 },  
+	{ 0x1130d0, 0x0 },
+	{ 0x2130d0, 0x0 },
+	{ 0x131d0, 0x0 },  
+	{ 0x1131d0, 0x0 },
+	{ 0x2131d0, 0x0 },
+	{ 0x100d1, 0x0 },  
+	{ 0x1100d1, 0x0 },
+	{ 0x2100d1, 0x0 },
+	{ 0x101d1, 0x0 }, 
+	{ 0x1101d1, 0x0 },
+	{ 0x2101d1, 0x0 },
+	{ 0x110d1, 0x0 }, 
+	{ 0x1110d1, 0x0 },
+	{ 0x2110d1, 0x0 },
+	{ 0x111d1, 0x0 }, 
+	{ 0x1111d1, 0x0 },
+	{ 0x2111d1, 0x0 },
+	{ 0x120d1, 0x0 }, 
+	{ 0x1120d1, 0x0 },
+	{ 0x2120d1, 0x0 },
+	{ 0x121d1, 0x0 }, 
+	{ 0x1121d1, 0x0 },
+	{ 0x2121d1, 0x0 },
+	{ 0x130d1, 0x0 }, 
+	{ 0x1130d1, 0x0 },
+	{ 0x2130d1, 0x0 },
+	{ 0x131d1, 0x0 }, 
+	{ 0x1131d1, 0x0 },
+	{ 0x2131d1, 0x0 },
+	{ 0x10068, 0x0 },
+	{ 0x10168, 0x0 },
+	{ 0x10268, 0x0 },
+	{ 0x10368, 0x0 },
+	{ 0x10468, 0x0 },
+	{ 0x10568, 0x0 },
+	{ 0x10668, 0x0 },
+	{ 0x10768, 0x0 },
+	{ 0x10868, 0x0 },
+	{ 0x11068, 0x0 },
+	{ 0x11168, 0x0 },
+	{ 0x11268, 0x0 },
+	{ 0x11368, 0x0 },
+	{ 0x11468, 0x0 },
+	{ 0x11568, 0x0 },
+	{ 0x11668, 0x0 },
+	{ 0x11768, 0x0 },
+	{ 0x11868, 0x0 },
+	{ 0x12068, 0x0 },
+	{ 0x12168, 0x0 },
+	{ 0x12268, 0x0 },
+	{ 0x12368, 0x0 },
+	{ 0x12468, 0x0 },
+	{ 0x12568, 0x0 },
+	{ 0x12668, 0x0 },
+	{ 0x12768, 0x0 },
+	{ 0x12868, 0x0 },
+	{ 0x13068, 0x0 },
+	{ 0x13168, 0x0 },
+	{ 0x13268, 0x0 },
+	{ 0x13368, 0x0 },
+	{ 0x13468, 0x0 },
+	{ 0x13568, 0x0 },
+	{ 0x13668, 0x0 },
+	{ 0x13768, 0x0 },
+	{ 0x13868, 0x0 },
+	{ 0x10069, 0x0 },
+	{ 0x10169, 0x0 },
+	{ 0x10269, 0x0 },
+	{ 0x10369, 0x0 },
+	{ 0x10469, 0x0 },
+	{ 0x10569, 0x0 },
+	{ 0x10669, 0x0 },
+	{ 0x10769, 0x0 },
+	{ 0x10869, 0x0 },
+	{ 0x11069, 0x0 },
+	{ 0x11169, 0x0 },
+	{ 0x11269, 0x0 },
+	{ 0x11369, 0x0 },
+	{ 0x11469, 0x0 },
+	{ 0x11569, 0x0 },
+	{ 0x11669, 0x0 },
+	{ 0x11769, 0x0 },
+	{ 0x11869, 0x0 },
+	{ 0x12069, 0x0 },
+	{ 0x12169, 0x0 },
+	{ 0x12269, 0x0 },
+	{ 0x12369, 0x0 },
+	{ 0x12469, 0x0 },
+	{ 0x12569, 0x0 },
+	{ 0x12669, 0x0 },
+	{ 0x12769, 0x0 },
+	{ 0x12869, 0x0 },
+	{ 0x13069, 0x0 },
+	{ 0x13169, 0x0 },
+	{ 0x13269, 0x0 },
+	{ 0x13369, 0x0 },
+	{ 0x13469, 0x0 },
+	{ 0x13569, 0x0 },
+	{ 0x13669, 0x0 },
+	{ 0x13769, 0x0 },
+	{ 0x13869, 0x0 },
+	{ 0x1008c, 0x0 },
+	{ 0x11008c, 0x0 },
+	{ 0x21008c, 0x0 },
+	{ 0x1018c, 0x0 }, 
+	{ 0x11018c, 0x0 },
+	{ 0x21018c, 0x0 },
+	{ 0x1108c, 0x0 }, 
+	{ 0x11108c, 0x0 },
+	{ 0x21108c, 0x0 },
+	{ 0x1118c, 0x0 }, 
+	{ 0x11118c, 0x0 },
+	{ 0x21118c, 0x0 },
+	{ 0x1208c, 0x0 }, 
+	{ 0x11208c, 0x0 },
+	{ 0x21208c, 0x0 },
+	{ 0x1218c, 0x0 }, 
+	{ 0x11218c, 0x0 },
+	{ 0x21218c, 0x0 },
+	{ 0x1308c, 0x0 }, 
+	{ 0x11308c, 0x0 },
+	{ 0x21308c, 0x0 },
+	{ 0x1318c, 0x0 }, 
+	{ 0x11318c, 0x0 },
+	{ 0x21318c, 0x0 },
+	{ 0x1008d, 0x0 }, 
+	{ 0x11008d, 0x0 },
+	{ 0x21008d, 0x0 },
+	{ 0x1018d, 0x0 }, 
+	{ 0x11018d, 0x0 },
+	{ 0x21018d, 0x0 },
+	{ 0x1108d, 0x0 }, 
+	{ 0x11108d, 0x0 },
+	{ 0x21108d, 0x0 },
+	{ 0x1118d, 0x0 }, 
+	{ 0x11118d, 0x0 },
+	{ 0x21118d, 0x0 },
+	{ 0x1208d, 0x0 }, 
+	{ 0x11208d, 0x0 },
+	{ 0x21208d, 0x0 },
+	{ 0x1218d, 0x0 }, 
+	{ 0x11218d, 0x0 },
+	{ 0x21218d, 0x0 },
+	{ 0x1308d, 0x0 }, 
+	{ 0x11308d, 0x0 },
+	{ 0x21308d, 0x0 },
+	{ 0x1318d, 0x0 }, 
+	{ 0x11318d, 0x0 },
+	{ 0x21318d, 0x0 },
+	{ 0x100c0, 0x0 }, 
+	{ 0x1100c0, 0x0 },
+	{ 0x2100c0, 0x0 },
+	{ 0x101c0, 0x0 }, 
+	{ 0x1101c0, 0x0 },
+	{ 0x2101c0, 0x0 },
+	{ 0x102c0, 0x0 }, 
+	{ 0x1102c0, 0x0 },
+	{ 0x2102c0, 0x0 },
+	{ 0x103c0, 0x0 }, 
+	{ 0x1103c0, 0x0 },
+	{ 0x2103c0, 0x0 },
+	{ 0x104c0, 0x0 }, 
+	{ 0x1104c0, 0x0 },
+	{ 0x2104c0, 0x0 },
+	{ 0x105c0, 0x0 }, 
+	{ 0x1105c0, 0x0 },
+	{ 0x2105c0, 0x0 },
+	{ 0x106c0, 0x0 }, 
+	{ 0x1106c0, 0x0 },
+	{ 0x2106c0, 0x0 },
+	{ 0x107c0, 0x0 }, 
+	{ 0x1107c0, 0x0 },
+	{ 0x2107c0, 0x0 },
+	{ 0x108c0, 0x0 }, 
+	{ 0x1108c0, 0x0 },
+	{ 0x2108c0, 0x0 },
+	{ 0x110c0, 0x0 }, 
+	{ 0x1110c0, 0x0 },
+	{ 0x2110c0, 0x0 },
+	{ 0x111c0, 0x0 }, 
+	{ 0x1111c0, 0x0 },
+	{ 0x2111c0, 0x0 },
+	{ 0x112c0, 0x0 }, 
+	{ 0x1112c0, 0x0 },
+	{ 0x2112c0, 0x0 },
+	{ 0x113c0, 0x0 }, 
+	{ 0x1113c0, 0x0 },
+	{ 0x2113c0, 0x0 },
+	{ 0x114c0, 0x0 }, 
+	{ 0x1114c0, 0x0 },
+	{ 0x2114c0, 0x0 },
+	{ 0x115c0, 0x0 }, 
+	{ 0x1115c0, 0x0 },
+	{ 0x2115c0, 0x0 },
+	{ 0x116c0, 0x0 }, 
+	{ 0x1116c0, 0x0 },
+	{ 0x2116c0, 0x0 },
+	{ 0x117c0, 0x0 }, 
+	{ 0x1117c0, 0x0 },
+	{ 0x2117c0, 0x0 },
+	{ 0x118c0, 0x0 }, 
+	{ 0x1118c0, 0x0 },
+	{ 0x2118c0, 0x0 },
+	{ 0x120c0, 0x0 }, 
+	{ 0x1120c0, 0x0 },
+	{ 0x2120c0, 0x0 },
+	{ 0x121c0, 0x0 }, 
+	{ 0x1121c0, 0x0 },
+	{ 0x2121c0, 0x0 },
+	{ 0x122c0, 0x0 }, 
+	{ 0x1122c0, 0x0 },
+	{ 0x2122c0, 0x0 },
+	{ 0x123c0, 0x0 }, 
+	{ 0x1123c0, 0x0 },
+	{ 0x2123c0, 0x0 },
+	{ 0x124c0, 0x0 }, 
+	{ 0x1124c0, 0x0 },
+	{ 0x2124c0, 0x0 },
+	{ 0x125c0, 0x0 }, 
+	{ 0x1125c0, 0x0 },
+	{ 0x2125c0, 0x0 },
+	{ 0x126c0, 0x0 }, 
+	{ 0x1126c0, 0x0 },
+	{ 0x2126c0, 0x0 },
+	{ 0x127c0, 0x0 }, 
+	{ 0x1127c0, 0x0 },
+	{ 0x2127c0, 0x0 },
+	{ 0x128c0, 0x0 }, 
+	{ 0x1128c0, 0x0 },
+	{ 0x2128c0, 0x0 },
+	{ 0x130c0, 0x0 }, 
+	{ 0x1130c0, 0x0 },
+	{ 0x2130c0, 0x0 },
+	{ 0x131c0, 0x0 }, 
+	{ 0x1131c0, 0x0 },
+	{ 0x2131c0, 0x0 },
+	{ 0x132c0, 0x0 }, 
+	{ 0x1132c0, 0x0 },
+	{ 0x2132c0, 0x0 },
+	{ 0x133c0, 0x0 }, 
+	{ 0x1133c0, 0x0 },
+	{ 0x2133c0, 0x0 },
+	{ 0x134c0, 0x0 }, 
+	{ 0x1134c0, 0x0 },
+	{ 0x2134c0, 0x0 },
+	{ 0x135c0, 0x0 }, 
+	{ 0x1135c0, 0x0 },
+	{ 0x2135c0, 0x0 },
+	{ 0x136c0, 0x0 }, 
+	{ 0x1136c0, 0x0 },
+	{ 0x2136c0, 0x0 },
+	{ 0x137c0, 0x0 }, 
+	{ 0x1137c0, 0x0 },
+	{ 0x2137c0, 0x0 },
+	{ 0x138c0, 0x0 }, 
+	{ 0x1138c0, 0x0 },
+	{ 0x2138c0, 0x0 },
+	{ 0x100c1, 0x0 }, 
+	{ 0x1100c1, 0x0 },
+	{ 0x2100c1, 0x0 },
+	{ 0x101c1, 0x0 }, 
+	{ 0x1101c1, 0x0 },
+	{ 0x2101c1, 0x0 },
+	{ 0x102c1, 0x0 }, 
+	{ 0x1102c1, 0x0 },
+	{ 0x2102c1, 0x0 },
+	{ 0x103c1, 0x0 }, 
+	{ 0x1103c1, 0x0 },
+	{ 0x2103c1, 0x0 },
+	{ 0x104c1, 0x0 }, 
+	{ 0x1104c1, 0x0 },
+	{ 0x2104c1, 0x0 },
+	{ 0x105c1, 0x0 }, 
+	{ 0x1105c1, 0x0 },
+	{ 0x2105c1, 0x0 },
+	{ 0x106c1, 0x0 }, 
+	{ 0x1106c1, 0x0 },
+	{ 0x2106c1, 0x0 },
+	{ 0x107c1, 0x0 }, 
+	{ 0x1107c1, 0x0 },
+	{ 0x2107c1, 0x0 },
+	{ 0x108c1, 0x0 }, 
+	{ 0x1108c1, 0x0 },
+	{ 0x2108c1, 0x0 },
+	{ 0x110c1, 0x0 }, 
+	{ 0x1110c1, 0x0 },
+	{ 0x2110c1, 0x0 },
+	{ 0x111c1, 0x0 }, 
+	{ 0x1111c1, 0x0 },
+	{ 0x2111c1, 0x0 },
+	{ 0x112c1, 0x0 }, 
+	{ 0x1112c1, 0x0 },
+	{ 0x2112c1, 0x0 },
+	{ 0x113c1, 0x0 }, 
+	{ 0x1113c1, 0x0 },
+	{ 0x2113c1, 0x0 },
+	{ 0x114c1, 0x0 }, 
+	{ 0x1114c1, 0x0 },
+	{ 0x2114c1, 0x0 },
+	{ 0x115c1, 0x0 }, 
+	{ 0x1115c1, 0x0 },
+	{ 0x2115c1, 0x0 },
+	{ 0x116c1, 0x0 }, 
+	{ 0x1116c1, 0x0 },
+	{ 0x2116c1, 0x0 },
+	{ 0x117c1, 0x0 }, 
+	{ 0x1117c1, 0x0 },
+	{ 0x2117c1, 0x0 },
+	{ 0x118c1, 0x0 }, 
+	{ 0x1118c1, 0x0 },
+	{ 0x2118c1, 0x0 },
+	{ 0x120c1, 0x0 }, 
+	{ 0x1120c1, 0x0 },
+	{ 0x2120c1, 0x0 },
+	{ 0x121c1, 0x0 }, 
+	{ 0x1121c1, 0x0 },
+	{ 0x2121c1, 0x0 },
+	{ 0x122c1, 0x0 }, 
+	{ 0x1122c1, 0x0 },
+	{ 0x2122c1, 0x0 },
+	{ 0x123c1, 0x0 }, 
+	{ 0x1123c1, 0x0 },
+	{ 0x2123c1, 0x0 },
+	{ 0x124c1, 0x0 }, 
+	{ 0x1124c1, 0x0 },
+	{ 0x2124c1, 0x0 },
+	{ 0x125c1, 0x0 }, 
+	{ 0x1125c1, 0x0 },
+	{ 0x2125c1, 0x0 },
+	{ 0x126c1, 0x0 }, 
+	{ 0x1126c1, 0x0 },
+	{ 0x2126c1, 0x0 },
+	{ 0x127c1, 0x0 }, 
+	{ 0x1127c1, 0x0 },
+	{ 0x2127c1, 0x0 },
+	{ 0x128c1, 0x0 }, 
+	{ 0x1128c1, 0x0 },
+	{ 0x2128c1, 0x0 },
+	{ 0x130c1, 0x0 }, 
+	{ 0x1130c1, 0x0 },
+	{ 0x2130c1, 0x0 },
+	{ 0x131c1, 0x0 }, 
+	{ 0x1131c1, 0x0 },
+	{ 0x2131c1, 0x0 },
+	{ 0x132c1, 0x0 }, 
+	{ 0x1132c1, 0x0 },
+	{ 0x2132c1, 0x0 },
+	{ 0x133c1, 0x0 }, 
+	{ 0x1133c1, 0x0 },
+	{ 0x2133c1, 0x0 },
+	{ 0x134c1, 0x0 }, 
+	{ 0x1134c1, 0x0 },
+	{ 0x2134c1, 0x0 },
+	{ 0x135c1, 0x0 }, 
+	{ 0x1135c1, 0x0 },
+	{ 0x2135c1, 0x0 },
+	{ 0x136c1, 0x0 }, 
+	{ 0x1136c1, 0x0 },
+	{ 0x2136c1, 0x0 },
+	{ 0x137c1, 0x0 }, 
+	{ 0x1137c1, 0x0 },
+	{ 0x2137c1, 0x0 },
+	{ 0x138c1, 0x0 }, 
+	{ 0x1138c1, 0x0 },
+	{ 0x2138c1, 0x0 },
+	{ 0x10020, 0x0 }, 
+	{ 0x110020, 0x0 },
+	{ 0x210020, 0x0 },
+	{ 0x11020, 0x0 }, 
+	{ 0x111020, 0x0 },
+	{ 0x211020, 0x0 },
+	{ 0x12020, 0x0 }, 
+	{ 0x112020, 0x0 },
+	{ 0x212020, 0x0 },
+	{ 0x13020, 0x0 }, 
+	{ 0x113020, 0x0 },
+	{ 0x213020, 0x0 },
+	{ 0x20072, 0x0 }, 
+	{ 0x20073, 0x0 }, 
+	{ 0x20074, 0x0 }, 
+	{ 0x100aa, 0x0 }, 
+	{ 0x110aa, 0x0 }, 
+	{ 0x120aa, 0x0 }, 
+	{ 0x130aa, 0x0 }, 
+	{ 0x20010, 0x0 }, 
+	{ 0x120010, 0x0 },
+	{ 0x220010, 0x0 },
+	{ 0x20011, 0x0 }, 
+	{ 0x120011, 0x0 },
+	{ 0x220011, 0x0 },
+	{ 0x100ae, 0x0 }, 
+	{ 0x1100ae, 0x0 },
+	{ 0x2100ae, 0x0 },
+	{ 0x100af, 0x0 }, 
+	{ 0x1100af, 0x0 },
+	{ 0x2100af, 0x0 },
+	{ 0x110ae, 0x0 }, 
+	{ 0x1110ae, 0x0 },
+	{ 0x2110ae, 0x0 },
+	{ 0x110af, 0x0 }, 
+	{ 0x1110af, 0x0 },
+	{ 0x2110af, 0x0 },
+	{ 0x120ae, 0x0 }, 
+	{ 0x1120ae, 0x0 },
+	{ 0x2120ae, 0x0 },
+	{ 0x120af, 0x0 }, 
+	{ 0x1120af, 0x0 },
+	{ 0x2120af, 0x0 },
+	{ 0x130ae, 0x0 }, 
+	{ 0x1130ae, 0x0 },
+	{ 0x2130ae, 0x0 },
+	{ 0x130af, 0x0 }, 
+	{ 0x1130af, 0x0 },
+	{ 0x2130af, 0x0 },
+	{ 0x20020, 0x0 }, 
+	{ 0x120020, 0x0 },
+	{ 0x220020, 0x0 },
+	{ 0x100a0, 0x0 }, 
+	{ 0x100a1, 0x0 },
+	{ 0x100a2, 0x0 },
+	{ 0x100a3, 0x0 },
+	{ 0x100a4, 0x0 },
+	{ 0x100a5, 0x0 },
+	{ 0x100a6, 0x0 },
+	{ 0x100a7, 0x0 },
+	{ 0x110a0, 0x0 },
+	{ 0x110a1, 0x0 },
+	{ 0x110a2, 0x0 },
+	{ 0x110a3, 0x0 },
+	{ 0x110a4, 0x0 },
+	{ 0x110a5, 0x0 },
+	{ 0x110a6, 0x0 },
+	{ 0x110a7, 0x0 },
+	{ 0x120a0, 0x0 },
+	{ 0x120a1, 0x0 },
+	{ 0x120a2, 0x0 },
+	{ 0x120a3, 0x0 },
+	{ 0x120a4, 0x0 },
+	{ 0x120a5, 0x0 },
+	{ 0x120a6, 0x0 },
+	{ 0x120a7, 0x0 },
+	{ 0x130a0, 0x0 },
+	{ 0x130a1, 0x0 },
+	{ 0x130a2, 0x0 },
+	{ 0x130a3, 0x0 },
+	{ 0x130a4, 0x0 }, 
+	{ 0x130a5, 0x0 }, 
+	{ 0x130a6, 0x0 }, 
+	{ 0x130a7, 0x0 }, 
+	{ 0x2007c, 0x0 }, 
+	{ 0x12007c, 0x0 },
+	{ 0x22007c, 0x0 },
+	{ 0x2007d, 0x0 }, 
+	{ 0x12007d, 0x0 },
+	{ 0x22007d, 0x0 },
+	{ 0x400fd, 0x0 }, 
+	{ 0x400c0, 0x0 }, 
+	{ 0x90201, 0x0 }, 
+	{ 0x190201, 0x0 },
+	{ 0x290201, 0x0 },
+	{ 0x90202, 0x0 }, 
+	{ 0x190202, 0x0 },
+	{ 0x290202, 0x0 },
+	{ 0x90203, 0x0 }, 
+	{ 0x190203, 0x0 },
+	{ 0x290203, 0x0 },
+	{ 0x90204, 0x0 }, 
+	{ 0x190204, 0x0 },
+	{ 0x290204, 0x0 },
+	{ 0x90205, 0x0 }, 
+	{ 0x190205, 0x0 },
+	{ 0x290205, 0x0 },
+	{ 0x90206, 0x0 }, 
+	{ 0x190206, 0x0 },
+	{ 0x290206, 0x0 },
+	{ 0x90207, 0x0 }, 
+	{ 0x190207, 0x0 },
+	{ 0x290207, 0x0 },
+	{ 0x90208, 0x0 }, 
+	{ 0x190208, 0x0 },
+	{ 0x290208, 0x0 },
+	{ 0x10062, 0x0 }, 
+	{ 0x10162, 0x0 }, 
+	{ 0x10262, 0x0 }, 
+	{ 0x10362, 0x0 }, 
+	{ 0x10462, 0x0 }, 
+	{ 0x10562, 0x0 }, 
+	{ 0x10662, 0x0 }, 
+	{ 0x10762, 0x0 }, 
+	{ 0x10862, 0x0 }, 
+	{ 0x11062, 0x0 }, 
+	{ 0x11162, 0x0 }, 
+	{ 0x11262, 0x0 }, 
+	{ 0x11362, 0x0 }, 
+	{ 0x11462, 0x0 }, 
+	{ 0x11562, 0x0 }, 
+	{ 0x11662, 0x0 },
+	{ 0x11762, 0x0 },
+	{ 0x11862, 0x0 },
+	{ 0x12062, 0x0 },
+	{ 0x12162, 0x0 },
+	{ 0x12262, 0x0 },
+	{ 0x12362, 0x0 },
+	{ 0x12462, 0x0 },
+	{ 0x12562, 0x0 },
+	{ 0x12662, 0x0 },
+	{ 0x12762, 0x0 },
+	{ 0x12862, 0x0 },
+	{ 0x13062, 0x0 },
+	{ 0x13162, 0x0 },
+	{ 0x13262, 0x0 },
+	{ 0x13362, 0x0 },
+	{ 0x13462, 0x0 },
+	{ 0x13562, 0x0 },
+	{ 0x13662, 0x0 },
+	{ 0x13762, 0x0 },
+	{ 0x13862, 0x0 },
+	{ 0x20077, 0x0 },
+	{ 0x10001, 0x0 },
+	{ 0x11001, 0x0 },
+	{ 0x12001, 0x0 },
+	{ 0x13001, 0x0 },
+	{ 0x10040, 0x0 },
+	{ 0x10140, 0x0 },
+	{ 0x10240, 0x0 },
+	{ 0x10340, 0x0 },
+	{ 0x10440, 0x0 },
+	{ 0x10540, 0x0 },
+	{ 0x10640, 0x0 },
+	{ 0x10740, 0x0 },
+	{ 0x10840, 0x0 },
+	{ 0x10030, 0x0 },
+	{ 0x10130, 0x0 },
+	{ 0x10230, 0x0 },
+	{ 0x10330, 0x0 },
+	{ 0x10430, 0x0 },
+	{ 0x10530, 0x0 },
+	{ 0x10630, 0x0 },
+	{ 0x10730, 0x0 },
+	{ 0x10830, 0x0 },
+	{ 0x11040, 0x0 },
+	{ 0x11140, 0x0 },
+	{ 0x11240, 0x0 },
+	{ 0x11340, 0x0 },
+	{ 0x11440, 0x0 },
+	{ 0x11540, 0x0 },
+	{ 0x11640, 0x0 },
+	{ 0x11740, 0x0 },
+	{ 0x11840, 0x0 },
+	{ 0x11030, 0x0 },
+	{ 0x11130, 0x0 },
+	{ 0x11230, 0x0 },
+	{ 0x11330, 0x0 },
+	{ 0x11430, 0x0 },
+	{ 0x11530, 0x0 },
+	{ 0x11630, 0x0 },
+	{ 0x11730, 0x0 },
+	{ 0x11830, 0x0 },
+	{ 0x12040, 0x0 },
+	{ 0x12140, 0x0 },
+	{ 0x12240, 0x0 },
+	{ 0x12340, 0x0 },
+	{ 0x12440, 0x0 },
+	{ 0x12540, 0x0 },
+	{ 0x12640, 0x0 },
+	{ 0x12740, 0x0 },
+	{ 0x12840, 0x0 },
+	{ 0x12030, 0x0 },
+	{ 0x12130, 0x0 },
+	{ 0x12230, 0x0 },
+	{ 0x12330, 0x0 },
+	{ 0x12430, 0x0 },
+	{ 0x12530, 0x0 },
+	{ 0x12630, 0x0 },
+	{ 0x12730, 0x0 },
+	{ 0x12830, 0x0 },
+	{ 0x13040, 0x0 },
+	{ 0x13140, 0x0 },
+	{ 0x13240, 0x0 },
+	{ 0x13340, 0x0 },
+	{ 0x13440, 0x0 },
+	{ 0x13540, 0x0 },
+	{ 0x13640, 0x0 },
+	{ 0x13740, 0x0 },
+	{ 0x13840, 0x0 },
+	{ 0x13030, 0x0 },
+	{ 0x13130, 0x0 },
+	{ 0x13230, 0x0 },
+	{ 0x13330, 0x0 },
+	{ 0x13430, 0x0 },
+	{ 0x13530, 0x0 },
+	{ 0x13630, 0x0 },
+	{ 0x13730, 0x0 },
+	{ 0x13830, 0x0 },
+};
+/* P0 message block paremeter for training firmware */
+struct dram_cfg_param ddr_fsp0_cfg[] = {
+	{0xd0000, 0x0},
+	{0x54003,0xc80},
+	{0x54004,0x2},
+	{0x54005,0x2228},
+	{0x54006,0x11},
+	{0x54008,0x131f},
+	{0x54009,0xc8},
+	{0x5400b,0x2},
+	{0x5400d,0x100},
+	{0x54012,0x310},
+	{0x54019,0x2dd4},
+	{0x5401a,0x31},
+	{0x5401b,0x4a66},
+	{0x5401c,0x4a08},
+	{0x5401e,0x16},
+	{0x5401f,0x2dd4},
+	{0x54020,0x31},
+	{0x54021,0x4a66},
+	{0x54022,0x4a08},
+	{0x54024,0x16},
+	{0x5402b,0x1000},
+	{0x5402c,0x3},
+	{0x54032,0xd400},
+	{0x54033,0x312d},
+	{0x54034,0x6600},
+	{0x54035,0x84a},
+	{0x54036,0x4a},
+	{0x54037,0x1600},
+	{0x54038,0xd400},
+	{0x54039,0x312d},
+	{0x5403a,0x6600},
+	{0x5403b,0x84a},
+	{0x5403c,0x4a},
+	{0x5403d,0x1600},
+	{0xd0000, 0x1},
+};
+
+
+/* P1 message block paremeter for training firmware */
+struct dram_cfg_param ddr_fsp1_cfg[] = {
+	{0xd0000, 0x0},
+	{0x54002,0x1},
+	{0x54003,0x29c},
+	{0x54004,0x2},
+	{0x54005,0x2228},
+	{0x54006,0x11},
+	{0x54008,0x121f},
+	{0x54009,0xc8},
+	{0x5400b,0x2},
+	{0x5400d,0x100},
+	{0x54012,0x310},
+	{0x54019,0x994},
+	{0x5401a,0x31},
+	{0x5401b,0x4a66},
+	{0x5401c,0x4a08},
+	{0x5401e,0x16},
+	{0x5401f,0x994},
+	{0x54020,0x31},
+	{0x54021,0x4a66},
+	{0x54022,0x4a08},
+	{0x54024,0x16},
+	{0x5402b,0x1000},
+	{0x5402c,0x3},
+	{0x54032,0x9400},
+	{0x54033,0x3109},
+	{0x54034,0x6600},
+	{0x54035,0x84a},
+	{0x54036,0x4a},
+	{0x54037,0x1600},
+	{0x54038,0x9400},
+	{0x54039,0x3109},
+	{0x5403a,0x6600},
+	{0x5403b,0x84a},
+	{0x5403c,0x4a},
+	{0x5403d,0x1600},
+	{0xd0000, 0x1},
+};
+
+
+/* P0 2D message block paremeter for training firmware */
+struct dram_cfg_param ddr_fsp0_2d_cfg[] = {
+	{0xd0000, 0x0},
+	{0x54003,0xc80},
+	{0x54004,0x2},
+	{0x54005,0x2228},
+	{0x54006,0x11},
+	{0x54008,0x61},
+	{0x54009,0xc8},
+	{0x5400b,0x2},
+	{0x5400f,0x100},
+	{0x54010,0x1f7f},
+	{0x54012,0x310},
+	{0x54019,0x2dd4},
+	{0x5401a,0x31},
+	{0x5401b,0x4a66},
+	{0x5401c,0x4a08},
+	{0x5401e,0x16},
+	{0x5401f,0x2dd4},
+	{0x54020,0x31},
+	{0x54021,0x4a66},
+	{0x54022,0x4a08},
+	{0x54024,0x16},
+	{0x5402b,0x1000},
+	{0x5402c,0x3},
+	{0x54032,0xd400},
+	{0x54033,0x312d},
+	{0x54034,0x6600},
+	{0x54035,0x84a},
+	{0x54036,0x4a},
+	{0x54037,0x1600},
+	{0x54038,0xd400},
+	{0x54039,0x312d},
+	{0x5403a,0x6600},
+	{0x5403b,0x84a},
+	{0x5403c,0x4a},
+	{0x5403d,0x1600},
+	{ 0xd0000, 0x1 },
+};
+
+/* DRAM PHY init engine image */
+struct dram_cfg_param ddr_phy_pie[] = {
+	{0xd0000, 0x0},
+	{0x90000,0x10},
+	{0x90001,0x400},
+	{0x90002,0x10e},
+	{0x90003,0x0},
+	{0x90004,0x0},
+	{0x90005,0x8},
+	{0x90029,0xb},
+	{0x9002a,0x480},
+	{0x9002b,0x109},
+	{0x9002c,0x8},
+	{0x9002d,0x448},
+	{0x9002e,0x139},
+	{0x9002f,0x8},
+	{0x90030,0x478},
+	{0x90031,0x109},
+	{0x90032,0x0},
+	{0x90033,0xe8},
+	{0x90034,0x109},
+	{0x90035,0x2},
+	{0x90036,0x10},
+	{0x90037,0x139},
+	{0x90038,0xf},
+	{0x90039,0x7c0},
+	{0x9003a,0x139},
+	{0x9003b,0x44},
+	{0x9003c,0x630},
+	{0x9003d,0x159},
+	{0x9003e,0x14f},
+	{0x9003f,0x630},
+	{0x90040,0x159},
+	{0x90041,0x47},
+	{0x90042,0x630},
+	{0x90043,0x149},
+	{0x90044,0x4f},
+	{0x90045,0x630},
+	{0x90046,0x179},
+	{0x90047,0x8},
+	{0x90048,0xe0},
+	{0x90049,0x109},
+	{0x9004a,0x0},
+	{0x9004b,0x7c8},
+	{0x9004c,0x109},
+	{0x9004d,0x0},
+	{0x9004e,0x1},
+	{0x9004f,0x8},
+	{0x90050,0x0},
+	{0x90051,0x45a},
+	{0x90052,0x9},
+	{0x90053,0x0},
+	{0x90054,0x448},
+	{0x90055,0x109},
+	{0x90056,0x40},
+	{0x90057,0x630},
+	{0x90058,0x179},
+	{0x90059,0x1},
+	{0x9005a,0x618},
+	{0x9005b,0x109},
+	{0x9005c,0x40c0},
+	{0x9005d,0x630},
+	{0x9005e,0x149},
+	{0x9005f,0x8},
+	{0x90060,0x4},
+	{0x90061,0x48},
+	{0x90062,0x4040},
+	{0x90063,0x630},
+	{0x90064,0x149},
+	{0x90065,0x0},
+	{0x90066,0x4},
+	{0x90067,0x48},
+	{0x90068,0x40},
+	{0x90069,0x630},
+	{0x9006a,0x149},
+	{0x9006b,0x10},
+	{0x9006c,0x4},
+	{0x9006d,0x18},
+	{0x9006e,0x0},
+	{0x9006f,0x4},
+	{0x90070,0x78},
+	{0x90071,0x549},
+	{0x90072,0x630},
+	{0x90073,0x159},
+	{0x90074,0xd49},
+	{0x90075,0x630},
+	{0x90076,0x159},
+	{0x90077,0x94a},
+	{0x90078,0x630},
+	{0x90079,0x159},
+	{0x9007a,0x441},
+	{0x9007b,0x630},
+	{0x9007c,0x149},
+	{0x9007d,0x42},
+	{0x9007e,0x630},
+	{0x9007f,0x149},
+	{0x90080,0x1},
+	{0x90081,0x630},
+	{0x90082,0x149},
+	{0x90083,0x0},
+	{0x90084,0xe0},
+	{0x90085,0x109},
+	{0x90086,0xa},
+	{0x90087,0x10},
+	{0x90088,0x109},
+	{0x90089,0x9},
+	{0x9008a,0x3c0},
+	{0x9008b,0x149},
+	{0x9008c,0x9},
+	{0x9008d,0x3c0},
+	{0x9008e,0x159},
+	{0x9008f,0x18},
+	{0x90090,0x10},
+	{0x90091,0x109},
+	{0x90092,0x0},
+	{0x90093,0x3c0},
+	{0x90094,0x109},
+	{0x90095,0x18},
+	{0x90096,0x4},
+	{0x90097,0x48},
+	{0x90098,0x18},
+	{0x90099,0x4},
+	{0x9009a,0x58},
+	{0x9009b,0xa},
+	{0x9009c,0x10},
+	{0x9009d,0x109},
+	{0x9009e,0x2},
+	{0x9009f,0x10},
+	{0x900a0,0x109},
+	{0x900a1,0x5},
+	{0x900a2,0x7c0},
+	{0x900a3,0x109},
+	{0x900a4,0x10},
+	{0x900a5,0x10},
+	{0x900a6,0x109},
+	{0x40000,0x811},
+	{0x40020,0x880},
+	{0x40040,0x0},
+	{0x40060,0x0},
+	{0x40001,0x4008},
+	{0x40021,0x83},
+	{0x40041,0x4f},
+	{0x40061,0x0},
+	{0x40002,0x4040},
+	{0x40022,0x83},
+	{0x40042,0x51},
+	{0x40062,0x0},
+	{0x40003,0x811},
+	{0x40023,0x880},
+	{0x40043,0x0},
+	{0x40063,0x0},
+	{0x40004,0x720},
+	{0x40024,0xf},
+	{0x40044,0x1740},
+	{0x40064,0x0},
+	{0x40005,0x16},
+	{0x40025,0x83},
+	{0x40045,0x4b},
+	{0x40065,0x0},
+	{0x40006,0x716},
+	{0x40026,0xf},
+	{0x40046,0x2001},
+	{0x40066,0x0},
+	{0x40007,0x716},
+	{0x40027,0xf},
+	{0x40047,0x2800},
+	{0x40067,0x0},
+	{0x40008,0x716},
+	{0x40028,0xf},
+	{0x40048,0xf00},
+	{0x40068,0x0},
+	{0x40009,0x720},
+	{0x40029,0xf},
+	{0x40049,0x1400},
+	{0x40069,0x0},
+	{0x4000a,0xe08},
+	{0x4002a,0xc15},
+	{0x4004a,0x0},
+	{0x4006a,0x0},
+	{0x4000b,0x623},
+	{0x4002b,0x15},
+	{0x4004b,0x0},
+	{0x4006b,0x0},
+	{0x4000c,0x4028},
+	{0x4002c,0x80},
+	{0x4004c,0x0},
+	{0x4006c,0x0},
+	{0x4000d,0xe08},
+	{0x4002d,0xc1a},
+	{0x4004d,0x0},
+	{0x4006d,0x0},
+	{0x4000e,0x623},
+	{0x4002e,0x1a},
+	{0x4004e,0x0},
+	{0x4006e,0x0},
+	{0x4000f,0x4040},
+	{0x4002f,0x80},
+	{0x4004f,0x0},
+	{0x4006f,0x0},
+	{0x40010,0x2604},
+	{0x40030,0x15},
+	{0x40050,0x0},
+	{0x40070,0x0},
+	{0x40011,0x708},
+	{0x40031,0x5},
+	{0x40051,0x0},
+	{0x40071,0x2002},
+	{0x40012,0x8},
+	{0x40032,0x80},
+	{0x40052,0x0},
+	{0x40072,0x0},
+	{0x40013,0x2604},
+	{0x40033,0x1a},
+	{0x40053,0x0},
+	{0x40073,0x0},
+	{0x40014,0x708},
+	{0x40034,0xa},
+	{0x40054,0x0},
+	{0x40074,0x2002},
+	{0x40015,0x4040},
+	{0x40035,0x80},
+	{0x40055,0x0},
+	{0x40075,0x0},
+	{0x40016,0x60a},
+	{0x40036,0x15},
+	{0x40056,0x1200},
+	{0x40076,0x0},
+	{0x40017,0x61a},
+	{0x40037,0x15},
+	{0x40057,0x1300},
+	{0x40077,0x0},
+	{0x40018,0x60a},
+	{0x40038,0x1a},
+	{0x40058,0x1200},
+	{0x40078,0x0},
+	{0x40019,0x642},
+	{0x40039,0x1a},
+	{0x40059,0x1300},
+	{0x40079,0x0},
+	{0x4001a,0x4808},
+	{0x4003a,0x880},
+	{0x4005a,0x0},
+	{0x4007a,0x0},
+	{0x900a7,0x0},
+	{0x900a8,0x790},
+	{0x900a9,0x11a},
+	{0x900aa,0x8},
+	{0x900ab,0x7aa},
+	{0x900ac,0x2a},
+	{0x900ad,0x10},
+	{0x900ae,0x7b2},
+	{0x900af,0x2a},
+	{0x900b0,0x0},
+	{0x900b1,0x7c8},
+	{0x900b2,0x109},
+	{0x900b3,0x10},
+	{0x900b4,0x2a8},
+	{0x900b5,0x129},
+	{0x900b6,0x8},
+	{0x900b7,0x370},
+	{0x900b8,0x129},
+	{0x900b9,0xa},
+	{0x900ba,0x3c8},
+	{0x900bb,0x1a9},
+	{0x900bc,0xc},
+	{0x900bd,0x408},
+	{0x900be,0x199},
+	{0x900bf,0x14},
+	{0x900c0,0x790},
+	{0x900c1,0x11a},
+	{0x900c2,0x8},
+	{0x900c3,0x4},
+	{0x900c4,0x18},
+	{0x900c5,0xe},
+	{0x900c6,0x408},
+	{0x900c7,0x199},
+	{0x900c8,0x8},
+	{0x900c9,0x8568},
+	{0x900ca,0x108},
+	{0x900cb,0x18},
+	{0x900cc,0x790},
+	{0x900cd,0x16a},
+	{0x900ce,0x8},
+	{0x900cf,0x1d8},
+	{0x900d0,0x169},
+	{0x900d1,0x10},
+	{0x900d2,0x8558},
+	{0x900d3,0x168},
+	{0x900d4,0x70},
+	{0x900d5,0x788},
+	{0x900d6,0x16a},
+	{0x900d7,0x1ff8},
+	{0x900d8,0x85a8},
+	{0x900d9,0x1e8},
+	{0x900da,0x50},
+	{0x900db,0x798},
+	{0x900dc,0x16a},
+	{0x900dd,0x60},
+	{0x900de,0x7a0},
+	{0x900df,0x16a},
+	{0x900e0,0x8},
+	{0x900e1,0x8310},
+	{0x900e2,0x168},
+	{0x900e3,0x8},
+	{0x900e4,0xa310},
+	{0x900e5,0x168},
+	{0x900e6,0xa},
+	{0x900e7,0x408},
+	{0x900e8,0x169},
+	{0x900e9,0x6e},
+	{0x900ea,0x0},
+	{0x900eb,0x68},
+	{0x900ec,0x0},
+	{0x900ed,0x408},
+	{0x900ee,0x169},
+	{0x900ef,0x0},
+	{0x900f0,0x8310},
+	{0x900f1,0x168},
+	{0x900f2,0x0},
+	{0x900f3,0xa310},
+	{0x900f4,0x168},
+	{0x900f5,0x1ff8},
+	{0x900f6,0x85a8},
+	{0x900f7,0x1e8},
+	{0x900f8,0x68},
+	{0x900f9,0x798},
+	{0x900fa,0x16a},
+	{0x900fb,0x78},
+	{0x900fc,0x7a0},
+	{0x900fd,0x16a},
+	{0x900fe,0x68},
+	{0x900ff,0x790},
+	{0x90100,0x16a},
+	{0x90101,0x8},
+	{0x90102,0x8b10},
+	{0x90103,0x168},
+	{0x90104,0x8},
+	{0x90105,0xab10},
+	{0x90106,0x168},
+	{0x90107,0xa},
+	{0x90108,0x408},
+	{0x90109,0x169},
+	{0x9010a,0x58},
+	{0x9010b,0x0},
+	{0x9010c,0x68},
+	{0x9010d,0x0},
+	{0x9010e,0x408},
+	{0x9010f,0x169},
+	{0x90110,0x0},
+	{0x90111,0x8b10},
+	{0x90112,0x168},
+	{0x90113,0x0},
+	{0x90114,0xab10},
+	{0x90115,0x168},
+	{0x90116,0x0},
+	{0x90117,0x1d8},
+	{0x90118,0x169},
+	{0x90119,0x80},
+	{0x9011a,0x790},
+	{0x9011b,0x16a},
+	{0x9011c,0x18},
+	{0x9011d,0x7aa},
+	{0x9011e,0x6a},
+	{0x9011f,0xa},
+	{0x90120,0x0},
+	{0x90121,0x1e9},
+	{0x90122,0x8},
+	{0x90123,0x8080},
+	{0x90124,0x108},
+	{0x90125,0xf},
+	{0x90126,0x408},
+	{0x90127,0x169},
+	{0x90128,0xc},
+	{0x90129,0x0},
+	{0x9012a,0x68},
+	{0x9012b,0x9},
+	{0x9012c,0x0},
+	{0x9012d,0x1a9},
+	{0x9012e,0x0},
+	{0x9012f,0x408},
+	{0x90130,0x169},
+	{0x90131,0x0},
+	{0x90132,0x8080},
+	{0x90133,0x108},
+	{0x90134,0x8},
+	{0x90135,0x7aa},
+	{0x90136,0x6a},
+	{0x90137,0x0},
+	{0x90138,0x8568},
+	{0x90139,0x108},
+	{0x9013a,0xb7},
+	{0x9013b,0x790},
+	{0x9013c,0x16a},
+	{0x9013d,0x1f},
+	{0x9013e,0x0},
+	{0x9013f,0x68},
+	{0x90140,0x8},
+	{0x90141,0x8558},
+	{0x90142,0x168},
+	{0x90143,0xf},
+	{0x90144,0x408},
+	{0x90145,0x169},
+	{0x90146,0xc},
+	{0x90147,0x0},
+	{0x90148,0x68},
+	{0x90149,0x0},
+	{0x9014a,0x408},
+	{0x9014b,0x169},
+	{0x9014c,0x0},
+	{0x9014d,0x8558},
+	{0x9014e,0x168},
+	{0x9014f,0x8},
+	{0x90150,0x3c8},
+	{0x90151,0x1a9},
+	{0x90152,0x3},
+	{0x90153,0x370},
+	{0x90154,0x129},
+	{0x90155,0x20},
+	{0x90156,0x2aa},
+	{0x90157,0x9},
+	{0x90158,0x0},
+	{0x90159,0x400},
+	{0x9015a,0x10e},
+	{0x9015b,0x8},
+	{0x9015c,0xe8},
+	{0x9015d,0x109},
+	{0x9015e,0x0},
+	{0x9015f,0x8140},
+	{0x90160,0x10c},
+	{0x90161,0x10},
+	{0x90162,0x8138},
+	{0x90163,0x10c},
+	{0x90164,0x8},
+	{0x90165,0x7c8},
+	{0x90166,0x101},
+	{0x90167,0x8},
+	{0x90168,0x0},
+	{0x90169,0x8},
+	{0x9016a,0x8},
+	{0x9016b,0x448},
+	{0x9016c,0x109},
+	{0x9016d,0xf},
+	{0x9016e,0x7c0},
+	{0x9016f,0x109},
+	{0x90170,0x0},
+	{0x90171,0xe8},
+	{0x90172,0x109},
+	{0x90173,0x47},
+	{0x90174,0x630},
+	{0x90175,0x109},
+	{0x90176,0x8},
+	{0x90177,0x618},
+	{0x90178,0x109},
+	{0x90179,0x8},
+	{0x9017a,0xe0},
+	{0x9017b,0x109},
+	{0x9017c,0x0},
+	{0x9017d,0x7c8},
+	{0x9017e,0x109},
+	{0x9017f,0x8},
+	{0x90180,0x8140},
+	{0x90181,0x10c},
+	{0x90182,0x0},
+	{0x90183,0x1},
+	{0x90184,0x8},
+	{0x90185,0x8},
+	{0x90186,0x4},
+	{0x90187,0x8},
+	{0x90188,0x8},
+	{0x90189,0x7c8},
+	{0x9018a,0x101},
+	{0x90006,0x0},
+	{0x90007,0x0},
+	{0x90008,0x8},
+	{0x90009,0x0},
+	{0x9000a,0x0},
+	{0x9000b,0x0},
+	{0xd00e7,0x400},
+	{0x90017,0x0},
+	{0x9001f,0x2a},
+	{0x90026,0x6a},
+	{0x400d0,0x0},
+	{0x400d1,0x101},
+	{0x400d2,0x105},
+	{0x400d3,0x107},
+	{0x400d4,0x10f},
+	{0x400d5,0x202},
+	{0x400d6,0x20a},
+	{0x400d7,0x20b},
+	{0x2003a,0x2},
+	{0x2000b,0x64},
+	{0x2000c,0xc8},
+	{0x2000d,0x7d0},
+	{0x2000e,0x2c},
+	{0x12000b,0x14},
+	{0x12000c,0x29},
+	{0x12000d,0x1a1},
+	{0x12000e,0x10},
+	{0x9000c,0x0},
+	{0x9000d,0x173},
+	{0x9000e,0x60},
+	{0x9000f,0x6110},
+	{0x90010,0x2152},
+	{0x90011,0xdfbd},
+	{0x90012,0x60},
+	{0x90013,0x6152},
+	{0x20010,0x5a},
+	{0x20011,0x3},
+	{0x120010,0x5a},
+	{0x120011,0x3},
+	{0x40080,0xe0},
+	{0x40081,0x12},
+	{0x40082,0xe0},
+	{0x40083,0x12},
+	{0x40084,0xe0},
+	{0x40085,0x12},
+	{0x140080,0xe0},
+	{0x140081,0x12},
+	{0x140082,0xe0},
+	{0x140083,0x12},
+	{0x140084,0xe0},
+	{0x140085,0x12},
+	{0x400fd,0xf},
+	{0x10011,0x1},
+	{0x10012,0x1},
+	{0x10013,0x180},
+	{0x10018,0x1},
+	{0x10002,0x6209},
+	{0x100b2,0x1},
+	{0x101b4,0x1},
+	{0x102b4,0x1},
+	{0x103b4,0x1},
+	{0x104b4,0x1},
+	{0x105b4,0x1},
+	{0x106b4,0x1},
+	{0x107b4,0x1},
+	{0x108b4,0x1},
+	{0x11011,0x1},
+	{0x11012,0x1},
+	{0x11013,0x180},
+	{0x11018,0x1},
+	{0x11002,0x6209},
+	{0x110b2,0x1},
+	{0x111b4,0x1},
+	{0x112b4,0x1},
+	{0x113b4,0x1},
+	{0x114b4,0x1},
+	{0x115b4,0x1},
+	{0x116b4,0x1},
+	{0x117b4,0x1},
+	{0x118b4,0x1},
+	{0x12011,0x1},
+	{0x12012,0x1},
+	{0x12013,0x180},
+	{0x12018,0x1},
+	{0x12002,0x6209},
+	{0x120b2,0x1},
+	{0x121b4,0x1},
+	{0x122b4,0x1},
+	{0x123b4,0x1},
+	{0x124b4,0x1},
+	{0x125b4,0x1},
+	{0x126b4,0x1},
+	{0x127b4,0x1},
+	{0x128b4,0x1},
+	{0x13011,0x1},
+	{0x13012,0x1},
+	{0x13013,0x180},
+	{0x13018,0x1},
+	{0x13002,0x6209},
+	{0x130b2,0x1},
+	{0x131b4,0x1},
+	{0x132b4,0x1},
+	{0x133b4,0x1},
+	{0x134b4,0x1},
+	{0x135b4,0x1},
+	{0x136b4,0x1},
+	{0x137b4,0x1},
+	{0x138b4,0x1},
+	{0x2003a,0x2},
+	{0xc0080,0x2},
+	{0xd0000, 0x1}
+};
+
+struct dram_fsp_msg ddr_dram_fsp_msg[] = {
+	{
+		/* P0 3200mts 1D */
+		.drate = 3200,
+		.fw_type = FW_1D_IMAGE,
+		.fsp_cfg = ddr_fsp0_cfg,
+		.fsp_cfg_num = ARRAY_SIZE(ddr_fsp0_cfg),
+	},
+	{
+		/* P1 667mts 1D */
+		.drate = 667,
+		.fw_type = FW_1D_IMAGE,
+		.fsp_cfg = ddr_fsp1_cfg,
+		.fsp_cfg_num = ARRAY_SIZE(ddr_fsp1_cfg),
+	},
+	{
+		/* P0 3200mts 2D */
+		.drate = 3200,
+		.fw_type = FW_2D_IMAGE,
+		.fsp_cfg = ddr_fsp0_2d_cfg,
+		.fsp_cfg_num = ARRAY_SIZE(ddr_fsp0_2d_cfg),
+	},
+};
+
+/* ddr timing config params */
+struct dram_timing_info dram_timing = {
+	.ddrc_cfg = ddr_ddrc_cfg,
+	.ddrc_cfg_num = ARRAY_SIZE(ddr_ddrc_cfg),
+	.ddrphy_cfg = ddr_ddrphy_cfg,
+	.ddrphy_cfg_num = ARRAY_SIZE(ddr_ddrphy_cfg),
+	.fsp_msg = ddr_dram_fsp_msg,
+	.fsp_msg_num = ARRAY_SIZE(ddr_dram_fsp_msg),
+	.ddrphy_trained_csr = ddr_ddrphy_trained_csr,
+	.ddrphy_trained_csr_num = ARRAY_SIZE(ddr_ddrphy_trained_csr),
+	.ddrphy_pie = ddr_phy_pie,
+	.ddrphy_pie_num = ARRAY_SIZE(ddr_phy_pie),
+	.fsp_table = { 3200, 667, },
+};
+
diff --git a/board/tqc/tqma8mx/lpddr4_timing_2gs.c b/board/tqc/tqma8mx/lpddr4_timing_2gs.c
new file mode 100644
index 0000000000..e5bd553025
--- /dev/null
+++ b/board/tqc/tqma8mx/lpddr4_timing_2gs.c
@@ -0,0 +1,1734 @@
+/*
+ * Copyright 2018 NXP
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ *
+ * Generated code from MX8M_DDR_tool
+ * Align with uboot-imx_v2018.03_4.14.78_1.0.0_ga
+ */
+
+#include <linux/kernel.h>
+#include <asm/arch/imx8m_ddr.h>
+
+struct dram_cfg_param ddr_ddrc_cfg[] = {
+	/** Initialize DDRC registers **/
+	{0x3d400304,0x1},
+	{0x3d400030,0x1},
+	{0x3d400000,0xa1080020},
+	{0x3d400028,0x0},
+	{0x3d400020,0x203},
+	{0x3d400024,0x3e800},
+	{0x3d400064,0x6100e0},
+	{0x3d4000d0,0xc003061c},
+	{0x3d4000d4,0x9e0000},
+	{0x3d4000dc,0xd4002d},
+	{0x3d4000e0,0x310008},
+	{0x3d4000e8,0x66004a},
+	{0x3d4000ec,0x16004a},
+	{0x3d400100,0x1a201b22},
+	{0x3d400104,0x60633},
+	{0x3d40010c,0xc0c000},
+	{0x3d400110,0xf04080f},
+	{0x3d400114,0x2040c0c},
+	{0x3d400118,0x1010007},
+	{0x3d40011c,0x401},
+	{0x3d400130,0x20600},
+	{0x3d400134,0xc100002},
+	{0x3d400138,0xe6},
+	{0x3d400144,0xa00050},
+	{0x3d400180,0xc3200018},
+	{0x3d400184,0x28061a8},
+	{0x3d400188,0x0},
+	{0x3d400190,0x497820a},
+	{0x3d400194,0x80303},
+	{0x3d4001a0,0xe0400018},
+	{0x3d4001a4,0xdf00e4},
+	{0x3d4001a8,0x80000000},
+	{0x3d4001b0,0x11},
+	{0x3d4001b4,0x170a},
+	{0x3d4001c0,0x1},
+	{0x3d4001c4,0x1},
+	{0x3d4000f4,0x639},
+	{0x3d400108,0x70e1617},
+	{0x3d400200,0x1f},
+	{0x3d40020c,0x0},
+	{0x3d400210,0x1f1f},
+	{0x3d400204,0x80808},
+	{0x3d400214,0x7070707},
+	{0x3d400218,0x7070707},
+	{0x3d402020,0x1},
+	{0x3d402024,0xd0c0},
+	{0x3d402050,0x20d040},
+	{0x3d402064,0x14002f},
+	{0x3d4020dc,0x940009},
+	{0x3d4020e0,0x310000},
+	{0x3d4020e8,0x66004a},
+	{0x3d4020ec,0x16004a},
+	{0x3d402100,0xb070508},
+	{0x3d402104,0x3040b},
+	{0x3d402108,0x305090c},
+	{0x3d40210c,0x505000},
+	{0x3d402110,0x4040204},
+	{0x3d402114,0x2030303},
+	{0x3d402118,0x1010004},
+	{0x3d40211c,0x301},
+	{0x3d402130,0x20300},
+	{0x3d402134,0xa100002},
+	{0x3d402138,0x31},
+	{0x3d402144,0x220011},
+	{0x3d402180,0xc0a70006},
+	{0x3d402190,0x3858202},
+	{0x3d402194,0x80303},
+	{0x3d4021b4,0x502},
+	{0x3d400244,0x0},
+	{0x3d400250,0x29001505},
+	{0x3d400254,0x2c},
+	{0x3d40025c,0x5900575b},
+	{0x3d400264,0x90000096},
+	{0x3d40026c,0x1000012c},
+	{0x3d400300,0x16},
+	{0x3d400304,0x0},
+	{0x3d40030c,0x0},
+	{0x3d400320,0x1},
+	{0x3d40036c,0x11},
+	{0x3d400400,0x111},
+	{0x3d400404,0x10f3},
+	{0x3d400408,0x72ff},
+	{0x3d400490,0x1},
+	{0x3d400494,0xe00},
+	{0x3d400498,0x62ffff},
+	{0x3d40049c,0xe00},
+	{0x3d4004a0,0xffff},
+};
+
+/* PHY Initialize Configuration */
+struct dram_cfg_param ddr_ddrphy_cfg[] = {
+	{0x100a0,0x1},
+	{0x100a1,0x0},
+	{0x100a2,0x2},
+	{0x100a3,0x4},
+	{0x100a4,0x3},
+	{0x100a5,0x6},
+	{0x100a6,0x5},
+	{0x100a7,0x7},
+	{0x110a0,0x2},
+	{0x110a1,0x0},
+	{0x110a2,0x6},
+	{0x110a3,0x7},
+	{0x110a4,0x4},
+	{0x110a5,0x5},
+	{0x110a6,0x3},
+	{0x110a7,0x1},
+	{0x120a0,0x1},
+	{0x120a1,0x0},
+	{0x120a2,0x4},
+	{0x120a3,0x2},
+	{0x120a4,0x3},
+	{0x120a5,0x6},
+	{0x120a6,0x5},
+	{0x120a7,0x7},
+	{0x130a0,0x2},
+	{0x130a1,0x1},
+	{0x130a2,0x5},
+	{0x130a3,0x7},
+	{0x130a4,0x4},
+	{0x130a5,0x6},
+	{0x130a6,0x3},
+	{0x130a7,0x0},
+	{0x20110,0x2},
+	{0x20111,0x3},
+	{0x20112,0x4},
+	{0x20113,0x5},
+	{0x20114,0x0},
+	{0x20115,0x1},
+	{0x1005f,0x1ff},
+	{0x1015f,0x1ff},
+	{0x1105f,0x1ff},
+	{0x1115f,0x1ff},
+	{0x1205f,0x1ff},
+	{0x1215f,0x1ff},
+	{0x1305f,0x1ff},
+	{0x1315f,0x1ff},
+	{0x11005f,0x1ff},
+	{0x11015f,0x1ff},
+	{0x11105f,0x1ff},
+	{0x11115f,0x1ff},
+	{0x11205f,0x1ff},
+	{0x11215f,0x1ff},
+	{0x11305f,0x1ff},
+	{0x11315f,0x1ff},
+	{0x55,0x1ff},
+	{0x1055,0x1ff},
+	{0x2055,0x1ff},
+	{0x3055,0x1ff},
+	{0x4055,0x1ff},
+	{0x5055,0x1ff},
+	{0x6055,0x1ff},
+	{0x7055,0x1ff},
+	{0x8055,0x1ff},
+	{0x9055,0x1ff},
+	{0x200c5,0x19},
+	{0x1200c5,0x7},
+	{0x2002e,0x2},
+	{0x12002e,0x1},
+	{0x90204,0x0},
+	{0x190204,0x0},
+	{0x20024,0x1ab},
+	{0x2003a,0x0},
+	{0x120024,0x1ab},
+	{0x2003a,0x0},
+	{0x20056,0x3},
+	{0x120056,0xa},
+	{0x1004d,0xe00},
+	{0x1014d,0xe00},
+	{0x1104d,0xe00},
+	{0x1114d,0xe00},
+	{0x1204d,0xe00},
+	{0x1214d,0xe00},
+	{0x1304d,0xe00},
+	{0x1314d,0xe00},
+	{0x11004d,0xe00},
+	{0x11014d,0xe00},
+	{0x11104d,0xe00},
+	{0x11114d,0xe00},
+	{0x11204d,0xe00},
+	{0x11214d,0xe00},
+	{0x11304d,0xe00},
+	{0x11314d,0xe00},
+	{0x10049,0xeba},
+	{0x10149,0xeba},
+	{0x11049,0xeba},
+	{0x11149,0xeba},
+	{0x12049,0xeba},
+	{0x12149,0xeba},
+	{0x13049,0xeba},
+	{0x13149,0xeba},
+	{0x110049,0xeba},
+	{0x110149,0xeba},
+	{0x111049,0xeba},
+	{0x111149,0xeba},
+	{0x112049,0xeba},
+	{0x112149,0xeba},
+	{0x113049,0xeba},
+	{0x113149,0xeba},
+	{0x43,0x63},
+	{0x1043,0x63},
+	{0x2043,0x63},
+	{0x3043,0x63},
+	{0x4043,0x63},
+	{0x5043,0x63},
+	{0x6043,0x63},
+	{0x7043,0x63},
+	{0x8043,0x63},
+	{0x9043,0x63},
+	{0x20018,0x3},
+	{0x20075,0x4},
+	{0x20050,0x0},
+	{0x20008,0x320},
+	{0x120008,0xa7},
+	{0x20088,0x9},
+	{0x200b2,0xdc},
+	{0x10043,0x5a1},
+	{0x10143,0x5a1},
+	{0x11043,0x5a1},
+	{0x11143,0x5a1},
+	{0x12043,0x5a1},
+	{0x12143,0x5a1},
+	{0x13043,0x5a1},
+	{0x13143,0x5a1},
+	{0x1200b2,0xdc},
+	{0x110043,0x5a1},
+	{0x110143,0x5a1},
+	{0x111043,0x5a1},
+	{0x111143,0x5a1},
+	{0x112043,0x5a1},
+	{0x112143,0x5a1},
+	{0x113043,0x5a1},
+	{0x113143,0x5a1},
+	{0x200fa,0x1},
+	{0x1200fa,0x1},
+	{0x20019,0x1},
+	{0x120019,0x1},
+	{0x200f0,0x0},
+	{0x200f1,0x0},
+	{0x200f2,0x4444},
+	{0x200f3,0x8888},
+	{0x200f4,0x5555},
+	{0x200f5,0x0},
+	{0x200f6,0x0},
+	{0x200f7,0xf000},
+	{0x20025,0x0},
+	{0x2002d,0x0},
+	{0x12002d,0x0},
+	{0x200c7,0x80},
+	{0x1200c7,0x80},
+	{0x200ca,0x106},
+	{0x1200ca,0x106},
+};
+
+/* ddr phy trained csr */
+struct dram_cfg_param ddr_ddrphy_trained_csr[] = {
+	{ 0x200b2, 0x0 },  
+	{ 0x1200b2, 0x0 },
+	{ 0x2200b2, 0x0 },
+	{ 0x200cb, 0x0 },  
+	{ 0x10043, 0x0 },  
+	{ 0x110043, 0x0 },
+	{ 0x210043, 0x0 },
+	{ 0x10143, 0x0 },  
+	{ 0x110143, 0x0 },
+	{ 0x210143, 0x0 },
+	{ 0x11043, 0x0 },  
+	{ 0x111043, 0x0 },
+	{ 0x211043, 0x0 },
+	{ 0x11143, 0x0 },  
+	{ 0x111143, 0x0 },
+	{ 0x211143, 0x0 },
+	{ 0x12043, 0x0 },  
+	{ 0x112043, 0x0 },
+	{ 0x212043, 0x0 },
+	{ 0x12143, 0x0 },  
+	{ 0x112143, 0x0 },
+	{ 0x212143, 0x0 },
+	{ 0x13043, 0x0 },  
+	{ 0x113043, 0x0 },
+	{ 0x213043, 0x0 },
+	{ 0x13143, 0x0 },  
+	{ 0x113143, 0x0 },
+	{ 0x213143, 0x0 },
+	{ 0x80, 0x0 },       
+	{ 0x100080, 0x0 },
+	{ 0x200080, 0x0 },
+	{ 0x1080, 0x0 },    
+	{ 0x101080, 0x0 },
+	{ 0x201080, 0x0 },
+	{ 0x2080, 0x0 },    
+	{ 0x102080, 0x0 },
+	{ 0x202080, 0x0 },
+	{ 0x3080, 0x0 },    
+	{ 0x103080, 0x0 },
+	{ 0x203080, 0x0 },
+	{ 0x4080, 0x0 },    
+	{ 0x104080, 0x0 },
+	{ 0x204080, 0x0 },
+	{ 0x5080, 0x0 },    
+	{ 0x105080, 0x0 },
+	{ 0x205080, 0x0 },
+	{ 0x6080, 0x0 },    
+	{ 0x106080, 0x0 },
+	{ 0x206080, 0x0 },
+	{ 0x7080, 0x0 },    
+	{ 0x107080, 0x0 },
+	{ 0x207080, 0x0 },
+	{ 0x8080, 0x0 },    
+	{ 0x108080, 0x0 },
+	{ 0x208080, 0x0 },
+	{ 0x9080, 0x0 },    
+	{ 0x109080, 0x0 },
+	{ 0x209080, 0x0 },
+	{ 0x10080, 0x0 },  
+	{ 0x110080, 0x0 },
+	{ 0x210080, 0x0 },
+	{ 0x10180, 0x0 },  
+	{ 0x110180, 0x0 },
+	{ 0x210180, 0x0 },
+	{ 0x11080, 0x0 },  
+	{ 0x111080, 0x0 },
+	{ 0x211080, 0x0 },
+	{ 0x11180, 0x0 },  
+	{ 0x111180, 0x0 },
+	{ 0x211180, 0x0 },
+	{ 0x12080, 0x0 },  
+	{ 0x112080, 0x0 },
+	{ 0x212080, 0x0 },
+	{ 0x12180, 0x0 },  
+	{ 0x112180, 0x0 },
+	{ 0x212180, 0x0 },
+	{ 0x13080, 0x0 },  
+	{ 0x113080, 0x0 },
+	{ 0x213080, 0x0 },
+	{ 0x13180, 0x0 },  
+	{ 0x113180, 0x0 },
+	{ 0x213180, 0x0 },
+	{ 0x10081, 0x0 },  
+	{ 0x110081, 0x0 },
+	{ 0x210081, 0x0 },
+	{ 0x10181, 0x0 },  
+	{ 0x110181, 0x0 },
+	{ 0x210181, 0x0 },
+	{ 0x11081, 0x0 },  
+	{ 0x111081, 0x0 },
+	{ 0x211081, 0x0 },
+	{ 0x11181, 0x0 },  
+	{ 0x111181, 0x0 },
+	{ 0x211181, 0x0 },
+	{ 0x12081, 0x0 },  
+	{ 0x112081, 0x0 },
+	{ 0x212081, 0x0 },
+	{ 0x12181, 0x0 },  
+	{ 0x112181, 0x0 },
+	{ 0x212181, 0x0 },
+	{ 0x13081, 0x0 },  
+	{ 0x113081, 0x0 },
+	{ 0x213081, 0x0 },
+	{ 0x13181, 0x0 },  
+	{ 0x113181, 0x0 },
+	{ 0x213181, 0x0 },
+	{ 0x100d0, 0x0 },  
+	{ 0x1100d0, 0x0 },
+	{ 0x2100d0, 0x0 },
+	{ 0x101d0, 0x0 },  
+	{ 0x1101d0, 0x0 },
+	{ 0x2101d0, 0x0 },
+	{ 0x110d0, 0x0 },  
+	{ 0x1110d0, 0x0 },
+	{ 0x2110d0, 0x0 },
+	{ 0x111d0, 0x0 },  
+	{ 0x1111d0, 0x0 },
+	{ 0x2111d0, 0x0 },
+	{ 0x120d0, 0x0 },  
+	{ 0x1120d0, 0x0 },
+	{ 0x2120d0, 0x0 },
+	{ 0x121d0, 0x0 },  
+	{ 0x1121d0, 0x0 },
+	{ 0x2121d0, 0x0 },
+	{ 0x130d0, 0x0 },  
+	{ 0x1130d0, 0x0 },
+	{ 0x2130d0, 0x0 },
+	{ 0x131d0, 0x0 },  
+	{ 0x1131d0, 0x0 },
+	{ 0x2131d0, 0x0 },
+	{ 0x100d1, 0x0 },  
+	{ 0x1100d1, 0x0 },
+	{ 0x2100d1, 0x0 },
+	{ 0x101d1, 0x0 }, 
+	{ 0x1101d1, 0x0 },
+	{ 0x2101d1, 0x0 },
+	{ 0x110d1, 0x0 }, 
+	{ 0x1110d1, 0x0 },
+	{ 0x2110d1, 0x0 },
+	{ 0x111d1, 0x0 }, 
+	{ 0x1111d1, 0x0 },
+	{ 0x2111d1, 0x0 },
+	{ 0x120d1, 0x0 }, 
+	{ 0x1120d1, 0x0 },
+	{ 0x2120d1, 0x0 },
+	{ 0x121d1, 0x0 }, 
+	{ 0x1121d1, 0x0 },
+	{ 0x2121d1, 0x0 },
+	{ 0x130d1, 0x0 }, 
+	{ 0x1130d1, 0x0 },
+	{ 0x2130d1, 0x0 },
+	{ 0x131d1, 0x0 }, 
+	{ 0x1131d1, 0x0 },
+	{ 0x2131d1, 0x0 },
+	{ 0x10068, 0x0 },
+	{ 0x10168, 0x0 },
+	{ 0x10268, 0x0 },
+	{ 0x10368, 0x0 },
+	{ 0x10468, 0x0 },
+	{ 0x10568, 0x0 },
+	{ 0x10668, 0x0 },
+	{ 0x10768, 0x0 },
+	{ 0x10868, 0x0 },
+	{ 0x11068, 0x0 },
+	{ 0x11168, 0x0 },
+	{ 0x11268, 0x0 },
+	{ 0x11368, 0x0 },
+	{ 0x11468, 0x0 },
+	{ 0x11568, 0x0 },
+	{ 0x11668, 0x0 },
+	{ 0x11768, 0x0 },
+	{ 0x11868, 0x0 },
+	{ 0x12068, 0x0 },
+	{ 0x12168, 0x0 },
+	{ 0x12268, 0x0 },
+	{ 0x12368, 0x0 },
+	{ 0x12468, 0x0 },
+	{ 0x12568, 0x0 },
+	{ 0x12668, 0x0 },
+	{ 0x12768, 0x0 },
+	{ 0x12868, 0x0 },
+	{ 0x13068, 0x0 },
+	{ 0x13168, 0x0 },
+	{ 0x13268, 0x0 },
+	{ 0x13368, 0x0 },
+	{ 0x13468, 0x0 },
+	{ 0x13568, 0x0 },
+	{ 0x13668, 0x0 },
+	{ 0x13768, 0x0 },
+	{ 0x13868, 0x0 },
+	{ 0x10069, 0x0 },
+	{ 0x10169, 0x0 },
+	{ 0x10269, 0x0 },
+	{ 0x10369, 0x0 },
+	{ 0x10469, 0x0 },
+	{ 0x10569, 0x0 },
+	{ 0x10669, 0x0 },
+	{ 0x10769, 0x0 },
+	{ 0x10869, 0x0 },
+	{ 0x11069, 0x0 },
+	{ 0x11169, 0x0 },
+	{ 0x11269, 0x0 },
+	{ 0x11369, 0x0 },
+	{ 0x11469, 0x0 },
+	{ 0x11569, 0x0 },
+	{ 0x11669, 0x0 },
+	{ 0x11769, 0x0 },
+	{ 0x11869, 0x0 },
+	{ 0x12069, 0x0 },
+	{ 0x12169, 0x0 },
+	{ 0x12269, 0x0 },
+	{ 0x12369, 0x0 },
+	{ 0x12469, 0x0 },
+	{ 0x12569, 0x0 },
+	{ 0x12669, 0x0 },
+	{ 0x12769, 0x0 },
+	{ 0x12869, 0x0 },
+	{ 0x13069, 0x0 },
+	{ 0x13169, 0x0 },
+	{ 0x13269, 0x0 },
+	{ 0x13369, 0x0 },
+	{ 0x13469, 0x0 },
+	{ 0x13569, 0x0 },
+	{ 0x13669, 0x0 },
+	{ 0x13769, 0x0 },
+	{ 0x13869, 0x0 },
+	{ 0x1008c, 0x0 },
+	{ 0x11008c, 0x0 },
+	{ 0x21008c, 0x0 },
+	{ 0x1018c, 0x0 }, 
+	{ 0x11018c, 0x0 },
+	{ 0x21018c, 0x0 },
+	{ 0x1108c, 0x0 }, 
+	{ 0x11108c, 0x0 },
+	{ 0x21108c, 0x0 },
+	{ 0x1118c, 0x0 }, 
+	{ 0x11118c, 0x0 },
+	{ 0x21118c, 0x0 },
+	{ 0x1208c, 0x0 }, 
+	{ 0x11208c, 0x0 },
+	{ 0x21208c, 0x0 },
+	{ 0x1218c, 0x0 }, 
+	{ 0x11218c, 0x0 },
+	{ 0x21218c, 0x0 },
+	{ 0x1308c, 0x0 }, 
+	{ 0x11308c, 0x0 },
+	{ 0x21308c, 0x0 },
+	{ 0x1318c, 0x0 }, 
+	{ 0x11318c, 0x0 },
+	{ 0x21318c, 0x0 },
+	{ 0x1008d, 0x0 }, 
+	{ 0x11008d, 0x0 },
+	{ 0x21008d, 0x0 },
+	{ 0x1018d, 0x0 }, 
+	{ 0x11018d, 0x0 },
+	{ 0x21018d, 0x0 },
+	{ 0x1108d, 0x0 }, 
+	{ 0x11108d, 0x0 },
+	{ 0x21108d, 0x0 },
+	{ 0x1118d, 0x0 }, 
+	{ 0x11118d, 0x0 },
+	{ 0x21118d, 0x0 },
+	{ 0x1208d, 0x0 }, 
+	{ 0x11208d, 0x0 },
+	{ 0x21208d, 0x0 },
+	{ 0x1218d, 0x0 }, 
+	{ 0x11218d, 0x0 },
+	{ 0x21218d, 0x0 },
+	{ 0x1308d, 0x0 }, 
+	{ 0x11308d, 0x0 },
+	{ 0x21308d, 0x0 },
+	{ 0x1318d, 0x0 }, 
+	{ 0x11318d, 0x0 },
+	{ 0x21318d, 0x0 },
+	{ 0x100c0, 0x0 }, 
+	{ 0x1100c0, 0x0 },
+	{ 0x2100c0, 0x0 },
+	{ 0x101c0, 0x0 }, 
+	{ 0x1101c0, 0x0 },
+	{ 0x2101c0, 0x0 },
+	{ 0x102c0, 0x0 }, 
+	{ 0x1102c0, 0x0 },
+	{ 0x2102c0, 0x0 },
+	{ 0x103c0, 0x0 }, 
+	{ 0x1103c0, 0x0 },
+	{ 0x2103c0, 0x0 },
+	{ 0x104c0, 0x0 }, 
+	{ 0x1104c0, 0x0 },
+	{ 0x2104c0, 0x0 },
+	{ 0x105c0, 0x0 }, 
+	{ 0x1105c0, 0x0 },
+	{ 0x2105c0, 0x0 },
+	{ 0x106c0, 0x0 }, 
+	{ 0x1106c0, 0x0 },
+	{ 0x2106c0, 0x0 },
+	{ 0x107c0, 0x0 }, 
+	{ 0x1107c0, 0x0 },
+	{ 0x2107c0, 0x0 },
+	{ 0x108c0, 0x0 }, 
+	{ 0x1108c0, 0x0 },
+	{ 0x2108c0, 0x0 },
+	{ 0x110c0, 0x0 }, 
+	{ 0x1110c0, 0x0 },
+	{ 0x2110c0, 0x0 },
+	{ 0x111c0, 0x0 }, 
+	{ 0x1111c0, 0x0 },
+	{ 0x2111c0, 0x0 },
+	{ 0x112c0, 0x0 }, 
+	{ 0x1112c0, 0x0 },
+	{ 0x2112c0, 0x0 },
+	{ 0x113c0, 0x0 }, 
+	{ 0x1113c0, 0x0 },
+	{ 0x2113c0, 0x0 },
+	{ 0x114c0, 0x0 }, 
+	{ 0x1114c0, 0x0 },
+	{ 0x2114c0, 0x0 },
+	{ 0x115c0, 0x0 }, 
+	{ 0x1115c0, 0x0 },
+	{ 0x2115c0, 0x0 },
+	{ 0x116c0, 0x0 }, 
+	{ 0x1116c0, 0x0 },
+	{ 0x2116c0, 0x0 },
+	{ 0x117c0, 0x0 }, 
+	{ 0x1117c0, 0x0 },
+	{ 0x2117c0, 0x0 },
+	{ 0x118c0, 0x0 }, 
+	{ 0x1118c0, 0x0 },
+	{ 0x2118c0, 0x0 },
+	{ 0x120c0, 0x0 }, 
+	{ 0x1120c0, 0x0 },
+	{ 0x2120c0, 0x0 },
+	{ 0x121c0, 0x0 }, 
+	{ 0x1121c0, 0x0 },
+	{ 0x2121c0, 0x0 },
+	{ 0x122c0, 0x0 }, 
+	{ 0x1122c0, 0x0 },
+	{ 0x2122c0, 0x0 },
+	{ 0x123c0, 0x0 }, 
+	{ 0x1123c0, 0x0 },
+	{ 0x2123c0, 0x0 },
+	{ 0x124c0, 0x0 }, 
+	{ 0x1124c0, 0x0 },
+	{ 0x2124c0, 0x0 },
+	{ 0x125c0, 0x0 }, 
+	{ 0x1125c0, 0x0 },
+	{ 0x2125c0, 0x0 },
+	{ 0x126c0, 0x0 }, 
+	{ 0x1126c0, 0x0 },
+	{ 0x2126c0, 0x0 },
+	{ 0x127c0, 0x0 }, 
+	{ 0x1127c0, 0x0 },
+	{ 0x2127c0, 0x0 },
+	{ 0x128c0, 0x0 }, 
+	{ 0x1128c0, 0x0 },
+	{ 0x2128c0, 0x0 },
+	{ 0x130c0, 0x0 }, 
+	{ 0x1130c0, 0x0 },
+	{ 0x2130c0, 0x0 },
+	{ 0x131c0, 0x0 }, 
+	{ 0x1131c0, 0x0 },
+	{ 0x2131c0, 0x0 },
+	{ 0x132c0, 0x0 }, 
+	{ 0x1132c0, 0x0 },
+	{ 0x2132c0, 0x0 },
+	{ 0x133c0, 0x0 }, 
+	{ 0x1133c0, 0x0 },
+	{ 0x2133c0, 0x0 },
+	{ 0x134c0, 0x0 }, 
+	{ 0x1134c0, 0x0 },
+	{ 0x2134c0, 0x0 },
+	{ 0x135c0, 0x0 }, 
+	{ 0x1135c0, 0x0 },
+	{ 0x2135c0, 0x0 },
+	{ 0x136c0, 0x0 }, 
+	{ 0x1136c0, 0x0 },
+	{ 0x2136c0, 0x0 },
+	{ 0x137c0, 0x0 }, 
+	{ 0x1137c0, 0x0 },
+	{ 0x2137c0, 0x0 },
+	{ 0x138c0, 0x0 }, 
+	{ 0x1138c0, 0x0 },
+	{ 0x2138c0, 0x0 },
+	{ 0x100c1, 0x0 }, 
+	{ 0x1100c1, 0x0 },
+	{ 0x2100c1, 0x0 },
+	{ 0x101c1, 0x0 }, 
+	{ 0x1101c1, 0x0 },
+	{ 0x2101c1, 0x0 },
+	{ 0x102c1, 0x0 }, 
+	{ 0x1102c1, 0x0 },
+	{ 0x2102c1, 0x0 },
+	{ 0x103c1, 0x0 }, 
+	{ 0x1103c1, 0x0 },
+	{ 0x2103c1, 0x0 },
+	{ 0x104c1, 0x0 }, 
+	{ 0x1104c1, 0x0 },
+	{ 0x2104c1, 0x0 },
+	{ 0x105c1, 0x0 }, 
+	{ 0x1105c1, 0x0 },
+	{ 0x2105c1, 0x0 },
+	{ 0x106c1, 0x0 }, 
+	{ 0x1106c1, 0x0 },
+	{ 0x2106c1, 0x0 },
+	{ 0x107c1, 0x0 }, 
+	{ 0x1107c1, 0x0 },
+	{ 0x2107c1, 0x0 },
+	{ 0x108c1, 0x0 }, 
+	{ 0x1108c1, 0x0 },
+	{ 0x2108c1, 0x0 },
+	{ 0x110c1, 0x0 }, 
+	{ 0x1110c1, 0x0 },
+	{ 0x2110c1, 0x0 },
+	{ 0x111c1, 0x0 }, 
+	{ 0x1111c1, 0x0 },
+	{ 0x2111c1, 0x0 },
+	{ 0x112c1, 0x0 }, 
+	{ 0x1112c1, 0x0 },
+	{ 0x2112c1, 0x0 },
+	{ 0x113c1, 0x0 }, 
+	{ 0x1113c1, 0x0 },
+	{ 0x2113c1, 0x0 },
+	{ 0x114c1, 0x0 }, 
+	{ 0x1114c1, 0x0 },
+	{ 0x2114c1, 0x0 },
+	{ 0x115c1, 0x0 }, 
+	{ 0x1115c1, 0x0 },
+	{ 0x2115c1, 0x0 },
+	{ 0x116c1, 0x0 }, 
+	{ 0x1116c1, 0x0 },
+	{ 0x2116c1, 0x0 },
+	{ 0x117c1, 0x0 }, 
+	{ 0x1117c1, 0x0 },
+	{ 0x2117c1, 0x0 },
+	{ 0x118c1, 0x0 }, 
+	{ 0x1118c1, 0x0 },
+	{ 0x2118c1, 0x0 },
+	{ 0x120c1, 0x0 }, 
+	{ 0x1120c1, 0x0 },
+	{ 0x2120c1, 0x0 },
+	{ 0x121c1, 0x0 }, 
+	{ 0x1121c1, 0x0 },
+	{ 0x2121c1, 0x0 },
+	{ 0x122c1, 0x0 }, 
+	{ 0x1122c1, 0x0 },
+	{ 0x2122c1, 0x0 },
+	{ 0x123c1, 0x0 }, 
+	{ 0x1123c1, 0x0 },
+	{ 0x2123c1, 0x0 },
+	{ 0x124c1, 0x0 }, 
+	{ 0x1124c1, 0x0 },
+	{ 0x2124c1, 0x0 },
+	{ 0x125c1, 0x0 }, 
+	{ 0x1125c1, 0x0 },
+	{ 0x2125c1, 0x0 },
+	{ 0x126c1, 0x0 }, 
+	{ 0x1126c1, 0x0 },
+	{ 0x2126c1, 0x0 },
+	{ 0x127c1, 0x0 }, 
+	{ 0x1127c1, 0x0 },
+	{ 0x2127c1, 0x0 },
+	{ 0x128c1, 0x0 }, 
+	{ 0x1128c1, 0x0 },
+	{ 0x2128c1, 0x0 },
+	{ 0x130c1, 0x0 }, 
+	{ 0x1130c1, 0x0 },
+	{ 0x2130c1, 0x0 },
+	{ 0x131c1, 0x0 }, 
+	{ 0x1131c1, 0x0 },
+	{ 0x2131c1, 0x0 },
+	{ 0x132c1, 0x0 }, 
+	{ 0x1132c1, 0x0 },
+	{ 0x2132c1, 0x0 },
+	{ 0x133c1, 0x0 }, 
+	{ 0x1133c1, 0x0 },
+	{ 0x2133c1, 0x0 },
+	{ 0x134c1, 0x0 }, 
+	{ 0x1134c1, 0x0 },
+	{ 0x2134c1, 0x0 },
+	{ 0x135c1, 0x0 }, 
+	{ 0x1135c1, 0x0 },
+	{ 0x2135c1, 0x0 },
+	{ 0x136c1, 0x0 }, 
+	{ 0x1136c1, 0x0 },
+	{ 0x2136c1, 0x0 },
+	{ 0x137c1, 0x0 }, 
+	{ 0x1137c1, 0x0 },
+	{ 0x2137c1, 0x0 },
+	{ 0x138c1, 0x0 }, 
+	{ 0x1138c1, 0x0 },
+	{ 0x2138c1, 0x0 },
+	{ 0x10020, 0x0 }, 
+	{ 0x110020, 0x0 },
+	{ 0x210020, 0x0 },
+	{ 0x11020, 0x0 }, 
+	{ 0x111020, 0x0 },
+	{ 0x211020, 0x0 },
+	{ 0x12020, 0x0 }, 
+	{ 0x112020, 0x0 },
+	{ 0x212020, 0x0 },
+	{ 0x13020, 0x0 }, 
+	{ 0x113020, 0x0 },
+	{ 0x213020, 0x0 },
+	{ 0x20072, 0x0 }, 
+	{ 0x20073, 0x0 }, 
+	{ 0x20074, 0x0 }, 
+	{ 0x100aa, 0x0 }, 
+	{ 0x110aa, 0x0 }, 
+	{ 0x120aa, 0x0 }, 
+	{ 0x130aa, 0x0 }, 
+	{ 0x20010, 0x0 }, 
+	{ 0x120010, 0x0 },
+	{ 0x220010, 0x0 },
+	{ 0x20011, 0x0 }, 
+	{ 0x120011, 0x0 },
+	{ 0x220011, 0x0 },
+	{ 0x100ae, 0x0 }, 
+	{ 0x1100ae, 0x0 },
+	{ 0x2100ae, 0x0 },
+	{ 0x100af, 0x0 }, 
+	{ 0x1100af, 0x0 },
+	{ 0x2100af, 0x0 },
+	{ 0x110ae, 0x0 }, 
+	{ 0x1110ae, 0x0 },
+	{ 0x2110ae, 0x0 },
+	{ 0x110af, 0x0 }, 
+	{ 0x1110af, 0x0 },
+	{ 0x2110af, 0x0 },
+	{ 0x120ae, 0x0 }, 
+	{ 0x1120ae, 0x0 },
+	{ 0x2120ae, 0x0 },
+	{ 0x120af, 0x0 }, 
+	{ 0x1120af, 0x0 },
+	{ 0x2120af, 0x0 },
+	{ 0x130ae, 0x0 }, 
+	{ 0x1130ae, 0x0 },
+	{ 0x2130ae, 0x0 },
+	{ 0x130af, 0x0 }, 
+	{ 0x1130af, 0x0 },
+	{ 0x2130af, 0x0 },
+	{ 0x20020, 0x0 }, 
+	{ 0x120020, 0x0 },
+	{ 0x220020, 0x0 },
+	{ 0x100a0, 0x0 }, 
+	{ 0x100a1, 0x0 },
+	{ 0x100a2, 0x0 },
+	{ 0x100a3, 0x0 },
+	{ 0x100a4, 0x0 },
+	{ 0x100a5, 0x0 },
+	{ 0x100a6, 0x0 },
+	{ 0x100a7, 0x0 },
+	{ 0x110a0, 0x0 },
+	{ 0x110a1, 0x0 },
+	{ 0x110a2, 0x0 },
+	{ 0x110a3, 0x0 },
+	{ 0x110a4, 0x0 },
+	{ 0x110a5, 0x0 },
+	{ 0x110a6, 0x0 },
+	{ 0x110a7, 0x0 },
+	{ 0x120a0, 0x0 },
+	{ 0x120a1, 0x0 },
+	{ 0x120a2, 0x0 },
+	{ 0x120a3, 0x0 },
+	{ 0x120a4, 0x0 },
+	{ 0x120a5, 0x0 },
+	{ 0x120a6, 0x0 },
+	{ 0x120a7, 0x0 },
+	{ 0x130a0, 0x0 },
+	{ 0x130a1, 0x0 },
+	{ 0x130a2, 0x0 },
+	{ 0x130a3, 0x0 },
+	{ 0x130a4, 0x0 }, 
+	{ 0x130a5, 0x0 }, 
+	{ 0x130a6, 0x0 }, 
+	{ 0x130a7, 0x0 }, 
+	{ 0x2007c, 0x0 }, 
+	{ 0x12007c, 0x0 },
+	{ 0x22007c, 0x0 },
+	{ 0x2007d, 0x0 }, 
+	{ 0x12007d, 0x0 },
+	{ 0x22007d, 0x0 },
+	{ 0x400fd, 0x0 }, 
+	{ 0x400c0, 0x0 }, 
+	{ 0x90201, 0x0 }, 
+	{ 0x190201, 0x0 },
+	{ 0x290201, 0x0 },
+	{ 0x90202, 0x0 }, 
+	{ 0x190202, 0x0 },
+	{ 0x290202, 0x0 },
+	{ 0x90203, 0x0 }, 
+	{ 0x190203, 0x0 },
+	{ 0x290203, 0x0 },
+	{ 0x90204, 0x0 }, 
+	{ 0x190204, 0x0 },
+	{ 0x290204, 0x0 },
+	{ 0x90205, 0x0 }, 
+	{ 0x190205, 0x0 },
+	{ 0x290205, 0x0 },
+	{ 0x90206, 0x0 }, 
+	{ 0x190206, 0x0 },
+	{ 0x290206, 0x0 },
+	{ 0x90207, 0x0 }, 
+	{ 0x190207, 0x0 },
+	{ 0x290207, 0x0 },
+	{ 0x90208, 0x0 }, 
+	{ 0x190208, 0x0 },
+	{ 0x290208, 0x0 },
+	{ 0x10062, 0x0 }, 
+	{ 0x10162, 0x0 }, 
+	{ 0x10262, 0x0 }, 
+	{ 0x10362, 0x0 }, 
+	{ 0x10462, 0x0 }, 
+	{ 0x10562, 0x0 }, 
+	{ 0x10662, 0x0 }, 
+	{ 0x10762, 0x0 }, 
+	{ 0x10862, 0x0 }, 
+	{ 0x11062, 0x0 }, 
+	{ 0x11162, 0x0 }, 
+	{ 0x11262, 0x0 }, 
+	{ 0x11362, 0x0 }, 
+	{ 0x11462, 0x0 }, 
+	{ 0x11562, 0x0 }, 
+	{ 0x11662, 0x0 },
+	{ 0x11762, 0x0 },
+	{ 0x11862, 0x0 },
+	{ 0x12062, 0x0 },
+	{ 0x12162, 0x0 },
+	{ 0x12262, 0x0 },
+	{ 0x12362, 0x0 },
+	{ 0x12462, 0x0 },
+	{ 0x12562, 0x0 },
+	{ 0x12662, 0x0 },
+	{ 0x12762, 0x0 },
+	{ 0x12862, 0x0 },
+	{ 0x13062, 0x0 },
+	{ 0x13162, 0x0 },
+	{ 0x13262, 0x0 },
+	{ 0x13362, 0x0 },
+	{ 0x13462, 0x0 },
+	{ 0x13562, 0x0 },
+	{ 0x13662, 0x0 },
+	{ 0x13762, 0x0 },
+	{ 0x13862, 0x0 },
+	{ 0x20077, 0x0 },
+	{ 0x10001, 0x0 },
+	{ 0x11001, 0x0 },
+	{ 0x12001, 0x0 },
+	{ 0x13001, 0x0 },
+	{ 0x10040, 0x0 },
+	{ 0x10140, 0x0 },
+	{ 0x10240, 0x0 },
+	{ 0x10340, 0x0 },
+	{ 0x10440, 0x0 },
+	{ 0x10540, 0x0 },
+	{ 0x10640, 0x0 },
+	{ 0x10740, 0x0 },
+	{ 0x10840, 0x0 },
+	{ 0x10030, 0x0 },
+	{ 0x10130, 0x0 },
+	{ 0x10230, 0x0 },
+	{ 0x10330, 0x0 },
+	{ 0x10430, 0x0 },
+	{ 0x10530, 0x0 },
+	{ 0x10630, 0x0 },
+	{ 0x10730, 0x0 },
+	{ 0x10830, 0x0 },
+	{ 0x11040, 0x0 },
+	{ 0x11140, 0x0 },
+	{ 0x11240, 0x0 },
+	{ 0x11340, 0x0 },
+	{ 0x11440, 0x0 },
+	{ 0x11540, 0x0 },
+	{ 0x11640, 0x0 },
+	{ 0x11740, 0x0 },
+	{ 0x11840, 0x0 },
+	{ 0x11030, 0x0 },
+	{ 0x11130, 0x0 },
+	{ 0x11230, 0x0 },
+	{ 0x11330, 0x0 },
+	{ 0x11430, 0x0 },
+	{ 0x11530, 0x0 },
+	{ 0x11630, 0x0 },
+	{ 0x11730, 0x0 },
+	{ 0x11830, 0x0 },
+	{ 0x12040, 0x0 },
+	{ 0x12140, 0x0 },
+	{ 0x12240, 0x0 },
+	{ 0x12340, 0x0 },
+	{ 0x12440, 0x0 },
+	{ 0x12540, 0x0 },
+	{ 0x12640, 0x0 },
+	{ 0x12740, 0x0 },
+	{ 0x12840, 0x0 },
+	{ 0x12030, 0x0 },
+	{ 0x12130, 0x0 },
+	{ 0x12230, 0x0 },
+	{ 0x12330, 0x0 },
+	{ 0x12430, 0x0 },
+	{ 0x12530, 0x0 },
+	{ 0x12630, 0x0 },
+	{ 0x12730, 0x0 },
+	{ 0x12830, 0x0 },
+	{ 0x13040, 0x0 },
+	{ 0x13140, 0x0 },
+	{ 0x13240, 0x0 },
+	{ 0x13340, 0x0 },
+	{ 0x13440, 0x0 },
+	{ 0x13540, 0x0 },
+	{ 0x13640, 0x0 },
+	{ 0x13740, 0x0 },
+	{ 0x13840, 0x0 },
+	{ 0x13030, 0x0 },
+	{ 0x13130, 0x0 },
+	{ 0x13230, 0x0 },
+	{ 0x13330, 0x0 },
+	{ 0x13430, 0x0 },
+	{ 0x13530, 0x0 },
+	{ 0x13630, 0x0 },
+	{ 0x13730, 0x0 },
+	{ 0x13830, 0x0 },
+};
+/* P0 message block paremeter for training firmware */
+struct dram_cfg_param ddr_fsp0_cfg[] = {
+	{0xd0000, 0x0},
+	{0x54003,0xc80},
+	{0x54004,0x2},
+	{0x54005,0x2228},
+	{0x54006,0x11},
+	{0x54008,0x131f},
+	{0x54009,0xc8},
+	{0x5400b,0x2},
+	{0x5400d,0x100},
+	{0x54012,0x110},
+	{0x54019,0x2dd4},
+	{0x5401a,0x31},
+	{0x5401b,0x4a66},
+	{0x5401c,0x4a08},
+	{0x5401e,0x16},
+	{0x5401f,0x2dd4},
+	{0x54020,0x31},
+	{0x54021,0x4a66},
+	{0x54022,0x4a08},
+	{0x54024,0x16},
+	{0x5402b,0x1000},
+	{0x5402c,0x1},
+	{0x54032,0xd400},
+	{0x54033,0x312d},
+	{0x54034,0x6600},
+	{0x54035,0x84a},
+	{0x54036,0x4a},
+	{0x54037,0x1600},
+	{0x54038,0xd400},
+	{0x54039,0x312d},
+	{0x5403a,0x6600},
+	{0x5403b,0x84a},
+	{0x5403c,0x4a},
+	{0x5403d,0x1600},
+	{0xd0000, 0x1},
+};
+
+
+/* P1 message block paremeter for training firmware */
+struct dram_cfg_param ddr_fsp1_cfg[] = {
+	{0xd0000, 0x0},
+	{0x54002,0x1},
+	{0x54003,0x29c},
+	{0x54004,0x2},
+	{0x54005,0x2228},
+	{0x54006,0x11},
+	{0x54008,0x121f},
+	{0x54009,0xc8},
+	{0x5400b,0x2},
+	{0x5400d,0x100},
+	{0x54012,0x110},
+	{0x54019,0x994},
+	{0x5401a,0x31},
+	{0x5401b,0x4a66},
+	{0x5401c,0x4a08},
+	{0x5401e,0x16},
+	{0x5401f,0x994},
+	{0x54020,0x31},
+	{0x54021,0x4a66},
+	{0x54022,0x4a08},
+	{0x54024,0x16},
+	{0x5402b,0x1000},
+	{0x5402c,0x1},
+	{0x54032,0x9400},
+	{0x54033,0x3109},
+	{0x54034,0x6600},
+	{0x54035,0x84a},
+	{0x54036,0x4a},
+	{0x54037,0x1600},
+	{0x54038,0x9400},
+	{0x54039,0x3109},
+	{0x5403a,0x6600},
+	{0x5403b,0x84a},
+	{0x5403c,0x4a},
+	{0x5403d,0x1600},
+	{0xd0000, 0x1},
+};
+
+
+/* P0 2D message block paremeter for training firmware */
+struct dram_cfg_param ddr_fsp0_2d_cfg[] = {
+	{0xd0000, 0x0},
+	{0x54003,0xc80},
+	{0x54004,0x2},
+	{0x54005,0x2228},
+	{0x54006,0x11},
+	{0x54008,0x61},
+	{0x54009,0xc8},
+	{0x5400b,0x2},
+	{0x5400f,0x100},
+	{0x54010,0x1f7f},
+	{0x54012,0x110},
+	{0x54019,0x2dd4},
+	{0x5401a,0x31},
+	{0x5401b,0x4a66},
+	{0x5401c,0x4a08},
+	{0x5401e,0x16},
+	{0x5401f,0x2dd4},
+	{0x54020,0x31},
+	{0x54021,0x4a66},
+	{0x54022,0x4a08},
+	{0x54024,0x16},
+	{0x5402b,0x1000},
+	{0x5402c,0x1},
+	{0x54032,0xd400},
+	{0x54033,0x312d},
+	{0x54034,0x6600},
+	{0x54035,0x84a},
+	{0x54036,0x4a},
+	{0x54037,0x1600},
+	{0x54038,0xd400},
+	{0x54039,0x312d},
+	{0x5403a,0x6600},
+	{0x5403b,0x84a},
+	{0x5403c,0x4a},
+	{0x5403d,0x1600},
+	{ 0xd0000, 0x1 },
+};
+
+/* DRAM PHY init engine image */
+struct dram_cfg_param ddr_phy_pie[] = {
+	{0xd0000, 0x0},
+	{0x90000,0x10},
+	{0x90001,0x400},
+	{0x90002,0x10e},
+	{0x90003,0x0},
+	{0x90004,0x0},
+	{0x90005,0x8},
+	{0x90029,0xb},
+	{0x9002a,0x480},
+	{0x9002b,0x109},
+	{0x9002c,0x8},
+	{0x9002d,0x448},
+	{0x9002e,0x139},
+	{0x9002f,0x8},
+	{0x90030,0x478},
+	{0x90031,0x109},
+	{0x90032,0x0},
+	{0x90033,0xe8},
+	{0x90034,0x109},
+	{0x90035,0x2},
+	{0x90036,0x10},
+	{0x90037,0x139},
+	{0x90038,0xf},
+	{0x90039,0x7c0},
+	{0x9003a,0x139},
+	{0x9003b,0x44},
+	{0x9003c,0x630},
+	{0x9003d,0x159},
+	{0x9003e,0x14f},
+	{0x9003f,0x630},
+	{0x90040,0x159},
+	{0x90041,0x47},
+	{0x90042,0x630},
+	{0x90043,0x149},
+	{0x90044,0x4f},
+	{0x90045,0x630},
+	{0x90046,0x179},
+	{0x90047,0x8},
+	{0x90048,0xe0},
+	{0x90049,0x109},
+	{0x9004a,0x0},
+	{0x9004b,0x7c8},
+	{0x9004c,0x109},
+	{0x9004d,0x0},
+	{0x9004e,0x1},
+	{0x9004f,0x8},
+	{0x90050,0x0},
+	{0x90051,0x45a},
+	{0x90052,0x9},
+	{0x90053,0x0},
+	{0x90054,0x448},
+	{0x90055,0x109},
+	{0x90056,0x40},
+	{0x90057,0x630},
+	{0x90058,0x179},
+	{0x90059,0x1},
+	{0x9005a,0x618},
+	{0x9005b,0x109},
+	{0x9005c,0x40c0},
+	{0x9005d,0x630},
+	{0x9005e,0x149},
+	{0x9005f,0x8},
+	{0x90060,0x4},
+	{0x90061,0x48},
+	{0x90062,0x4040},
+	{0x90063,0x630},
+	{0x90064,0x149},
+	{0x90065,0x0},
+	{0x90066,0x4},
+	{0x90067,0x48},
+	{0x90068,0x40},
+	{0x90069,0x630},
+	{0x9006a,0x149},
+	{0x9006b,0x10},
+	{0x9006c,0x4},
+	{0x9006d,0x18},
+	{0x9006e,0x0},
+	{0x9006f,0x4},
+	{0x90070,0x78},
+	{0x90071,0x549},
+	{0x90072,0x630},
+	{0x90073,0x159},
+	{0x90074,0xd49},
+	{0x90075,0x630},
+	{0x90076,0x159},
+	{0x90077,0x94a},
+	{0x90078,0x630},
+	{0x90079,0x159},
+	{0x9007a,0x441},
+	{0x9007b,0x630},
+	{0x9007c,0x149},
+	{0x9007d,0x42},
+	{0x9007e,0x630},
+	{0x9007f,0x149},
+	{0x90080,0x1},
+	{0x90081,0x630},
+	{0x90082,0x149},
+	{0x90083,0x0},
+	{0x90084,0xe0},
+	{0x90085,0x109},
+	{0x90086,0xa},
+	{0x90087,0x10},
+	{0x90088,0x109},
+	{0x90089,0x9},
+	{0x9008a,0x3c0},
+	{0x9008b,0x149},
+	{0x9008c,0x9},
+	{0x9008d,0x3c0},
+	{0x9008e,0x159},
+	{0x9008f,0x18},
+	{0x90090,0x10},
+	{0x90091,0x109},
+	{0x90092,0x0},
+	{0x90093,0x3c0},
+	{0x90094,0x109},
+	{0x90095,0x18},
+	{0x90096,0x4},
+	{0x90097,0x48},
+	{0x90098,0x18},
+	{0x90099,0x4},
+	{0x9009a,0x58},
+	{0x9009b,0xa},
+	{0x9009c,0x10},
+	{0x9009d,0x109},
+	{0x9009e,0x2},
+	{0x9009f,0x10},
+	{0x900a0,0x109},
+	{0x900a1,0x5},
+	{0x900a2,0x7c0},
+	{0x900a3,0x109},
+	{0x900a4,0x10},
+	{0x900a5,0x10},
+	{0x900a6,0x109},
+	{0x40000,0x811},
+	{0x40020,0x880},
+	{0x40040,0x0},
+	{0x40060,0x0},
+	{0x40001,0x4008},
+	{0x40021,0x83},
+	{0x40041,0x4f},
+	{0x40061,0x0},
+	{0x40002,0x4040},
+	{0x40022,0x83},
+	{0x40042,0x51},
+	{0x40062,0x0},
+	{0x40003,0x811},
+	{0x40023,0x880},
+	{0x40043,0x0},
+	{0x40063,0x0},
+	{0x40004,0x720},
+	{0x40024,0xf},
+	{0x40044,0x1740},
+	{0x40064,0x0},
+	{0x40005,0x16},
+	{0x40025,0x83},
+	{0x40045,0x4b},
+	{0x40065,0x0},
+	{0x40006,0x716},
+	{0x40026,0xf},
+	{0x40046,0x2001},
+	{0x40066,0x0},
+	{0x40007,0x716},
+	{0x40027,0xf},
+	{0x40047,0x2800},
+	{0x40067,0x0},
+	{0x40008,0x716},
+	{0x40028,0xf},
+	{0x40048,0xf00},
+	{0x40068,0x0},
+	{0x40009,0x720},
+	{0x40029,0xf},
+	{0x40049,0x1400},
+	{0x40069,0x0},
+	{0x4000a,0xe08},
+	{0x4002a,0xc15},
+	{0x4004a,0x0},
+	{0x4006a,0x0},
+	{0x4000b,0x623},
+	{0x4002b,0x15},
+	{0x4004b,0x0},
+	{0x4006b,0x0},
+	{0x4000c,0x4028},
+	{0x4002c,0x80},
+	{0x4004c,0x0},
+	{0x4006c,0x0},
+	{0x4000d,0xe08},
+	{0x4002d,0xc1a},
+	{0x4004d,0x0},
+	{0x4006d,0x0},
+	{0x4000e,0x623},
+	{0x4002e,0x1a},
+	{0x4004e,0x0},
+	{0x4006e,0x0},
+	{0x4000f,0x4040},
+	{0x4002f,0x80},
+	{0x4004f,0x0},
+	{0x4006f,0x0},
+	{0x40010,0x2604},
+	{0x40030,0x15},
+	{0x40050,0x0},
+	{0x40070,0x0},
+	{0x40011,0x708},
+	{0x40031,0x5},
+	{0x40051,0x0},
+	{0x40071,0x2002},
+	{0x40012,0x8},
+	{0x40032,0x80},
+	{0x40052,0x0},
+	{0x40072,0x0},
+	{0x40013,0x2604},
+	{0x40033,0x1a},
+	{0x40053,0x0},
+	{0x40073,0x0},
+	{0x40014,0x708},
+	{0x40034,0xa},
+	{0x40054,0x0},
+	{0x40074,0x2002},
+	{0x40015,0x4040},
+	{0x40035,0x80},
+	{0x40055,0x0},
+	{0x40075,0x0},
+	{0x40016,0x60a},
+	{0x40036,0x15},
+	{0x40056,0x1200},
+	{0x40076,0x0},
+	{0x40017,0x61a},
+	{0x40037,0x15},
+	{0x40057,0x1300},
+	{0x40077,0x0},
+	{0x40018,0x60a},
+	{0x40038,0x1a},
+	{0x40058,0x1200},
+	{0x40078,0x0},
+	{0x40019,0x642},
+	{0x40039,0x1a},
+	{0x40059,0x1300},
+	{0x40079,0x0},
+	{0x4001a,0x4808},
+	{0x4003a,0x880},
+	{0x4005a,0x0},
+	{0x4007a,0x0},
+	{0x900a7,0x0},
+	{0x900a8,0x790},
+	{0x900a9,0x11a},
+	{0x900aa,0x8},
+	{0x900ab,0x7aa},
+	{0x900ac,0x2a},
+	{0x900ad,0x10},
+	{0x900ae,0x7b2},
+	{0x900af,0x2a},
+	{0x900b0,0x0},
+	{0x900b1,0x7c8},
+	{0x900b2,0x109},
+	{0x900b3,0x10},
+	{0x900b4,0x2a8},
+	{0x900b5,0x129},
+	{0x900b6,0x8},
+	{0x900b7,0x370},
+	{0x900b8,0x129},
+	{0x900b9,0xa},
+	{0x900ba,0x3c8},
+	{0x900bb,0x1a9},
+	{0x900bc,0xc},
+	{0x900bd,0x408},
+	{0x900be,0x199},
+	{0x900bf,0x14},
+	{0x900c0,0x790},
+	{0x900c1,0x11a},
+	{0x900c2,0x8},
+	{0x900c3,0x4},
+	{0x900c4,0x18},
+	{0x900c5,0xe},
+	{0x900c6,0x408},
+	{0x900c7,0x199},
+	{0x900c8,0x8},
+	{0x900c9,0x8568},
+	{0x900ca,0x108},
+	{0x900cb,0x18},
+	{0x900cc,0x790},
+	{0x900cd,0x16a},
+	{0x900ce,0x8},
+	{0x900cf,0x1d8},
+	{0x900d0,0x169},
+	{0x900d1,0x10},
+	{0x900d2,0x8558},
+	{0x900d3,0x168},
+	{0x900d4,0x70},
+	{0x900d5,0x788},
+	{0x900d6,0x16a},
+	{0x900d7,0x1ff8},
+	{0x900d8,0x85a8},
+	{0x900d9,0x1e8},
+	{0x900da,0x50},
+	{0x900db,0x798},
+	{0x900dc,0x16a},
+	{0x900dd,0x60},
+	{0x900de,0x7a0},
+	{0x900df,0x16a},
+	{0x900e0,0x8},
+	{0x900e1,0x8310},
+	{0x900e2,0x168},
+	{0x900e3,0x8},
+	{0x900e4,0xa310},
+	{0x900e5,0x168},
+	{0x900e6,0xa},
+	{0x900e7,0x408},
+	{0x900e8,0x169},
+	{0x900e9,0x6e},
+	{0x900ea,0x0},
+	{0x900eb,0x68},
+	{0x900ec,0x0},
+	{0x900ed,0x408},
+	{0x900ee,0x169},
+	{0x900ef,0x0},
+	{0x900f0,0x8310},
+	{0x900f1,0x168},
+	{0x900f2,0x0},
+	{0x900f3,0xa310},
+	{0x900f4,0x168},
+	{0x900f5,0x1ff8},
+	{0x900f6,0x85a8},
+	{0x900f7,0x1e8},
+	{0x900f8,0x68},
+	{0x900f9,0x798},
+	{0x900fa,0x16a},
+	{0x900fb,0x78},
+	{0x900fc,0x7a0},
+	{0x900fd,0x16a},
+	{0x900fe,0x68},
+	{0x900ff,0x790},
+	{0x90100,0x16a},
+	{0x90101,0x8},
+	{0x90102,0x8b10},
+	{0x90103,0x168},
+	{0x90104,0x8},
+	{0x90105,0xab10},
+	{0x90106,0x168},
+	{0x90107,0xa},
+	{0x90108,0x408},
+	{0x90109,0x169},
+	{0x9010a,0x58},
+	{0x9010b,0x0},
+	{0x9010c,0x68},
+	{0x9010d,0x0},
+	{0x9010e,0x408},
+	{0x9010f,0x169},
+	{0x90110,0x0},
+	{0x90111,0x8b10},
+	{0x90112,0x168},
+	{0x90113,0x0},
+	{0x90114,0xab10},
+	{0x90115,0x168},
+	{0x90116,0x0},
+	{0x90117,0x1d8},
+	{0x90118,0x169},
+	{0x90119,0x80},
+	{0x9011a,0x790},
+	{0x9011b,0x16a},
+	{0x9011c,0x18},
+	{0x9011d,0x7aa},
+	{0x9011e,0x6a},
+	{0x9011f,0xa},
+	{0x90120,0x0},
+	{0x90121,0x1e9},
+	{0x90122,0x8},
+	{0x90123,0x8080},
+	{0x90124,0x108},
+	{0x90125,0xf},
+	{0x90126,0x408},
+	{0x90127,0x169},
+	{0x90128,0xc},
+	{0x90129,0x0},
+	{0x9012a,0x68},
+	{0x9012b,0x9},
+	{0x9012c,0x0},
+	{0x9012d,0x1a9},
+	{0x9012e,0x0},
+	{0x9012f,0x408},
+	{0x90130,0x169},
+	{0x90131,0x0},
+	{0x90132,0x8080},
+	{0x90133,0x108},
+	{0x90134,0x8},
+	{0x90135,0x7aa},
+	{0x90136,0x6a},
+	{0x90137,0x0},
+	{0x90138,0x8568},
+	{0x90139,0x108},
+	{0x9013a,0xb7},
+	{0x9013b,0x790},
+	{0x9013c,0x16a},
+	{0x9013d,0x1f},
+	{0x9013e,0x0},
+	{0x9013f,0x68},
+	{0x90140,0x8},
+	{0x90141,0x8558},
+	{0x90142,0x168},
+	{0x90143,0xf},
+	{0x90144,0x408},
+	{0x90145,0x169},
+	{0x90146,0xc},
+	{0x90147,0x0},
+	{0x90148,0x68},
+	{0x90149,0x0},
+	{0x9014a,0x408},
+	{0x9014b,0x169},
+	{0x9014c,0x0},
+	{0x9014d,0x8558},
+	{0x9014e,0x168},
+	{0x9014f,0x8},
+	{0x90150,0x3c8},
+	{0x90151,0x1a9},
+	{0x90152,0x3},
+	{0x90153,0x370},
+	{0x90154,0x129},
+	{0x90155,0x20},
+	{0x90156,0x2aa},
+	{0x90157,0x9},
+	{0x90158,0x0},
+	{0x90159,0x400},
+	{0x9015a,0x10e},
+	{0x9015b,0x8},
+	{0x9015c,0xe8},
+	{0x9015d,0x109},
+	{0x9015e,0x0},
+	{0x9015f,0x8140},
+	{0x90160,0x10c},
+	{0x90161,0x10},
+	{0x90162,0x8138},
+	{0x90163,0x10c},
+	{0x90164,0x8},
+	{0x90165,0x7c8},
+	{0x90166,0x101},
+	{0x90167,0x8},
+	{0x90168,0x0},
+	{0x90169,0x8},
+	{0x9016a,0x8},
+	{0x9016b,0x448},
+	{0x9016c,0x109},
+	{0x9016d,0xf},
+	{0x9016e,0x7c0},
+	{0x9016f,0x109},
+	{0x90170,0x0},
+	{0x90171,0xe8},
+	{0x90172,0x109},
+	{0x90173,0x47},
+	{0x90174,0x630},
+	{0x90175,0x109},
+	{0x90176,0x8},
+	{0x90177,0x618},
+	{0x90178,0x109},
+	{0x90179,0x8},
+	{0x9017a,0xe0},
+	{0x9017b,0x109},
+	{0x9017c,0x0},
+	{0x9017d,0x7c8},
+	{0x9017e,0x109},
+	{0x9017f,0x8},
+	{0x90180,0x8140},
+	{0x90181,0x10c},
+	{0x90182,0x0},
+	{0x90183,0x1},
+	{0x90184,0x8},
+	{0x90185,0x8},
+	{0x90186,0x4},
+	{0x90187,0x8},
+	{0x90188,0x8},
+	{0x90189,0x7c8},
+	{0x9018a,0x101},
+	{0x90006,0x0},
+	{0x90007,0x0},
+	{0x90008,0x8},
+	{0x90009,0x0},
+	{0x9000a,0x0},
+	{0x9000b,0x0},
+	{0xd00e7,0x400},
+	{0x90017,0x0},
+	{0x9001f,0x2a},
+	{0x90026,0x6a},
+	{0x400d0,0x0},
+	{0x400d1,0x101},
+	{0x400d2,0x105},
+	{0x400d3,0x107},
+	{0x400d4,0x10f},
+	{0x400d5,0x202},
+	{0x400d6,0x20a},
+	{0x400d7,0x20b},
+	{0x2003a,0x2},
+	{0x2000b,0x64},
+	{0x2000c,0xc8},
+	{0x2000d,0x7d0},
+	{0x2000e,0x2c},
+	{0x12000b,0x14},
+	{0x12000c,0x29},
+	{0x12000d,0x1a1},
+	{0x12000e,0x10},
+	{0x9000c,0x0},
+	{0x9000d,0x173},
+	{0x9000e,0x60},
+	{0x9000f,0x6110},
+	{0x90010,0x2152},
+	{0x90011,0xdfbd},
+	{0x90012,0x60},
+	{0x90013,0x6152},
+	{0x20010,0x5a},
+	{0x20011,0x3},
+	{0x120010,0x5a},
+	{0x120011,0x3},
+	{0x40080,0xe0},
+	{0x40081,0x12},
+	{0x40082,0xe0},
+	{0x40083,0x12},
+	{0x40084,0xe0},
+	{0x40085,0x12},
+	{0x140080,0xe0},
+	{0x140081,0x12},
+	{0x140082,0xe0},
+	{0x140083,0x12},
+	{0x140084,0xe0},
+	{0x140085,0x12},
+	{0x400fd,0xf},
+	{0x10011,0x1},
+	{0x10012,0x1},
+	{0x10013,0x180},
+	{0x10018,0x1},
+	{0x10002,0x6209},
+	{0x100b2,0x1},
+	{0x101b4,0x1},
+	{0x102b4,0x1},
+	{0x103b4,0x1},
+	{0x104b4,0x1},
+	{0x105b4,0x1},
+	{0x106b4,0x1},
+	{0x107b4,0x1},
+	{0x108b4,0x1},
+	{0x11011,0x1},
+	{0x11012,0x1},
+	{0x11013,0x180},
+	{0x11018,0x1},
+	{0x11002,0x6209},
+	{0x110b2,0x1},
+	{0x111b4,0x1},
+	{0x112b4,0x1},
+	{0x113b4,0x1},
+	{0x114b4,0x1},
+	{0x115b4,0x1},
+	{0x116b4,0x1},
+	{0x117b4,0x1},
+	{0x118b4,0x1},
+	{0x12011,0x1},
+	{0x12012,0x1},
+	{0x12013,0x180},
+	{0x12018,0x1},
+	{0x12002,0x6209},
+	{0x120b2,0x1},
+	{0x121b4,0x1},
+	{0x122b4,0x1},
+	{0x123b4,0x1},
+	{0x124b4,0x1},
+	{0x125b4,0x1},
+	{0x126b4,0x1},
+	{0x127b4,0x1},
+	{0x128b4,0x1},
+	{0x13011,0x1},
+	{0x13012,0x1},
+	{0x13013,0x180},
+	{0x13018,0x1},
+	{0x13002,0x6209},
+	{0x130b2,0x1},
+	{0x131b4,0x1},
+	{0x132b4,0x1},
+	{0x133b4,0x1},
+	{0x134b4,0x1},
+	{0x135b4,0x1},
+	{0x136b4,0x1},
+	{0x137b4,0x1},
+	{0x138b4,0x1},
+	{0x2003a,0x2},
+	{0xc0080,0x2},
+	{0xd0000, 0x1}
+};
+
+struct dram_fsp_msg ddr_dram_fsp_msg[] = {
+	{
+		/* P0 3200mts 1D */
+		.drate = 3200,
+		.fw_type = FW_1D_IMAGE,
+		.fsp_cfg = ddr_fsp0_cfg,
+		.fsp_cfg_num = ARRAY_SIZE(ddr_fsp0_cfg),
+	},
+	{
+		/* P1 667mts 1D */
+		.drate = 667,
+		.fw_type = FW_1D_IMAGE,
+		.fsp_cfg = ddr_fsp1_cfg,
+		.fsp_cfg_num = ARRAY_SIZE(ddr_fsp1_cfg),
+	},
+	{
+		/* P0 3200mts 2D */
+		.drate = 3200,
+		.fw_type = FW_2D_IMAGE,
+		.fsp_cfg = ddr_fsp0_2d_cfg,
+		.fsp_cfg_num = ARRAY_SIZE(ddr_fsp0_2d_cfg),
+	},
+};
+
+/* ddr timing config params */
+struct dram_timing_info dram_timing = {
+	.ddrc_cfg = ddr_ddrc_cfg,
+	.ddrc_cfg_num = ARRAY_SIZE(ddr_ddrc_cfg),
+	.ddrphy_cfg = ddr_ddrphy_cfg,
+	.ddrphy_cfg_num = ARRAY_SIZE(ddr_ddrphy_cfg),
+	.fsp_msg = ddr_dram_fsp_msg,
+	.fsp_msg_num = ARRAY_SIZE(ddr_dram_fsp_msg),
+	.ddrphy_trained_csr = ddr_ddrphy_trained_csr,
+	.ddrphy_trained_csr_num = ARRAY_SIZE(ddr_ddrphy_trained_csr),
+	.ddrphy_pie = ddr_phy_pie,
+	.ddrphy_pie_num = ARRAY_SIZE(ddr_phy_pie),
+	.fsp_table = { 3200, 667, },
+};
+
diff --git a/board/tqc/tqma8mx/spl.c b/board/tqc/tqma8mx/spl.c
index 94392e77a2..2a3bfae273 100644
--- a/board/tqc/tqma8mx/spl.c
+++ b/board/tqc/tqma8mx/spl.c
@@ -5,30 +5,39 @@
  */
 
 #include <common.h>
-#include <asm/arch/clock.h>
-#include <asm/arch/ddr_memory_map.h>
-#include <asm/arch/imx8mq_pins.h>
-#include <asm/arch/sys_proto.h>
-#include <asm/imx-common/gpio.h>
-#include <asm/imx-common/iomux-v3.h>
-#include <asm/imx-common/mxc_i2c.h>
+#include <spl.h>
 #include <asm/io.h>
 #include <errno.h>
-#include <fsl_esdhc.h>
-#include <mmc.h>
+#include <asm/io.h>
+#include <asm/mach-imx/iomux-v3.h>
+#include <asm/arch/ddr.h>
+#include <asm/arch/imx8mq_pins.h>
+#include <asm/arch/sys_proto.h>
 #include <power/pmic.h>
 #include <power/pfuze100_pmic.h>
 /* #include "../common/pfuze.h" */
-#include <spl.h>
-
-#include "ddr/ddr.h"
+#include <asm/arch/clock.h>
+#include <asm/mach-imx/gpio.h>
+#include <asm/mach-imx/mxc_i2c.h>
+#include <fsl_esdhc.h>
+#include <mmc.h>
+#include <asm/arch/imx8m_ddr.h>
 
 DECLARE_GLOBAL_DATA_PTR;
 
+/* extern struct dram_timing_info dram_timing_b0; */
+
 void spl_dram_init(void)
 {
 	/* ddr init */
-	ddr_init();
+	if ((get_cpu_rev() & 0xfff) == CHIP_REV_2_1)
+		ddr_init(&dram_timing);
+	else {
+		debug("spl_init() - not timing fpor this chip rev: %x\n",
+		      (get_cpu_rev() & 0xfff));
+		hang();
+		/* ddr_init(&dram_timing_b0); */
+	}
 }
 
 #define I2C_PAD_CTRL	(PAD_CTL_DSE6 | PAD_CTL_HYS | PAD_CTL_PUE)
@@ -189,21 +198,16 @@ int power_init_board(void)
 
 void spl_board_init(void)
 {
-	enable_tzc380();
-
-	/* Adjust pmic voltage to 1.0V for 800M */
-	setup_i2c(0, CONFIG_SYS_I2C_SPEED, 0x7f, &i2c_pad_info1);
-
-	power_init_board();
-
-	/* DDR initialization */
-	spl_dram_init();
-
+#ifndef CONFIG_SPL_USB_SDP_SUPPORT
 	/* Serial download mode */
 	if (is_usb_boot()) {
 		puts("Back to ROM, SDP\n");
 		restore_boot_params();
 	}
+#endif
+
+	init_usb_clk();
+
 	puts("Normal Boot\n");
 }
 
@@ -219,11 +223,15 @@ int board_fit_config_name_match(const char *name)
 
 void board_init_f(ulong dummy)
 {
+	int ret;
+
 	/* Clear global data */
 	memset((void *)gd, 0, sizeof(gd_t));
 
 	arch_cpu_init();
 
+	init_uart_clk(0); /* Init UART0 clock */
+
 	board_early_init_f();
 
 	timer_init();
@@ -233,5 +241,21 @@ void board_init_f(ulong dummy)
 	/* Clear the BSS. */
 	memset(__bss_start, 0, __bss_end - __bss_start);
 
+	ret = spl_init();
+	if (ret) {
+		debug("spl_init() failed: %d\n", ret);
+		hang();
+	}
+
+	enable_tzc380();
+
+	/* Adjust pmic voltage to 1.0V for 800M */
+	setup_i2c(0, CONFIG_SYS_I2C_SPEED, 0x7f, &i2c_pad_info1);
+
+	power_init_board();
+
+	/* DDR initialization */
+	spl_dram_init();
+
 	board_init_r(NULL, 0);
 }
diff --git a/board/tqc/tqma8mx/tqma8mx-mba8mx.c b/board/tqc/tqma8mx/tqma8mx-mba8mx.c
index 599c77d8fb..bc3b3f77c0 100644
--- a/board/tqc/tqma8mx/tqma8mx-mba8mx.c
+++ b/board/tqc/tqma8mx/tqma8mx-mba8mx.c
@@ -9,14 +9,14 @@
 #include <malloc.h>
 #include <errno.h>
 #include <asm/io.h>
-#include <asm/imx-common/iomux-v3.h>
+#include <asm/mach-imx/iomux-v3.h>
 #include <asm-generic/gpio.h>
 #include <fsl_esdhc.h>
 #include <mmc.h>
 #include <asm/arch/imx8mq_pins.h>
 #include <asm/arch/sys_proto.h>
-#include <asm/imx-common/gpio.h>
-#include <asm/imx-common/mxc_i2c.h>
+#include <asm/mach-imx/gpio.h>
+#include <asm/mach-imx/mxc_i2c.h>
 #include <asm/arch/clock.h>
 #include <spl.h>
 #include <dm.h>
@@ -165,8 +165,8 @@ int tqc_bb_board_init(void)
 int tqc_bb_board_late_init(void)
 {
 #ifdef CONFIG_ENV_VARS_UBOOT_RUNTIME_CONFIG
-	setenv("board_name", "MBa8MQ");
-	setenv("board_rev", "iMX8MQ");
+	env_set("board_name", "MBa8MQ");
+	env_set("board_rev", "iMX8MQ");
 #endif
 
 #ifdef CONFIG_ENV_IS_IN_MMC
diff --git a/board/tqc/tqma8mx/tqma8mx.c b/board/tqc/tqma8mx/tqma8mx.c
index 4ad78fdf03..b44843f259 100644
--- a/board/tqc/tqma8mx/tqma8mx.c
+++ b/board/tqc/tqma8mx/tqma8mx.c
@@ -9,14 +9,14 @@
 #include <malloc.h>
 #include <errno.h>
 #include <asm/io.h>
-#include <asm/imx-common/iomux-v3.h>
+#include <asm/mach-imx/iomux-v3.h>
 #include <asm-generic/gpio.h>
 #include <fsl_esdhc.h>
 #include <mmc.h>
 #include <asm/arch/imx8mq_pins.h>
 #include <asm/arch/sys_proto.h>
-#include <asm/imx-common/gpio.h>
-#include <asm/imx-common/mxc_i2c.h>
+#include <asm/mach-imx/gpio.h>
+#include <asm/mach-imx/mxc_i2c.h>
 #include <asm/arch/clock.h>
 #include <spl.h>
 #include <power/pmic.h>
diff --git a/configs/tqma8mq_mba8mx_mmc_defconfig b/configs/tqma8mq_mba8mx_mmc_defconfig
index 6ae2aaecd2..d123da5429 100644
--- a/configs/tqma8mq_mba8mx_mmc_defconfig
+++ b/configs/tqma8mq_mba8mx_mmc_defconfig
@@ -1,31 +1,34 @@
 CONFIG_ARM=y
 CONFIG_ARCH_IMX8M=y
+CONFIG_SYS_TEXT_BASE=0x40200000
 CONFIG_SYS_MALLOC_F_LEN=0x2000
 CONFIG_TARGET_TQMA8MX=y
 CONFIG_DEFAULT_DEVICE_TREE="fsl-imx8mq-tqma8mq-mba8mx"
 CONFIG_FIT=y
 CONFIG_SPL_LOAD_FIT=y
-CONFIG_SYS_EXTRA_OPTIONS="IMX_CONFIG=arch/arm/imx-common/spl_sd.cfg"
+CONFIG_SYS_EXTRA_OPTIONS="IMX_CONFIG=arch/arm/mach-imx/spl_sd.cfg"
 CONFIG_ARCH_MISC_INIT=y
 CONFIG_HUSH_PARSER=y
-CONFIG_CMD_MEMTEST=y
 CONFIG_CMD_MEMINFO=y
-CONFIG_CMD_I2C=y
+CONFIG_CMD_MEMTEST=y
 CONFIG_CMD_GPIO=y
-# CONFIG_CMD_NET is not set
-# CONFIG_CMD_NFS is not set
+CONFIG_CMD_I2C=y
 CONFIG_CMD_CACHE=y
 CONFIG_CMD_TIME=y
 CONFIG_CMD_PMIC=y
 CONFIG_CMD_REGULATOR=y
 CONFIG_CMD_UBI=y
+# CONFIG_DOS_PARTITION is not set
 CONFIG_OF_CONTROL=y
-# CONFIG_BLK is not set
+CONFIG_IMX8M_LPDDR4=y
 CONFIG_DM_GPIO=y
 CONFIG_DM_I2C=y
 CONFIG_SYS_I2C_MXC=y
 CONFIG_DM_MMC=y
-# CONFIG_DM_MMC_OPS is not set
+CONFIG_PHYLIB=y
+CONFIG_PHY_TI=y
+CONFIG_DM_ETH=y
+CONFIG_PHY_GIGE=y
 CONFIG_DM_PMIC=y
 CONFIG_DM_PMIC_PFUZE100=y
 CONFIG_DM_REGULATOR=y
@@ -33,4 +36,7 @@ CONFIG_DM_REGULATOR_PFUZE100=y
 CONFIG_DM_REGULATOR_FIXED=y
 CONFIG_DM_REGULATOR_GPIO=y
 CONFIG_NXP_TMU=y
-CONFIG_REGEX=y
+CONFIG_FS_EXT4=y
+CONFIG_EXT4_WRITE=y
+CONFIG_FS_FAT=y
+CONFIG_FAT_WRITE=y
diff --git a/include/configs/tqma8mx.h b/include/configs/tqma8mx.h
index 1bb62bc55a..99a5de3ec6 100644
--- a/include/configs/tqma8mx.h
+++ b/include/configs/tqma8mx.h
@@ -15,7 +15,7 @@
 #define CONFIG_CSF_SIZE			0x2000 /* 8K region */
 #endif
 
-#define CONFIG_SPL_FRAMEWORK
+/* #define CONFIG_SPL_FRAMEWORK */
 #define CONFIG_SPL_TEXT_BASE		0x7E1000
 #define CONFIG_SPL_MAX_SIZE		(124 * 1024)
 #define CONFIG_SYS_MONITOR_LEN		(512 * 1024)
@@ -208,15 +208,15 @@
 /* Monitor Command Prompt */
 #undef CONFIG_SYS_PROMPT
 #define CONFIG_SYS_PROMPT		"u-boot=> "
-#define CONFIG_SYS_LONGHELP
+/* #define CONFIG_SYS_LONGHELP */
 #define CONFIG_SYS_PROMPT_HUSH_PS2     "> "
-#define CONFIG_AUTO_COMPLETE
+/* #define CONFIG_AUTO_COMPLETE */
 #define CONFIG_SYS_CBSIZE              2048
 #define CONFIG_SYS_MAXARGS             64
 #define CONFIG_SYS_BARGSIZE CONFIG_SYS_CBSIZE
 #define CONFIG_SYS_PBSIZE		(CONFIG_SYS_CBSIZE + \
 					sizeof(CONFIG_SYS_PROMPT) + 16)
-#define CONFIG_CMDLINE_EDITING
+/* #define CONFIG_CMDLINE_EDITING */
 
 #define CONFIG_IMX_BOOTAUX
 
@@ -251,7 +251,7 @@
 #define FSL_QSPI_FLASH_NUM		1
 
 /* needed for UBI support */
-#define CONFIG_CMD_MTDPARTS
+/* #define CONFIG_CMD_MTDPARTS */
 #define CONFIG_MTD_PARTITIONS
 #define CONFIG_MTD_DEVICE
 
@@ -274,11 +274,11 @@
 #define CONFIG_USB_XHCI_DWC3
 #define CONFIG_USB_XHCI_HCD
 #define CONFIG_USB_MAX_CONTROLLER_COUNT         2
-#define CONFIG_SYS_USB_XHCI_MAX_ROOT_PORTS      2
+/* #define CONFIG_SYS_USB_XHCI_MAX_ROOT_PORTS      2 */
 #endif
 
 #define CONFIG_CMD_USB
-#define CONFIG_USB_STORAGE
+/* #define CONFIG_USB_STORAGE */
 #define CONFIG_CMD_EXT2
 
 #define CONFIG_USB_DWC3
