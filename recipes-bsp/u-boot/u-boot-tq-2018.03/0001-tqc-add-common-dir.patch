From 863e06ca618afcceffc5d76a366660b16447db28 Mon Sep 17 00:00:00 2001
From: Markus Niebel <Markus.Niebel@tq-group.com>
Date: Thu, 14 Feb 2019 07:39:17 +0100
Subject: [PATCH] tqc: add common dir

- port baseboard support api
- port eeprom api
- port emmc

Signed-off-by: Markus Niebel <Markus.Niebel@tq-group.com>
---
 board/tqc/common/Kconfig      |  13 ++++
 board/tqc/common/Makefile     |  12 ++++
 board/tqc/common/tqc_bb.h     |  32 +++++++++
 board/tqc/common/tqc_eeprom.c | 128 ++++++++++++++++++++++++++++++++++
 board/tqc/common/tqc_eeprom.h |  34 +++++++++
 board/tqc/common/tqc_emmc.c   |  80 +++++++++++++++++++++
 board/tqc/common/tqc_emmc.h   |  13 ++++
 7 files changed, 312 insertions(+)
 create mode 100644 board/tqc/common/Kconfig
 create mode 100644 board/tqc/common/Makefile
 create mode 100644 board/tqc/common/tqc_bb.h
 create mode 100644 board/tqc/common/tqc_eeprom.c
 create mode 100644 board/tqc/common/tqc_eeprom.h
 create mode 100644 board/tqc/common/tqc_emmc.c
 create mode 100644 board/tqc/common/tqc_emmc.h

diff --git a/board/tqc/common/Kconfig b/board/tqc/common/Kconfig
new file mode 100644
index 0000000000..5a13c257a9
--- /dev/null
+++ b/board/tqc/common/Kconfig
@@ -0,0 +1,13 @@
+
+config TQC_EEPROM
+	bool
+	default n
+
+config TQC_EMMC
+	bool
+	default n
+
+config TQC_SDMMC
+	bool
+	default n
+
diff --git a/board/tqc/common/Makefile b/board/tqc/common/Makefile
new file mode 100644
index 0000000000..e40f255072
--- /dev/null
+++ b/board/tqc/common/Makefile
@@ -0,0 +1,12 @@
+#
+# Copyright (C) 2016 - 2017, Markus Niebel <Markus.Niebel@tq-group.com>
+#
+# SPDX-License-Identifier:	GPL-2.0+
+#
+
+# necessary to create built-in.o
+obj- := __dummy__.o
+
+obj-$(CONFIG_TQC_EEPROM) += tqc_eeprom.o
+obj-$(CONFIG_TQC_EMMC) += tqc_emmc.o
+obj-$(CONFIG_TQC_SDMMC) += tqc_sdmmc.o
diff --git a/board/tqc/common/tqc_bb.h b/board/tqc/common/tqc_bb.h
new file mode 100644
index 0000000000..e0de23ff98
--- /dev/null
+++ b/board/tqc/common/tqc_bb.h
@@ -0,0 +1,32 @@
+/*
+ * Copyright (C) 2013, 2014, 2016 TQ Systems
+ * Author: Markus Niebel <markus.niebel@tq-group.com>
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#ifndef __TQC_BB__
+#define __TQC_BB__
+
+#include <common.h>
+
+int tqc_bb_board_mmc_getwp(struct mmc *mmc);
+int tqc_bb_board_mmc_getcd(struct mmc *mmc);
+int tqc_bb_board_mmc_init(bd_t *bis);
+
+int tqc_bb_board_early_init_f(void);
+int tqc_bb_board_init(void);
+int tqc_bb_board_late_init(void);
+int tqc_bb_checkboard(void);
+void tqc_bb_board_quiesce_devices();
+
+const char *tqc_bb_get_boardname(void);
+
+/*
+ * Device Tree Support
+ */
+#if defined(CONFIG_OF_BOARD_SETUP) && defined(CONFIG_OF_LIBFDT)
+int tqc_bb_ft_board_setup(void *blob, bd_t *bd);
+#endif /* defined(CONFIG_OF_BOARD_SETUP) && defined(CONFIG_OF_LIBFDT) */
+
+#endif
diff --git a/board/tqc/common/tqc_eeprom.c b/board/tqc/common/tqc_eeprom.c
new file mode 100644
index 0000000000..6523c2c9d1
--- /dev/null
+++ b/board/tqc/common/tqc_eeprom.c
@@ -0,0 +1,128 @@
+/*
+ * Copyright (C) 2014 - 2016 TQ Systems GmbH
+ * Markus Niebel <Markus.Niebel@tq-group.com>
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#include <common.h>
+#include <i2c.h>
+#include <malloc.h>
+#include <linux/ctype.h>
+
+#include "tqc_eeprom.h"
+
+int tqc_parse_eeprom_mac(struct tqc_eeprom_data *eeprom, char *buf,
+			 size_t len)
+{
+	u8 *p;
+	int ret;
+
+	if (!buf || !eeprom)
+		return -1;
+	/* MAC address */
+	p = eeprom->mac;
+	ret = snprintf(buf, len, "%02x:%02x:%02x:%02x:%02x:%02x",
+		       p[0], p[1], p[2], p[3], p[4], p[5]);
+	if (ret < 0)
+		return ret;
+	if (ret >= len)
+		return ret;
+
+	return 0;
+}
+
+int tqc_parse_eeprom_serial(struct tqc_eeprom_data *eeprom, char *buf,
+			    size_t len)
+{
+	unsigned i;
+
+	if (!buf || !eeprom)
+		return -1;
+	if (len < (sizeof(eeprom->serial) + 1))
+		return -1;
+
+	for (i = 0; i < (sizeof(eeprom->serial)) &&
+		isdigit(eeprom->serial[i]); i++)
+		buf[i] = eeprom->serial[i];
+	buf[i] = '\0';
+	if (sizeof(eeprom->serial) != strlen(buf))
+		return -1;
+
+	return 0;
+}
+
+int tqc_parse_eeprom_id(struct tqc_eeprom_data *eeprom, char *buf,
+			size_t len)
+{
+	unsigned i;
+
+	if (!buf || !eeprom)
+		return -1;
+	if (len < (sizeof(eeprom->id) + 1))
+		return -1;
+
+	for (i = 0; i < sizeof(eeprom->id) &&
+		isprint(eeprom->id[i]) && isascii(eeprom->id[i]); ++i)
+		buf[i] = eeprom->id[i];
+	buf[i] = '\0';
+
+	return 0;
+}
+
+/*
+ * show_eeprom - display the contents of the module EEPROM
+ */
+int tqc_show_eeprom(struct tqc_eeprom_data *eeprom, const char *id)
+{
+	/* must hold largest field of eeprom data */
+	char safe_string[0x41];
+
+	if (!eeprom)
+		return -1;
+
+	puts(id);
+	puts(" EEPROM:\n");
+	/* ID */
+	tqc_parse_eeprom_id(eeprom, safe_string,
+			      ARRAY_SIZE(safe_string));
+	if (0 == strncmp(safe_string, id, strlen(id)))
+		printf("  ID: %s\n", safe_string);
+	else
+		puts("  unknown hardware variant\n");
+
+	/* Serial number */
+	if (0 == tqc_parse_eeprom_serial(eeprom, safe_string,
+					   ARRAY_SIZE(safe_string)))
+		printf("  SN: %s\n", safe_string);
+	else
+		puts("  unknown serial number\n");
+	/* MAC address */
+	if (0 == tqc_parse_eeprom_mac(eeprom, safe_string,
+					ARRAY_SIZE(safe_string)))
+		printf("  MAC: %s\n", safe_string);
+	else
+		puts("  invalid MAC\n");
+
+	return 0;
+}
+
+/*
+ * read_eeprom - read the given EEPROM into memory
+ */
+int tqc_read_eeprom(unsigned int bus, unsigned int addr,
+		    struct tqc_eeprom_data *eeprom)
+{
+	int ret;
+	unsigned int oldbus;
+	if (!eeprom)
+		return -1;
+
+	oldbus = i2c_get_bus_num();
+	i2c_set_bus_num(bus);
+	ret = i2c_read(addr, 0, CONFIG_SYS_I2C_EEPROM_ADDR_LEN,
+		       (uchar *)eeprom, sizeof(*eeprom));
+	i2c_set_bus_num(oldbus);
+	return ret;
+}
+
diff --git a/board/tqc/common/tqc_eeprom.h b/board/tqc/common/tqc_eeprom.h
new file mode 100644
index 0000000000..6c1b06f7a5
--- /dev/null
+++ b/board/tqc/common/tqc_eeprom.h
@@ -0,0 +1,34 @@
+/*
+ * Copyright (C) 2014 - 2016 TQ Systems GmbH
+ * Markus Niebel <Markus.Niebel@tq-group.com>
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#ifndef __TQC_EEPROM_H__
+#define __TQC_EEPROM_H__
+
+/*
+ * static EEPROM layout
+ */
+struct __attribute__ ((__packed__)) tqc_eeprom_data {
+	u8 hrcw_primary[0x20];
+	u8 mac[6];		/* 0x20 ... 0x25 */
+	u8 rsv1[10];
+	u8 serial[8];		/* 0x30 ... 0x37 */
+	u8 rsv2[8];
+	u8 id[0x40];		/* 0x40 ... 0x7f */
+};
+
+int tqc_parse_eeprom_mac(struct tqc_eeprom_data *eeprom, char *buf,
+			 size_t len);
+
+int tqc_parse_eeprom_serial(struct tqc_eeprom_data *eeprom, char *buf,
+			    size_t len);
+int tqc_parse_eeprom_id(struct tqc_eeprom_data *eeprom, char *buf,
+			size_t len);
+int tqc_show_eeprom(struct tqc_eeprom_data *eeprom, const char *id);
+int tqc_read_eeprom(unsigned int bus, unsigned int addr,
+		    struct tqc_eeprom_data *eeprom);
+
+#endif
diff --git a/board/tqc/common/tqc_emmc.c b/board/tqc/common/tqc_emmc.c
new file mode 100644
index 0000000000..f35a2075d5
--- /dev/null
+++ b/board/tqc/common/tqc_emmc.c
@@ -0,0 +1,80 @@
+/*
+ * (C) Copyright 2017 TQ Systems GmbH
+ * Markus Niebel <Markus.Niebel@tq-group.com>
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#include <common.h>
+#include <fdt_support.h>
+#include <mmc.h>
+
+#include "tqc_emmc.h"
+
+struct emmc_dsr_lookup {
+	uint mfgid;
+	char *pnm;
+	int dsr_needed;
+};
+
+static const struct emmc_dsr_lookup dsr_tbl[] = {
+	/* Micron, e-MMC 4.41 */
+	{ 0xfe, "MMC02G", 1 },
+	{ 0xfe, "MMC04G", 1 },
+	{ 0xfe, "MMC08G", 1 },
+	/* Micron, e-MMC 5.0 4 GB*/
+	{ 0x13, "Q1J54A", 1 },
+	{ 0x13, "Q2J54A", 1 },
+	/* Micron, e-MMC 5.0 8 GB*/
+	{ 0x13, "Q2J55L", 0 },
+	/* Samsung, e-MMC 5.0 */
+	{ 0x15, "8GSD3R", 0 },
+	{ 0x15, "AGSD3R", 0 },
+	{ 0x15, "BGSD3R", 0 },
+	{ 0x15, "CGSD3R", 0 },
+	/* SanDisk, iNAND 7250 5.1 */
+	{ 0x45, "DG4008", 0 },
+	{ 0x45, "DG4016", 0 },
+	{ 0x45, "DG4032", 0 },
+	{ 0x45, "DG4064", 0 },
+	/* Kingston TBD. */
+	{ 0x100, "?????", 0 },
+};
+
+int tqc_emmc_need_dsr(struct mmc *mmc)
+{
+	uint mfgid = mmc->cid[0] >> 24;
+	char name[7];
+	unsigned i;
+	int ret = -1;
+
+	if (IS_SD(mmc))
+		return 0;
+
+	sprintf(name, "%c%c%c%c%c%c", mmc->cid[0] & 0xff, (mmc->cid[1] >> 24),
+		(mmc->cid[1] >> 16) & 0xff, (mmc->cid[1] >> 8) & 0xff,
+		mmc->cid[1] & 0xff, (mmc->cid[2] >> 24));
+
+	for (i = 0; i < ARRAY_SIZE(dsr_tbl) && (ret < 0); ++i) {
+		if ((dsr_tbl[i].mfgid == mfgid) &&
+		    (!strncmp(name, dsr_tbl[i].pnm, 6))) {
+			ret = dsr_tbl[i].dsr_needed;
+			debug("MFG: %x PNM: %s\n", mfgid, name);
+		}
+	}
+
+	if (ret < 0) {
+		printf("e-MMC unknown: MFG: %x PNM: %s\n", mfgid, name);
+		/* request DSR, even if not known if supported to be safe */
+		ret = 1;
+	}
+
+	return ret;
+}
+
+int tqc_ft_fixup_emmc_dsr(void *blob, const char *path, u32 value)
+{
+	do_fixup_by_path_u32(blob, path, "dsr", value, 1);
+	return 0;
+}
+
diff --git a/board/tqc/common/tqc_emmc.h b/board/tqc/common/tqc_emmc.h
new file mode 100644
index 0000000000..5071a8ec95
--- /dev/null
+++ b/board/tqc/common/tqc_emmc.h
@@ -0,0 +1,13 @@
+/*
+ * (C) Copyright 2017 TQ Systems GmbH
+ * Markus Niebel <Markus.Niebel@tq-group.com>
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+#ifndef __TQC_EMMC_H__
+#define __TQC_EMMC_H__
+
+int tqc_emmc_need_dsr(struct mmc *mmc);
+int tqc_ft_fixup_emmc_dsr(void *blob, const char *path, u32 value);
+
+#endif /* __TQC_EMMC_H__ */
