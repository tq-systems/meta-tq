From 2cd4ed6f56df646e648899c933ba8abf0c96b3c8 Mon Sep 17 00:00:00 2001
From: Huynh Thanh Hung <hung.huynh.wz@renesas.com>
Date: Wed, 5 Aug 2020 15:36:10 +0700
Subject: [PATCH 14/14] plat: renesas: rzg: Add support ECC Full Single setting
 for R8A774A3

This patch will add support ECC Full Single setting for R8A774A3
(R8A774A1 rev 3).

Signed-off-by: Huynh Thanh Hung <hung.huynh.wz@renesas.com>
---
 plat/renesas/rzg/bl2_fusa.c       | 56 +++++++++++++++++++++++++++++--
 plat/renesas/rzg/bl2_plat_setup.c |  7 ++--
 2 files changed, 58 insertions(+), 5 deletions(-)

diff --git a/plat/renesas/rzg/bl2_fusa.c b/plat/renesas/rzg/bl2_fusa.c
index d93ba7946..a4ad0a44a 100644
--- a/plat/renesas/rzg/bl2_fusa.c
+++ b/plat/renesas/rzg/bl2_fusa.c
@@ -56,10 +56,22 @@
 #endif //(RZG_HIHOPE_RZG2N == 1)
 
 #if (RZG_HIHOPE_RZG2M == 1)
+#if (RZG_DRAM_ECC_FULL == 1)
 #define	FUSAAREA1		0x408000000
 #define	FUSAAREA1_TOTAL	((1920)*1024*1024)
 #define	ECCAREA1		0x608000000
 #define	ECCAREA1_TOTAL		((1920)*1024*1024)
+#else
+#define	FUSAAREA1		0x408000000
+#define	FUSAAREA1_TOTAL	((960)*1024*1024)
+#define	ECCAREA1		0x444000000
+#define	ECCAREA1_TOTAL	((960)*1024*1024)
+
+#define	FUSAAREA2		0x600000000
+#define	FUSAAREA2_TOTAL	((1024)*1024*1024)
+#define	ECCAREA2		0x640000000
+#define	ECCAREA2_TOTAL	((1024)*1024*1024)
+#endif
 #endif //(RZG_HIHOPE_RZG2M == 1)
 
 #if (RZG_HIHOPE_RZG2H == 1)
@@ -175,6 +187,36 @@ static const struct rzg2_ecc_conf rzg2_hihope_rzg2h_conf[] = {
 };
 #endif
 
+#if (RZG_HIHOPE_RZG2M == 1)
+static const struct rzg2_ecc_conf rzg2_hihope_rzg2m_conf[] = {
+#if (RZG_DRAM_ECC_FULL == 2)   // ECC Full mode single channel
+	{ FUSAAREACR(1, 6, 0x450000000), ECCAREACR(0, 0x454000000) }, /* 64+64 MB */
+	{ FUSAAREACR(1, 7, 0x408000000), ECCAREACR(0, 0x458000000) }, /* 128+128 MB */
+	{ FUSAAREACR(1, 9, 0x430000000), ECCAREACR(0, 0x460000000) }, /* 512+512 MB */
+	{ FUSAAREACR(1, 9, 0x600000000), ECCAREACR(0, 0x640000000) }, /* 512+512 MB */
+	{ FUSAAREACR(1, 9, 0x620000000), ECCAREACR(0, 0x660000000) }, /* 512+512 MB */
+#else
+	{ FUSAAREACR(0, 0, 0), ECCAREACR(0, 0) },
+	{ FUSAAREACR(0, 0, 0), ECCAREACR(0, 0) },
+	{ FUSAAREACR(0, 0, 0), ECCAREACR(0, 0) },
+	{ FUSAAREACR(0, 0, 0), ECCAREACR(0, 0) },
+	{ FUSAAREACR(0, 0, 0), ECCAREACR(0, 0) },
+	{ FUSAAREACR(0, 0, 0), ECCAREACR(0, 0) },
+#endif //(RZG_DRAM_ECC_FULL == 2)
+	{ FUSAAREACR(0, 0, 0), ECCAREACR(0, 0) },
+	{ FUSAAREACR(0, 0, 0), ECCAREACR(0, 0) },
+	{ FUSAAREACR(0, 0, 0), ECCAREACR(0, 0) },
+	{ FUSAAREACR(0, 0, 0), ECCAREACR(0, 0) },
+	{ FUSAAREACR(0, 0, 0), ECCAREACR(0, 0) },
+	{ FUSAAREACR(0, 0, 0), ECCAREACR(0, 0) },
+	{ FUSAAREACR(0, 0, 0), ECCAREACR(0, 0) },
+	{ FUSAAREACR(0, 0, 0), ECCAREACR(0, 0) },
+	{ FUSAAREACR(0, 0, 0), ECCAREACR(0, 0) },
+	{ FUSAAREACR(0, 0, 0), ECCAREACR(0, 0) },
+	{ FUSAAREACR(0, 0, 0), ECCAREACR(0, 0) },
+};
+#endif
+
 #if (RZG_HIHOPE_RZG2M == 1 || RZG_HIHOPE_RZG2H == 1)
 #if (RZG_DRAM_ECC_FULL == 1) // ECC Full mode dual channel
 static const uint32_t fusacr = EFUSASEL(0xF0) | DFUSASEL(0xF8)| SFUSASEL(0);
@@ -234,7 +276,8 @@ void bl2_ecc_dual_init()
 }
 #endif //((RZG_HIHOPE_RZG2M == 1) || (RZG_HIHOPE_RZG2H == 1))
 
-#if ((RZG_EK874 == 1) || (RZG_HIHOPE_RZG2N == 1) || (RZG_HIHOPE_RZG2H == 1))
+#if ((RZG_EK874 == 1) || (RZG_HIHOPE_RZG2N == 1) || (RZG_HIHOPE_RZG2H == 1) ||\
+     (RZG_HIHOPE_RZG2M == 1))
 void bl2_ecc_single_init(const struct rzg2_ecc_conf *conf, int nb_of_conf)
 {
 	int n;
@@ -276,11 +319,12 @@ void bl2_ecc_single_init(const struct rzg2_ecc_conf *conf, int nb_of_conf)
 
 #endif //(RZG_DRAM_ECC == 1)
 
-void bl2_ecc_init(void)
+void bl2_ecc_init(uint32_t major, uint32_t minor)
 {
 #if (RZG_DRAM_ECC == 1)
 
-#if (RZG_EK874 == 1 || RZG_HIHOPE_RZG2N == 1 || RZG_HIHOPE_RZG2H == 1)
+#if (RZG_EK874 == 1 || RZG_HIHOPE_RZG2N == 1 || RZG_HIHOPE_RZG2H == 1 ||\
+     RZG_HIHOPE_RZG2M == 1)
 	int nb_of_conf = 0;
 #endif
 
@@ -289,6 +333,12 @@ void bl2_ecc_init(void)
 	bl2_ecc_single_init(rzg2_ek874_conf, nb_of_conf);
 #elif (RZG_HIHOPE_RZG2M == 1)
 	bl2_ecc_dual_init();
+
+	if (major == 3)
+	{
+		nb_of_conf = ARRAY_SIZE(rzg2_hihope_rzg2m_conf);
+		bl2_ecc_single_init(rzg2_hihope_rzg2m_conf, nb_of_conf);
+	}
 #elif (RZG_HIHOPE_RZG2N == 1)
 	nb_of_conf = ARRAY_SIZE(rzg2_hihope_rzg2n_conf);
 	bl2_ecc_single_init(rzg2_hihope_rzg2n_conf, nb_of_conf);
diff --git a/plat/renesas/rzg/bl2_plat_setup.c b/plat/renesas/rzg/bl2_plat_setup.c
index 4171bb2b5..bc47855dd 100644
--- a/plat/renesas/rzg/bl2_plat_setup.c
+++ b/plat/renesas/rzg/bl2_plat_setup.c
@@ -61,7 +61,7 @@ extern void bl2_enter_bl31(const struct entry_point_info *bl_ep_info);
 extern void bl2_system_cpg_init(void);
 extern void bl2_secure_setting(void);
 extern void bl2_cpg_init(void);
-extern void bl2_ecc_init(void);
+extern void bl2_ecc_init(uint32_t major, uint32_t minor);
 extern void rcar_io_emmc_setup(void);
 extern void rcar_io_setup(void);
 extern void rcar_swdt_release(void);
@@ -791,6 +791,9 @@ void bl2_el3_early_platform_setup(u_register_t arg1, u_register_t arg2,
 		break;
 	}
 
+	major = 0;
+	minor = 0;
+
 	if ((PRR_PRODUCT_M3 == product) &&
 	    (PRR_PRODUCT_20 == (reg & RCAR_MAJOR_MASK))) {
 		if (RCAR_M3_CUT_VER11 == (reg & PRR_CUT_MASK)) {
@@ -927,7 +930,7 @@ lcm_state:
 		rcar_qos_init();
 	}
 
-	bl2_ecc_init();
+	bl2_ecc_init(major, minor);
 
 	/* Set up FDT */
 	ret = fdt_create_empty_tree(fdt, sizeof(fdt_blob));
-- 
2.17.1

