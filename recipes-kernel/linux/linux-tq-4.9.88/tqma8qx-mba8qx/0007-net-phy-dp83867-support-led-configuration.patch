From ee5e6a631d7bdd93c0842958e530256aa8905016 Mon Sep 17 00:00:00 2001
From: Marco Felsch <Marco.Felsch@tq-group.com>
Date: Fri, 9 Sep 2016 14:21:40 +0200
Subject: [PATCH] net: phy: dp83867: support led configuration

ported to 4.9.y

Signed-off-by: Marco Felsch <Marco.Felsch@tq-group.com>
(cherry picked from commit b6bdb28d8e75fd75c44f59a1b89c6c2f9d22d522)
Signed-off-by: Markus Niebel <Markus.Niebel@tq-group.com>
---
 .../devicetree/bindings/net/ti,dp83867.txt    |  6 ++++++
 drivers/net/phy/dp83867.c                     | 21 +++++++++++++++++++
 2 files changed, 27 insertions(+)

diff --git a/Documentation/devicetree/bindings/net/ti,dp83867.txt b/Documentation/devicetree/bindings/net/ti,dp83867.txt
index 75bcaa355880..ee190a3d57de 100644
--- a/Documentation/devicetree/bindings/net/ti,dp83867.txt
+++ b/Documentation/devicetree/bindings/net/ti,dp83867.txt
@@ -11,6 +11,10 @@ Required properties:
 	- ti,fifo-depth - Transmitt FIFO depth- see dt-bindings/net/ti-dp83867.h
 		for applicable values
 
+Optional properties:
+	- ti,led-function - Value for the led function register - see RM dp83867ir.pdf, page 71
+	- ti,led-ctrl - Value for the led control register - see RM dp83867ir.pdf, page 73
+
 Default child nodes are standard Ethernet PHY device
 nodes as described in Documentation/devicetree/bindings/net/phy.txt
 
@@ -21,6 +25,8 @@ Example:
 		ti,rx-internal-delay = <DP83867_RGMIIDCTL_2_25_NS>;
 		ti,tx-internal-delay = <DP83867_RGMIIDCTL_2_75_NS>;
 		ti,fifo-depth = <DP83867_PHYCR_FIFO_DEPTH_4_B_NIB>;
+		ti,led-function = <0x0db0>;	/* LED1: Link/Activity, LED2: error */
+		ti,led-ctrl = <0x1001>;		/* active low, LED1/2 driven by phy */
 	};
 
 Datasheet can be found:
diff --git a/drivers/net/phy/dp83867.c b/drivers/net/phy/dp83867.c
index 74ac4e046a12..e7ddab4ba9fe 100644
--- a/drivers/net/phy/dp83867.c
+++ b/drivers/net/phy/dp83867.c
@@ -28,6 +28,8 @@
 #define MII_DP83867_PHYCTRL	0x10
 #define MII_DP83867_MICR	0x12
 #define MII_DP83867_ISR		0x13
+#define MII_DP83867_LEDCR1	0x18
+#define MII_DP83867_LEDCR2	0x19
 #define DP83867_CTRL		0x1f
 #define DP83867_CFG3		0x1e
 
@@ -92,6 +94,8 @@ struct dp83867_private {
 	int io_impedance;
 	int port_mirroring;
 	bool rxctrl_strap_quirk;
+	u32 led_function;
+	u32 led_ctrl;
 };
 
 static int dp83867_ack_interrupt(struct phy_device *phydev)
@@ -168,6 +172,16 @@ static int dp83867_of_init(struct phy_device *phydev)
 	dp83867->rxctrl_strap_quirk = of_property_read_bool(of_node,
 					"ti,dp83867-rxctrl-strap-quirk");
 
+	ret = of_property_read_u32(of_node, "ti,led-function",
+				   &dp83867->led_function);
+	if (ret)
+		dp83867->led_function = 0xffffffff;
+
+	ret = of_property_read_u32(of_node, "ti,led-ctrl",
+				   &dp83867->led_ctrl);
+	if (ret)
+		dp83867->led_ctrl = 0xffffffff;
+
 	ret = of_property_read_u32(of_node, "ti,rx-internal-delay",
 				   &dp83867->rx_id_delay);
 	if (ret &&
@@ -298,6 +312,13 @@ static int dp83867_config_init(struct phy_device *phydev)
 	if (dp83867->port_mirroring != DP83867_PORT_MIRROING_KEEP)
 		dp83867_config_port_mirroring(phydev);
 
+	/* LED function */
+	if (dp83867->led_function != 0xffffffff)
+		phy_write(phydev, MII_DP83867_LEDCR1, dp83867->led_function);
+	/* led controls */
+	if (dp83867->led_ctrl != 0xffffffff)
+		phy_write(phydev, MII_DP83867_LEDCR2, dp83867->led_ctrl);
+
 	return 0;
 }
 
