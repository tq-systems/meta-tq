From 23104b60f4e98d668710b2b7aa0c62f3ab907878 Mon Sep 17 00:00:00 2001
From: Annaliese McDermond <nh6z@nh6z.net>
Date: Thu, 9 May 2019 10:20:58 +0200
Subject: [PATCH 11/18] ASoC: tlv320aic32x4: Move aosr and dosr setting to
 separate functions

Move these to separate helper functions.  This looks cleaner and fits
better with the new clock setting in CCF.

Signed-off-by: Annaliese McDermond <nh6z@nh6z.net>
Signed-off-by: Mark Brown <broonie@kernel.org>
(cherry picked from commit fbafbf6517274a797e6e6508c18dd8dba5920c89)

backport to 4.14

Signed-off-by: Markus Niebel <Markus.Niebel@tq-group.com>
---
 sound/soc/codecs/tlv320aic32x4.c | 24 +++++++++++++++++-------
 1 file changed, 17 insertions(+), 7 deletions(-)

diff --git a/sound/soc/codecs/tlv320aic32x4.c b/sound/soc/codecs/tlv320aic32x4.c
index 3dda7340e30e..2120816dd4c8 100644
--- a/sound/soc/codecs/tlv320aic32x4.c
+++ b/sound/soc/codecs/tlv320aic32x4.c
@@ -723,6 +723,20 @@ static int aic32x4_set_dai_fmt(struct snd_soc_dai *codec_dai, unsigned int fmt)
 	return 0;
 }
 
+static int aic32x4_set_aosr(struct snd_soc_codec *codec, u8 aosr)
+{
+	return snd_soc_write(codec, AIC32X4_AOSR, aosr);
+}
+
+static int aic32x4_set_dosr(struct snd_soc_codec *codec, u16 dosr)
+{
+	snd_soc_write(codec, AIC32X4_DOSRMSB, dosr >> 8);
+	snd_soc_write(codec, AIC32X4_DOSRLSB,
+		      (dosr & 0xff));
+
+	return 0;
+}
+
 static int aic32x4_set_processing_blocks(struct snd_soc_codec *codec,
 					 u8 r_block, u8 p_block)
 {
@@ -768,14 +782,10 @@ static int aic32x4_setup_clocks(struct snd_soc_codec *codec,
 	clk_set_rate(clocks[4].clk, aic32x4_divs[i].mdac_rate);
 	clk_set_rate(clocks[5].clk, aic32x4_divs[i].bdiv_rate);
 
-	aic32x4_set_processing_blocks(codec, aic32x4_divs[i].r_block, aic32x4_divs[i].p_block);
+	aic32x4_set_aosr(codec, aic32x4_divs[i].aosr);
+	aic32x4_set_dosr(codec, aic32x4_divs[i].dosr);
 
-	/* DOSR MSB & LSB values */
-	snd_soc_write(codec, AIC32X4_DOSRMSB, aic32x4_divs[i].dosr >> 8);
-	snd_soc_write(codec, AIC32X4_DOSRLSB, (aic32x4_divs[i].dosr & 0xff));
-
-	/* AOSR value */
-	snd_soc_write(codec, AIC32X4_AOSR, aic32x4_divs[i].aosr);
+	aic32x4_set_processing_blocks(codec, aic32x4_divs[i].r_block, aic32x4_divs[i].p_block);
 
 	return 0;
 }
